Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_SWITCH
   TK_CASE
   TK_DEFAULT
   TK_EACH
   TK_BREAK
   TK_CONTINUE
   TK_GOTO
   TK_OP_LESS_LESS
   ELSE


State 177 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: COMMAND COMMANDS
    9         | /* empty */

   10 COMMAND: STATEMENT

   11 STATEMENT: E ';'
   12          | RETURN ';'
   13          | COUT ';'
   14          | DECLARATION ';'
   15          | SCOPE
   16          | IF
   17          | WHILE
   18          | DO_WHILE
   19          | FOR
   20          | ';'

   21 RETURN: TK_RETURN E

   22 CNAD: /* empty */

   23 IF: CNAD TK_IF '(' E ')' COMMAND
   24   | CNAD TK_IF '(' E ')' COMMAND TK_ELSE COMMAND

   25 WHILE: CNAD TK_WHILE '(' E ')' COMMAND

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' ';'

   27 FOR: CNAD TK_FOR '(' ';' ';' ')' COMMAND
   28    | CNAD TK_FOR '(' ATTRIBUITION ';' E ';' E ')' COMMAND

   29 E: '(' E ')'
   30  | TERMINAL
   31  | ATTRIBUITION
   32  | '(' TYPE ')' TERMINAL
   33  | E TK_OP_SUM E
   34  | E TK_OP_SUB E
   35  | E TK_OP_MUL E
   36  | E TK_OP_DIV E
   37  | E TK_OP_MOD E
   38  | E TK_OP_LOGIC_OR E
   39  | E TK_OP_LOGIC_AND E
   40  | E TK_OP_REL_EQ E
   41  | E TK_OP_REL_DIFF E
   42  | E TK_OP_REL_LESS E
   43  | E TK_OP_REL_GREATER E
   44  | E TK_OP_REL_EQLESS E
   45  | E TK_OP_REL_EQGREATER E
   46  | E TK_OP_BIN_AND E
   47  | E TK_OP_BIN_OR E
   48  | E TK_OP_BIN_XOR E
   49  | E TK_OP_BIN_SHIFTR E
   50  | E TK_OP_BIN_SHIFTL E
   51  | TK_OP_LOGIC_NOT E
   52  | TK_OP_BIN_NOT E
   53  | INCREASE
   54  | PREV_INCREASE

   55 INCREASE: TK_ID TK_OP_INCREASE

   56 PREV_INCREASE: TK_OP_INCREASE TK_ID

   57 ATTRIBUITION: TK_ID TK_ASSIGN E
   58             | OP_ASSIGN

   59 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   60 COUT: TK_COUT '(' E ')'

   61 DECLARATIONS: DECLARATIONS DECLARATION ';'
   62             | /* empty */

   63 DECLARATION: DECLARATION ',' TK_ID
   64            | DECLARATION ',' TK_ID TK_ASSIGN E
   65            | TYPE TK_ID
   66            | TYPE TK_ID TK_ASSIGN E

   67 TYPE: TK_TYPE_CHAR
   68     | TK_TYPE_STRING
   69     | TK_TYPE_INT
   70     | TK_TYPE_VOID
   71     | TK_TYPE_FLOAT
   72     | TK_TYPE_DOUBLE
   73     | TK_TYPE_BOOL
   74     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   75     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   76     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   77     | TK_MODIFIER_SIGNED TK_TYPE_INT
   78     | TK_MODIFIER_SHORT TK_TYPE_INT
   79     | TK_MODIFIER_LONG TK_TYPE_INT
   80     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
   81     | TK_MODIFIER_SHORT
   82     | TK_MODIFIER_LONG
   83     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   84     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   85     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
   86     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
   87     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   88     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   89     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   90     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
   91     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

   92 TERMINAL: TK_INT
   93         | TK_FLOAT
   94         | TK_SCIENTIFIC
   95         | TK_CHAR
   96         | SIGNAL TK_INT
   97         | SIGNAL TK_FLOAT
   98         | SIGNAL TK_SCIENTIFIC
   99         | SIGNAL TK_CHAR
  100         | TK_STRING
  101         | TK_BOOL
  102         | TK_ID
  103         | SIGNAL TK_ID

  104 SIGNAL: TK_OP_SUM
  105       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 23 24 25 26 27 28 29 32 60
')' (41) 3 4 23 24 25 26 27 28 29 32 60
',' (44) 63 64
';' (59) 11 12 13 14 20 26 27 28 61
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 92 96
TK_FLOAT (259) 93 97
TK_SCIENTIFIC (260) 94 98
TK_CHAR (261) 95 99
TK_STRING (262) 100
TK_BOOL (263) 101
TK_MAIN (264) 3 4
TK_ID (265) 55 56 57 59 63 64 65 66 102 103
TK_TYPE_CHAR (266) 67 74 75
TK_TYPE_STRING (267) 68
TK_TYPE_INT (268) 3 4 69 76 77 78 79 83 84 85 86 87 88 89
TK_TYPE_VOID (269) 3 70
TK_TYPE_FLOAT (270) 71
TK_TYPE_DOUBLE (271) 72 80
TK_TYPE_BOOL (272) 73
TK_MODIFIER_UNSIGNED (273) 74 76 83 85 88 90
TK_MODIFIER_SIGNED (274) 75 77 84 86 89 91
TK_MODIFIER_SHORT (275) 78 81 83 84
TK_MODIFIER_LONG (276) 79 80 82 85 86 87 88 89 90 91
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 33 104
TK_OP_SUB (280) 34 105
TK_OP_MUL (281) 35
TK_OP_DIV (282) 36
TK_OP_MOD (283) 37
TK_OP_REL_LESS (284) 42
TK_OP_REL_GREATER (285) 43
TK_OP_REL_EQLESS (286) 44
TK_OP_REL_EQGREATER (287) 45
TK_OP_REL_EQ (288) 40
TK_OP_REL_DIFF (289) 41
TK_OP_LOGIC_AND (290) 39
TK_OP_LOGIC_OR (291) 38
TK_OP_LOGIC_NOT (292) 51
TK_OP_BIN_AND (293) 46
TK_OP_BIN_OR (294) 47
TK_OP_BIN_XOR (295) 48
TK_OP_BIN_NOT (296) 52
TK_OP_BIN_SHIFTR (297) 49
TK_OP_BIN_SHIFTL (298) 50
TK_ASSIGN (299) 57 64 66
TK_RETURN (300) 21
TK_COUT (301) 60
TK_IF (302) 23 24
TK_ELSE (303) 24
TK_SWITCH (304)
TK_CASE (305)
TK_DEFAULT (306)
TK_FOR (307) 27 28
TK_EACH (308)
TK_WHILE (309) 25 26
TK_DO (310) 26
TK_BREAK (311)
TK_CONTINUE (312)
TK_GOTO (313)
TK_OP_INCREASE (314) 55 56
TK_OP_LESS_LESS (315)
TK_OP_ASSIGN (316) 59
IFX (317)
ELSE (318)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
BEGIN (71)
    on left: 1, on right: 0
START (72)
    on left: 2, on right: 1
MAIN (73)
    on left: 3 4, on right: 1
SCOPE (74)
    on left: 5, on right: 1 15
BEGIN_SCOPE (75)
    on left: 6, on right: 5
END_SCOPE (76)
    on left: 7, on right: 5
COMMANDS (77)
    on left: 8 9, on right: 5 8
COMMAND (78)
    on left: 10, on right: 8 23 24 25 26 27 28
STATEMENT (79)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 10
RETURN (80)
    on left: 21, on right: 12
CNAD (81)
    on left: 22, on right: 23 24 25 26 27 28
IF (82)
    on left: 23 24, on right: 16
WHILE (83)
    on left: 25, on right: 17
DO_WHILE (84)
    on left: 26, on right: 18
FOR (85)
    on left: 27 28, on right: 19
E (86)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52 53 54, on right: 11 21 23 24 25 26 28 29 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 57 59 60
    64 66
INCREASE (87)
    on left: 55, on right: 53
PREV_INCREASE (88)
    on left: 56, on right: 54
ATTRIBUITION (89)
    on left: 57 58, on right: 28 31
OP_ASSIGN (90)
    on left: 59, on right: 58
COUT (91)
    on left: 60, on right: 13
DECLARATIONS (92)
    on left: 61 62, on right: 1 61
DECLARATION (93)
    on left: 63 64 65 66, on right: 14 61 63 64
TYPE (94)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 86 87 88 89 90 91, on right: 32 65 66
TERMINAL (95)
    on left: 92 93 94 95 96 97 98 99 100 101 102 103, on right: 30
    32
SIGNAL (96)
    on left: 104 105, on right: 96 97 98 99 103


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 62 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   61 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   67 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 67 (TYPE)


state 6

   68 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 68 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   69 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 69 (TYPE)


state 8

   70 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 70 (TYPE)


state 9

   71 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 71 (TYPE)


state 10

   72 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 72 (TYPE)


state 11

   73 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 73 (TYPE)


state 12

   74 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   76     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
   83     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   85     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   88     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   90     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   75 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   77     | TK_MODIFIER_SIGNED . TK_TYPE_INT
   84     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   86     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   89     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   91     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

   78 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
   81     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 81 (TYPE)


state 15

   79 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
   80     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
   82     | TK_MODIFIER_LONG .
   87     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 82 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   61 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   63 DECLARATION: DECLARATION . ',' TK_ID
   64            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   65 DECLARATION: TYPE . TK_ID
   66            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   74 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 74 (TYPE)


state 21

   76 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 76 (TYPE)


state 22

   83 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

   85 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   88     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   90     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   75 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 75 (TYPE)


state 25

   77 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 77 (TYPE)


state 26

   84 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

   86 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   89     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   91     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

   78 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 78 (TYPE)


state 29

   79 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 79 (TYPE)


state 30

   80 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 80 (TYPE)


state 31

   87 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    '}'       reduce using rule 9 (COMMANDS)
    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 64
    COMMAND        go to state 65
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 35

   61 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 61 (DECLARATIONS)


state 36

   63 DECLARATION: DECLARATION ',' . TK_ID
   64            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 82


state 37

   65 DECLARATION: TYPE TK_ID .
   66            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 83

    $default  reduce using rule 65 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 84
    ')'           shift, and go to state 85


state 39

   83 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 83 (TYPE)


state 40

   85 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 85 (TYPE)


state 41

   88 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   90     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 86

    $default  reduce using rule 90 (TYPE)


state 42

   84 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 84 (TYPE)


state 43

   86 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 86 (TYPE)


state 44

   89 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   91     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 87

    $default  reduce using rule 91 (TYPE)


state 45

   87 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 87 (TYPE)


state 46

   92 TERMINAL: TK_INT .

    $default  reduce using rule 92 (TERMINAL)


state 47

   93 TERMINAL: TK_FLOAT .

    $default  reduce using rule 93 (TERMINAL)


state 48

   94 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 94 (TERMINAL)


state 49

   95 TERMINAL: TK_CHAR .

    $default  reduce using rule 95 (TERMINAL)


state 50

  100 TERMINAL: TK_STRING .

    $default  reduce using rule 100 (TERMINAL)


state 51

  101 TERMINAL: TK_BOOL .

    $default  reduce using rule 101 (TERMINAL)


state 52

   55 INCREASE: TK_ID . TK_OP_INCREASE
   57 ATTRIBUITION: TK_ID . TK_ASSIGN E
   59 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  102 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 88
    TK_OP_INCREASE  shift, and go to state 89
    TK_OP_ASSIGN    shift, and go to state 90

    $default  reduce using rule 102 (TERMINAL)


state 53

   69 TYPE: TK_TYPE_INT .

    $default  reduce using rule 69 (TYPE)


state 54

  104 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 104 (SIGNAL)


state 55

  105 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 105 (SIGNAL)


state 56

   51 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 91
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 57

   52 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 92
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 58

   21 RETURN: TK_RETURN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 93
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 59

   60 COUT: TK_COUT . '(' E ')'

    '('  shift, and go to state 94


state 60

   56 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 95


state 61

   29 E: '(' . E ')'
   32  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61

    E              go to state 96
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TYPE           go to state 97
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 62

   20 STATEMENT: ';' .

    $default  reduce using rule 20 (STATEMENT)


state 63

   15 STATEMENT: SCOPE .

    $default  reduce using rule 15 (STATEMENT)


state 64

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 98

    END_SCOPE  go to state 99


state 65

    8 COMMANDS: COMMAND . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    '}'       reduce using rule 9 (COMMANDS)
    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 100
    COMMAND        go to state 65
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 66

   10 COMMAND: STATEMENT .

    $default  reduce using rule 10 (COMMAND)


state 67

   12 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 101


state 68

   23 IF: CNAD . TK_IF '(' E ')' COMMAND
   24   | CNAD . TK_IF '(' E ')' COMMAND TK_ELSE COMMAND
   25 WHILE: CNAD . TK_WHILE '(' E ')' COMMAND
   26 DO_WHILE: CNAD . TK_DO COMMAND TK_WHILE '(' E ')' ';'
   27 FOR: CNAD . TK_FOR '(' ';' ';' ')' COMMAND
   28    | CNAD . TK_FOR '(' ATTRIBUITION ';' E ';' E ')' COMMAND

    TK_IF     shift, and go to state 102
    TK_FOR    shift, and go to state 103
    TK_WHILE  shift, and go to state 104
    TK_DO     shift, and go to state 105


state 69

   16 STATEMENT: IF .

    $default  reduce using rule 16 (STATEMENT)


state 70

   17 STATEMENT: WHILE .

    $default  reduce using rule 17 (STATEMENT)


state 71

   18 STATEMENT: DO_WHILE .

    $default  reduce using rule 18 (STATEMENT)


state 72

   19 STATEMENT: FOR .

    $default  reduce using rule 19 (STATEMENT)


state 73

   11 STATEMENT: E . ';'
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ';'                  shift, and go to state 124


state 74

   53 E: INCREASE .

    $default  reduce using rule 53 (E)


state 75

   54 E: PREV_INCREASE .

    $default  reduce using rule 54 (E)


state 76

   31 E: ATTRIBUITION .

    $default  reduce using rule 31 (E)


state 77

   58 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 58 (ATTRIBUITION)


state 78

   13 STATEMENT: COUT . ';'

    ';'  shift, and go to state 125


state 79

   14 STATEMENT: DECLARATION . ';'
   63 DECLARATION: DECLARATION . ',' TK_ID
   64            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 126
    ','  shift, and go to state 36


state 80

   30 E: TERMINAL .

    $default  reduce using rule 30 (E)


state 81

   96 TERMINAL: SIGNAL . TK_INT
   97         | SIGNAL . TK_FLOAT
   98         | SIGNAL . TK_SCIENTIFIC
   99         | SIGNAL . TK_CHAR
  103         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 127
    TK_FLOAT       shift, and go to state 128
    TK_SCIENTIFIC  shift, and go to state 129
    TK_CHAR        shift, and go to state 130
    TK_ID          shift, and go to state 131


state 82

   63 DECLARATION: DECLARATION ',' TK_ID .
   64            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 132

    $default  reduce using rule 63 (DECLARATION)


state 83

   66 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 133
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 84

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 134


state 85

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 86

   88 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 88 (TYPE)


state 87

   89 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 89 (TYPE)


state 88

   57 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 135
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 89

   55 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 55 (INCREASE)


state 90

   59 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 136
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 91

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   51  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 51 (E)


state 92

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   52  | TK_OP_BIN_NOT E .

    $default  reduce using rule 52 (E)


state 93

   21 RETURN: TK_RETURN E .
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 21 (RETURN)


state 94

   60 COUT: TK_COUT '(' . E ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 137
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 95

   56 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 56 (PREV_INCREASE)


state 96

   29 E: '(' E . ')'
   33  | E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 138


state 97

   32 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 139


state 98

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 99

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 100

    8 COMMANDS: COMMAND COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 101

   12 STATEMENT: RETURN ';' .

    $default  reduce using rule 12 (STATEMENT)


state 102

   23 IF: CNAD TK_IF . '(' E ')' COMMAND
   24   | CNAD TK_IF . '(' E ')' COMMAND TK_ELSE COMMAND

    '('  shift, and go to state 140


state 103

   27 FOR: CNAD TK_FOR . '(' ';' ';' ')' COMMAND
   28    | CNAD TK_FOR . '(' ATTRIBUITION ';' E ';' E ')' COMMAND

    '('  shift, and go to state 141


state 104

   25 WHILE: CNAD TK_WHILE . '(' E ')' COMMAND

    '('  shift, and go to state 142


state 105

   26 DO_WHILE: CNAD TK_DO . COMMAND TK_WHILE '(' E ')' ';'

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 143
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 106

   33 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 144
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 107

   34 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 145
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 108

   35 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 146
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 109

   36 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 147
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 110

   37 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 148
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 111

   42 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 149
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 112

   43 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 150
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 113

   44 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 151
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 114

   45 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 152
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 115

   40 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 153
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 116

   41 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 154
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 117

   39 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 155
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 118

   38 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 156
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 119

   46 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 157
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 120

   47 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 158
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 121

   48 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 159
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 122

   49 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 160
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 123

   50 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 161
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 124

   11 STATEMENT: E ';' .

    $default  reduce using rule 11 (STATEMENT)


state 125

   13 STATEMENT: COUT ';' .

    $default  reduce using rule 13 (STATEMENT)


state 126

   14 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 14 (STATEMENT)


state 127

   96 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 96 (TERMINAL)


state 128

   97 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 97 (TERMINAL)


state 129

   98 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 98 (TERMINAL)


state 130

   99 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 99 (TERMINAL)


state 131

  103 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 103 (TERMINAL)


state 132

   64 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 162
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 133

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   66 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 66 (DECLARATION)


state 134

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 135

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   57 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 57 (ATTRIBUITION)


state 136

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   59 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 59 (OP_ASSIGN)


state 137

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   60 COUT: TK_COUT '(' E . ')'

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 163


state 138

   29 E: '(' E ')' .

    $default  reduce using rule 29 (E)


state 139

   32 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 164
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 165
    SIGNAL    go to state 81


state 140

   23 IF: CNAD TK_IF '(' . E ')' COMMAND
   24   | CNAD TK_IF '(' . E ')' COMMAND TK_ELSE COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 166
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 141

   27 FOR: CNAD TK_FOR '(' . ';' ';' ')' COMMAND
   28    | CNAD TK_FOR '(' . ATTRIBUITION ';' E ';' E ')' COMMAND

    TK_ID  shift, and go to state 167
    ';'    shift, and go to state 168

    ATTRIBUITION  go to state 169
    OP_ASSIGN     go to state 77


state 142

   25 WHILE: CNAD TK_WHILE '(' . E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 170
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 143

   26 DO_WHILE: CNAD TK_DO COMMAND . TK_WHILE '(' E ')' ';'

    TK_WHILE  shift, and go to state 171


state 144

   33 E: E . TK_OP_SUM E
   33  | E TK_OP_SUM E .
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 33 (E)


state 145

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   34  | E TK_OP_SUB E .
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 34 (E)


state 146

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   35  | E TK_OP_MUL E .
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 35 (E)


state 147

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   36  | E TK_OP_DIV E .
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 36 (E)


state 148

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   37  | E TK_OP_MOD E .
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 37 (E)


state 149

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   42  | E TK_OP_REL_LESS E .
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 42 (E)


state 150

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   43  | E TK_OP_REL_GREATER E .
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 43 (E)


state 151

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   44  | E TK_OP_REL_EQLESS E .
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 44 (E)


state 152

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   45  | E TK_OP_REL_EQGREATER E .
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 45 (E)


state 153

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   40  | E TK_OP_REL_EQ E .
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 40 (E)


state 154

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   41  | E TK_OP_REL_DIFF E .
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 41 (E)


state 155

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   39  | E TK_OP_LOGIC_AND E .
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 39 (E)


state 156

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   38  | E TK_OP_LOGIC_OR E .
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 38 (E)


state 157

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   46  | E TK_OP_BIN_AND E .
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 46 (E)


state 158

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   47  | E TK_OP_BIN_OR E .
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 47 (E)


state 159

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   48  | E TK_OP_BIN_XOR E .
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 48 (E)


state 160

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   49  | E TK_OP_BIN_SHIFTR E .
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 49 (E)


state 161

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   50  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 50 (E)


state 162

   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E
   64 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 64 (DECLARATION)


state 163

   60 COUT: TK_COUT '(' E ')' .

    $default  reduce using rule 60 (COUT)


state 164

  102 TERMINAL: TK_ID .

    $default  reduce using rule 102 (TERMINAL)


state 165

   32 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 32 (E)


state 166

   23 IF: CNAD TK_IF '(' E . ')' COMMAND
   24   | CNAD TK_IF '(' E . ')' COMMAND TK_ELSE COMMAND
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 172


state 167

   57 ATTRIBUITION: TK_ID . TK_ASSIGN E
   59 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E

    TK_ASSIGN     shift, and go to state 88
    TK_OP_ASSIGN  shift, and go to state 90


state 168

   27 FOR: CNAD TK_FOR '(' ';' . ';' ')' COMMAND

    ';'  shift, and go to state 173


state 169

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION . ';' E ';' E ')' COMMAND

    ';'  shift, and go to state 174


state 170

   25 WHILE: CNAD TK_WHILE '(' E . ')' COMMAND
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 175


state 171

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE . '(' E ')' ';'

    '('  shift, and go to state 176


state 172

   23 IF: CNAD TK_IF '(' E ')' . COMMAND
   24   | CNAD TK_IF '(' E ')' . COMMAND TK_ELSE COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 177
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 173

   27 FOR: CNAD TK_FOR '(' ';' ';' . ')' COMMAND

    ')'  shift, and go to state 178


state 174

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION ';' . E ';' E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 179
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 175

   25 WHILE: CNAD TK_WHILE '(' E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 180
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 176

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' . E ')' ';'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 181
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 177

   23 IF: CNAD TK_IF '(' E ')' COMMAND .
   24   | CNAD TK_IF '(' E ')' COMMAND . TK_ELSE COMMAND

    TK_ELSE  shift, and go to state 182

    TK_ELSE   [reduce using rule 23 (IF)]
    $default  reduce using rule 23 (IF)


state 178

   27 FOR: CNAD TK_FOR '(' ';' ';' ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 183
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 179

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION ';' E . ';' E ')' COMMAND
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ';'                  shift, and go to state 184


state 180

   25 WHILE: CNAD TK_WHILE '(' E ')' COMMAND .

    $default  reduce using rule 25 (WHILE)


state 181

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E . ')' ';'
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 185


state 182

   24 IF: CNAD TK_IF '(' E ')' COMMAND TK_ELSE . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 186
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 183

   27 FOR: CNAD TK_FOR '(' ';' ';' ')' COMMAND .

    $default  reduce using rule 27 (FOR)


state 184

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION ';' E ';' . E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 187
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 185

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' . ';'

    ';'  shift, and go to state 188


state 186

   24 IF: CNAD TK_IF '(' E ')' COMMAND TK_ELSE COMMAND .

    $default  reduce using rule 24 (IF)


state 187

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION ';' E ';' E . ')' COMMAND
   33 E: E . TK_OP_SUM E
   34  | E . TK_OP_SUB E
   35  | E . TK_OP_MUL E
   36  | E . TK_OP_DIV E
   37  | E . TK_OP_MOD E
   38  | E . TK_OP_LOGIC_OR E
   39  | E . TK_OP_LOGIC_AND E
   40  | E . TK_OP_REL_EQ E
   41  | E . TK_OP_REL_DIFF E
   42  | E . TK_OP_REL_LESS E
   43  | E . TK_OP_REL_GREATER E
   44  | E . TK_OP_REL_EQLESS E
   45  | E . TK_OP_REL_EQGREATER E
   46  | E . TK_OP_BIN_AND E
   47  | E . TK_OP_BIN_OR E
   48  | E . TK_OP_BIN_XOR E
   49  | E . TK_OP_BIN_SHIFTR E
   50  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 189


state 188

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' ';' .

    $default  reduce using rule 26 (DO_WHILE)


state 189

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION ';' E ';' E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 190
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 190

   28 FOR: CNAD TK_FOR '(' ATTRIBUITION ';' E ';' E ')' COMMAND .

    $default  reduce using rule 28 (FOR)
