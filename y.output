Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_SWITCH
   TK_CASE
   TK_DEFAULT
   TK_EACH
   TK_BREAK
   TK_CONTINUE
   TK_OP_LESS_LESS
   ELSE


State 191 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: COMMAND COMMANDS
    9         | /* empty */

   10 COMMAND: STATEMENT

   11 STATEMENT: E ';'
   12          | RETURN ';'
   13          | COUT ';'
   14          | DECLARATION ';'
   15          | SCOPE
   16          | IF
   17          | WHILE
   18          | DO_WHILE
   19          | FOR
   20          | LABEL
   21          | GOTO ';'
   22          | ';'

   23 RETURN: TK_RETURN E

   24 IF_C: TK_IF

   25 IF: IF_C '(' E ')' COMMAND
   26   | IF_C '(' E ')' COMMAND TK_ELSE COMMAND

   27 WHILE_C: TK_WHILE

   28 WHILE: WHILE_C '(' E ')' COMMAND

   29 DO_WHILE_C: TK_DO

   30 DO_WHILE: DO_WHILE_C COMMAND TK_WHILE '(' E ')' ';'

   31 OPTIONAL_E: E
   32           | /* empty */

   33 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E
   34                          | DECLARATION

   35 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION
   36                         | TERMINAL

   37 FOR_C: TK_FOR

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   39    | FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

   40 LABEL: TK_ID TK_GO_LABEL

   41 GOTO: TK_GOTO TK_ID

   42 E: '(' E ')'
   43  | TERMINAL
   44  | ATTRIBUITION
   45  | '(' TYPE ')' TERMINAL
   46  | E TK_OP_SUM E
   47  | E TK_OP_SUB E
   48  | E TK_OP_MUL E
   49  | E TK_OP_DIV E
   50  | E TK_OP_MOD E
   51  | E TK_OP_LOGIC_OR E
   52  | E TK_OP_LOGIC_AND E
   53  | E TK_OP_REL_EQ E
   54  | E TK_OP_REL_DIFF E
   55  | E TK_OP_REL_LESS E
   56  | E TK_OP_REL_GREATER E
   57  | E TK_OP_REL_EQLESS E
   58  | E TK_OP_REL_EQGREATER E
   59  | E TK_OP_BIN_AND E
   60  | E TK_OP_BIN_OR E
   61  | E TK_OP_BIN_XOR E
   62  | E TK_OP_BIN_SHIFTR E
   63  | E TK_OP_BIN_SHIFTL E
   64  | TK_OP_LOGIC_NOT E
   65  | TK_OP_BIN_NOT E
   66  | INCREASE
   67  | PREV_INCREASE

   68 INCREASE: TK_ID TK_OP_INCREASE

   69 PREV_INCREASE: TK_OP_INCREASE TK_ID

   70 ATTRIBUITION: TK_ID TK_ASSIGN E
   71             | OP_ASSIGN

   72 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   73 COUT: TK_COUT '(' E ')'

   74 DECLARATIONS: DECLARATIONS DECLARATION ';'
   75             | /* empty */

   76 DECLARATION: DECLARATION ',' TK_ID
   77            | DECLARATION ',' TK_ID TK_ASSIGN E
   78            | TYPE TK_ID
   79            | TYPE TK_ID TK_ASSIGN E

   80 TYPE: TK_TYPE_CHAR
   81     | TK_TYPE_STRING
   82     | TK_TYPE_INT
   83     | TK_TYPE_VOID
   84     | TK_TYPE_FLOAT
   85     | TK_TYPE_DOUBLE
   86     | TK_TYPE_BOOL
   87     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   88     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   89     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   90     | TK_MODIFIER_SIGNED TK_TYPE_INT
   91     | TK_MODIFIER_SHORT TK_TYPE_INT
   92     | TK_MODIFIER_LONG TK_TYPE_INT
   93     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
   94     | TK_MODIFIER_SHORT
   95     | TK_MODIFIER_LONG
   96     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   97     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   98     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
   99     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
  100     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  101     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  102     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  103     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
  104     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

  105 TERMINAL: TK_INT
  106         | TK_FLOAT
  107         | TK_SCIENTIFIC
  108         | TK_CHAR
  109         | SIGNAL TK_INT
  110         | SIGNAL TK_FLOAT
  111         | SIGNAL TK_SCIENTIFIC
  112         | SIGNAL TK_CHAR
  113         | TK_STRING
  114         | TK_BOOL
  115         | TK_ID
  116         | SIGNAL TK_ID

  117 SIGNAL: TK_OP_SUM
  118       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 25 26 28 30 38 39 42 45 73
')' (41) 3 4 25 26 28 30 38 39 42 45 73
',' (44) 76 77
';' (59) 11 12 13 14 21 22 30 38 74
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 105 109
TK_FLOAT (259) 106 110
TK_SCIENTIFIC (260) 107 111
TK_CHAR (261) 108 112
TK_STRING (262) 113
TK_BOOL (263) 114
TK_MAIN (264) 3 4
TK_ID (265) 40 41 68 69 70 72 76 77 78 79 115 116
TK_TYPE_CHAR (266) 80 87 88
TK_TYPE_STRING (267) 81
TK_TYPE_INT (268) 3 4 82 89 90 91 92 96 97 98 99 100 101 102
TK_TYPE_VOID (269) 3 83
TK_TYPE_FLOAT (270) 84
TK_TYPE_DOUBLE (271) 85 93
TK_TYPE_BOOL (272) 86
TK_MODIFIER_UNSIGNED (273) 87 89 96 98 101 103
TK_MODIFIER_SIGNED (274) 88 90 97 99 102 104
TK_MODIFIER_SHORT (275) 91 94 96 97
TK_MODIFIER_LONG (276) 92 93 95 98 99 100 101 102 103 104
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 46 117
TK_OP_SUB (280) 47 118
TK_OP_MUL (281) 48
TK_OP_DIV (282) 49
TK_OP_MOD (283) 50
TK_OP_REL_LESS (284) 55
TK_OP_REL_GREATER (285) 56
TK_OP_REL_EQLESS (286) 57
TK_OP_REL_EQGREATER (287) 58
TK_OP_REL_EQ (288) 53
TK_OP_REL_DIFF (289) 54
TK_OP_LOGIC_AND (290) 52
TK_OP_LOGIC_OR (291) 51
TK_OP_LOGIC_NOT (292) 64
TK_OP_BIN_AND (293) 59
TK_OP_BIN_OR (294) 60
TK_OP_BIN_XOR (295) 61
TK_OP_BIN_NOT (296) 65
TK_OP_BIN_SHIFTR (297) 62
TK_OP_BIN_SHIFTL (298) 63
TK_ASSIGN (299) 70 77 79
TK_RETURN (300) 23
TK_COUT (301) 73
TK_IF (302) 24
TK_ELSE (303) 26
TK_SWITCH (304)
TK_CASE (305)
TK_DEFAULT (306)
TK_FOR (307) 37
TK_EACH (308)
TK_WHILE (309) 27 30
TK_DO (310) 29
TK_BREAK (311)
TK_CONTINUE (312)
TK_GOTO (313) 41
TK_OP_INCREASE (314) 68 69
TK_OP_LESS_LESS (315)
TK_OP_ASSIGN (316) 72
TK_DOT_DOT (317) 39
TK_GO_LABEL (318) 40
IFX (319)
ELSE (320)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
BEGIN (73)
    on left: 1, on right: 0
START (74)
    on left: 2, on right: 1
MAIN (75)
    on left: 3 4, on right: 1
SCOPE (76)
    on left: 5, on right: 1 15
BEGIN_SCOPE (77)
    on left: 6, on right: 5
END_SCOPE (78)
    on left: 7, on right: 5
COMMANDS (79)
    on left: 8 9, on right: 5 8
COMMAND (80)
    on left: 10, on right: 8 25 26 28 30 38 39
STATEMENT (81)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22, on right: 10
RETURN (82)
    on left: 23, on right: 12
IF_C (83)
    on left: 24, on right: 25 26
IF (84)
    on left: 25 26, on right: 16
WHILE_C (85)
    on left: 27, on right: 28
WHILE (86)
    on left: 28, on right: 17
DO_WHILE_C (87)
    on left: 29, on right: 30
DO_WHILE (88)
    on left: 30, on right: 18
OPTIONAL_E (89)
    on left: 31 32, on right: 33 38
OPTIONAL_E_OR_DECLARATION (90)
    on left: 33 34, on right: 38
ATTRIBUITION_OR_TERMINAL (91)
    on left: 35 36, on right: 39
FOR_C (92)
    on left: 37, on right: 38 39
FOR (93)
    on left: 38 39, on right: 19
LABEL (94)
    on left: 40, on right: 20
GOTO (95)
    on left: 41, on right: 21
E (96)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 65 66 67, on right: 11 23 25 26 28 30 31 42 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 70 72 73
    77 79
INCREASE (97)
    on left: 68, on right: 66
PREV_INCREASE (98)
    on left: 69, on right: 67
ATTRIBUITION (99)
    on left: 70 71, on right: 35 44
OP_ASSIGN (100)
    on left: 72, on right: 71
COUT (101)
    on left: 73, on right: 13
DECLARATIONS (102)
    on left: 74 75, on right: 1 74
DECLARATION (103)
    on left: 76 77 78 79, on right: 14 34 74 76 77
TYPE (104)
    on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 103 104, on right: 45 78 79
TERMINAL (105)
    on left: 105 106 107 108 109 110 111 112 113 114 115 116, on right:
    36 39 43 45
SIGNAL (106)
    on left: 117 118, on right: 109 110 111 112 116


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 75 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   74 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   80 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 80 (TYPE)


state 6

   81 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 81 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   82 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 82 (TYPE)


state 8

   83 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 83 (TYPE)


state 9

   84 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 84 (TYPE)


state 10

   85 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 85 (TYPE)


state 11

   86 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 86 (TYPE)


state 12

   87 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   89     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
   96     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   98     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  101     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  103     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   88 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   90     | TK_MODIFIER_SIGNED . TK_TYPE_INT
   97     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   99     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  102     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  104     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

   91 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
   94     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 94 (TYPE)


state 15

   92 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
   93     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
   95     | TK_MODIFIER_LONG .
  100     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 95 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   74 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   76 DECLARATION: DECLARATION . ',' TK_ID
   77            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   78 DECLARATION: TYPE . TK_ID
   79            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   87 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 87 (TYPE)


state 21

   89 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 89 (TYPE)


state 22

   96 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

   98 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  101     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  103     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   88 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 88 (TYPE)


state 25

   90 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 90 (TYPE)


state 26

   97 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

   99 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  102     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  104     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

   91 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 91 (TYPE)


state 29

   92 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 92 (TYPE)


state 30

   93 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 93 (TYPE)


state 31

  100 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    $default  reduce using rule 9 (COMMANDS)

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 69
    COMMAND        go to state 70
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 35

   74 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 74 (DECLARATIONS)


state 36

   76 DECLARATION: DECLARATION ',' . TK_ID
   77            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 92


state 37

   78 DECLARATION: TYPE TK_ID .
   79            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 93

    $default  reduce using rule 78 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 94
    ')'           shift, and go to state 95


state 39

   96 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 96 (TYPE)


state 40

   98 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 98 (TYPE)


state 41

  101 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  103     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 96

    $default  reduce using rule 103 (TYPE)


state 42

   97 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 97 (TYPE)


state 43

   99 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 99 (TYPE)


state 44

  102 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  104     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 97

    $default  reduce using rule 104 (TYPE)


state 45

  100 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 100 (TYPE)


state 46

  105 TERMINAL: TK_INT .

    $default  reduce using rule 105 (TERMINAL)


state 47

  106 TERMINAL: TK_FLOAT .

    $default  reduce using rule 106 (TERMINAL)


state 48

  107 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 107 (TERMINAL)


state 49

  108 TERMINAL: TK_CHAR .

    $default  reduce using rule 108 (TERMINAL)


state 50

  113 TERMINAL: TK_STRING .

    $default  reduce using rule 113 (TERMINAL)


state 51

  114 TERMINAL: TK_BOOL .

    $default  reduce using rule 114 (TERMINAL)


state 52

   40 LABEL: TK_ID . TK_GO_LABEL
   68 INCREASE: TK_ID . TK_OP_INCREASE
   70 ATTRIBUITION: TK_ID . TK_ASSIGN E
   72 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  115 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 98
    TK_OP_INCREASE  shift, and go to state 99
    TK_OP_ASSIGN    shift, and go to state 100
    TK_GO_LABEL     shift, and go to state 101

    $default  reduce using rule 115 (TERMINAL)


state 53

   82 TYPE: TK_TYPE_INT .

    $default  reduce using rule 82 (TYPE)


state 54

  117 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 117 (SIGNAL)


state 55

  118 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 118 (SIGNAL)


state 56

   64 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 103
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 57

   65 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 104
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 58

   23 RETURN: TK_RETURN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 105
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 59

   73 COUT: TK_COUT . '(' E ')'

    '('  shift, and go to state 106


state 60

   24 IF_C: TK_IF .

    $default  reduce using rule 24 (IF_C)


state 61

   37 FOR_C: TK_FOR .

    $default  reduce using rule 37 (FOR_C)


state 62

   27 WHILE_C: TK_WHILE .

    $default  reduce using rule 27 (WHILE_C)


state 63

   29 DO_WHILE_C: TK_DO .

    $default  reduce using rule 29 (DO_WHILE_C)


state 64

   41 GOTO: TK_GOTO . TK_ID

    TK_ID  shift, and go to state 107


state 65

   69 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 108


state 66

   42 E: '(' . E ')'
   45  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 102
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66

    E              go to state 109
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TYPE           go to state 110
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 67

   22 STATEMENT: ';' .

    $default  reduce using rule 22 (STATEMENT)


state 68

   15 STATEMENT: SCOPE .

    $default  reduce using rule 15 (STATEMENT)


state 69

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 111

    END_SCOPE  go to state 112


state 70

    8 COMMANDS: COMMAND . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    $default  reduce using rule 9 (COMMANDS)

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 113
    COMMAND        go to state 70
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 71

   10 COMMAND: STATEMENT .

    $default  reduce using rule 10 (COMMAND)


state 72

   12 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 114


state 73

   25 IF: IF_C . '(' E ')' COMMAND
   26   | IF_C . '(' E ')' COMMAND TK_ELSE COMMAND

    '('  shift, and go to state 115


state 74

   16 STATEMENT: IF .

    $default  reduce using rule 16 (STATEMENT)


state 75

   28 WHILE: WHILE_C . '(' E ')' COMMAND

    '('  shift, and go to state 116


state 76

   17 STATEMENT: WHILE .

    $default  reduce using rule 17 (STATEMENT)


state 77

   30 DO_WHILE: DO_WHILE_C . COMMAND TK_WHILE '(' E ')' ';'

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 117
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 78

   18 STATEMENT: DO_WHILE .

    $default  reduce using rule 18 (STATEMENT)


state 79

   38 FOR: FOR_C . '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   39    | FOR_C . '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

    '('  shift, and go to state 118


state 80

   19 STATEMENT: FOR .

    $default  reduce using rule 19 (STATEMENT)


state 81

   20 STATEMENT: LABEL .

    $default  reduce using rule 20 (STATEMENT)


state 82

   21 STATEMENT: GOTO . ';'

    ';'  shift, and go to state 119


state 83

   11 STATEMENT: E . ';'
   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137
    ';'                  shift, and go to state 138


state 84

   66 E: INCREASE .

    $default  reduce using rule 66 (E)


state 85

   67 E: PREV_INCREASE .

    $default  reduce using rule 67 (E)


state 86

   44 E: ATTRIBUITION .

    $default  reduce using rule 44 (E)


state 87

   71 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 71 (ATTRIBUITION)


state 88

   13 STATEMENT: COUT . ';'

    ';'  shift, and go to state 139


state 89

   14 STATEMENT: DECLARATION . ';'
   76 DECLARATION: DECLARATION . ',' TK_ID
   77            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 140
    ','  shift, and go to state 36


state 90

   43 E: TERMINAL .

    $default  reduce using rule 43 (E)


state 91

  109 TERMINAL: SIGNAL . TK_INT
  110         | SIGNAL . TK_FLOAT
  111         | SIGNAL . TK_SCIENTIFIC
  112         | SIGNAL . TK_CHAR
  116         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 141
    TK_FLOAT       shift, and go to state 142
    TK_SCIENTIFIC  shift, and go to state 143
    TK_CHAR        shift, and go to state 144
    TK_ID          shift, and go to state 145


state 92

   76 DECLARATION: DECLARATION ',' TK_ID .
   77            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 146

    $default  reduce using rule 76 (DECLARATION)


state 93

   79 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 147
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 94

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 148


state 95

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 96

  101 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 101 (TYPE)


state 97

  102 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 102 (TYPE)


state 98

   70 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 149
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 99

   68 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 68 (INCREASE)


state 100

   72 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 150
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 101

   40 LABEL: TK_ID TK_GO_LABEL .

    $default  reduce using rule 40 (LABEL)


state 102

   68 INCREASE: TK_ID . TK_OP_INCREASE
   70 ATTRIBUITION: TK_ID . TK_ASSIGN E
   72 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  115 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 98
    TK_OP_INCREASE  shift, and go to state 99
    TK_OP_ASSIGN    shift, and go to state 100

    $default  reduce using rule 115 (TERMINAL)


state 103

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   64  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 64 (E)


state 104

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   65  | TK_OP_BIN_NOT E .

    $default  reduce using rule 65 (E)


state 105

   23 RETURN: TK_RETURN E .
   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 23 (RETURN)


state 106

   73 COUT: TK_COUT '(' . E ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 151
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 107

   41 GOTO: TK_GOTO TK_ID .

    $default  reduce using rule 41 (GOTO)


state 108

   69 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 69 (PREV_INCREASE)


state 109

   42 E: '(' E . ')'
   46  | E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137
    ')'                  shift, and go to state 152


state 110

   45 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 153


state 111

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 112

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 113

    8 COMMANDS: COMMAND COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 114

   12 STATEMENT: RETURN ';' .

    $default  reduce using rule 12 (STATEMENT)


state 115

   25 IF: IF_C '(' . E ')' COMMAND
   26   | IF_C '(' . E ')' COMMAND TK_ELSE COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 154
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 116

   28 WHILE: WHILE_C '(' . E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 155
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 117

   30 DO_WHILE: DO_WHILE_C COMMAND . TK_WHILE '(' E ')' ';'

    TK_WHILE  shift, and go to state 156


state 118

   38 FOR: FOR_C '(' . OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   39    | FOR_C '(' . ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 102
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66

    $default  reduce using rule 32 (OPTIONAL_E)

    OPTIONAL_E                 go to state 157
    OPTIONAL_E_OR_DECLARATION  go to state 158
    ATTRIBUITION_OR_TERMINAL   go to state 159
    E                          go to state 160
    INCREASE                   go to state 84
    PREV_INCREASE              go to state 85
    ATTRIBUITION               go to state 161
    OP_ASSIGN                  go to state 87
    DECLARATION                go to state 162
    TYPE                       go to state 18
    TERMINAL                   go to state 163
    SIGNAL                     go to state 91


state 119

   21 STATEMENT: GOTO ';' .

    $default  reduce using rule 21 (STATEMENT)


state 120

   46 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 164
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 121

   47 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 165
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 122

   48 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 166
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 123

   49 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 167
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 124

   50 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 168
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 125

   55 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 169
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 126

   56 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 170
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 127

   57 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 171
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 128

   58 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 172
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 129

   53 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 173
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 130

   54 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 174
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 131

   52 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 175
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 132

   51 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 176
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 133

   59 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 177
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 134

   60 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 178
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 135

   61 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 179
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 136

   62 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 180
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 137

   63 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 181
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 138

   11 STATEMENT: E ';' .

    $default  reduce using rule 11 (STATEMENT)


state 139

   13 STATEMENT: COUT ';' .

    $default  reduce using rule 13 (STATEMENT)


state 140

   14 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 14 (STATEMENT)


state 141

  109 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 109 (TERMINAL)


state 142

  110 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 110 (TERMINAL)


state 143

  111 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 111 (TERMINAL)


state 144

  112 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 112 (TERMINAL)


state 145

  116 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 116 (TERMINAL)


state 146

   77 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 182
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 147

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   79 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 79 (DECLARATION)


state 148

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 149

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   70 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 70 (ATTRIBUITION)


state 150

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   72 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 72 (OP_ASSIGN)


state 151

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   73 COUT: TK_COUT '(' E . ')'

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137
    ')'                  shift, and go to state 183


state 152

   42 E: '(' E ')' .

    $default  reduce using rule 42 (E)


state 153

   45 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 184
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 185
    SIGNAL    go to state 91


state 154

   25 IF: IF_C '(' E . ')' COMMAND
   26   | IF_C '(' E . ')' COMMAND TK_ELSE COMMAND
   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137
    ')'                  shift, and go to state 186


state 155

   28 WHILE: WHILE_C '(' E . ')' COMMAND
   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137
    ')'                  shift, and go to state 187


state 156

   30 DO_WHILE: DO_WHILE_C COMMAND TK_WHILE . '(' E ')' ';'

    '('  shift, and go to state 188


state 157

   33 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E .

    $default  reduce using rule 33 (OPTIONAL_E_OR_DECLARATION)


state 158

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION . ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    ';'  shift, and go to state 189


state 159

   39 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL . TK_DOT_DOT TERMINAL ')' COMMAND

    TK_DOT_DOT  shift, and go to state 190


state 160

   31 OPTIONAL_E: E .
   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 31 (OPTIONAL_E)


state 161

   35 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION .
   44 E: ATTRIBUITION .

    TK_DOT_DOT  reduce using rule 35 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 44 (E)


state 162

   34 OPTIONAL_E_OR_DECLARATION: DECLARATION .
   76 DECLARATION: DECLARATION . ',' TK_ID
   77            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ','  shift, and go to state 36

    $default  reduce using rule 34 (OPTIONAL_E_OR_DECLARATION)


state 163

   36 ATTRIBUITION_OR_TERMINAL: TERMINAL .
   43 E: TERMINAL .

    TK_DOT_DOT  reduce using rule 36 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 43 (E)


state 164

   46 E: E . TK_OP_SUM E
   46  | E TK_OP_SUM E .
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 121
    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 46 (E)


state 165

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   47  | E TK_OP_SUB E .
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 47 (E)


state 166

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   48  | E TK_OP_MUL E .
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 48 (E)


state 167

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   49  | E TK_OP_DIV E .
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 49 (E)


state 168

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   50  | E TK_OP_MOD E .
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 50 (E)


state 169

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   55  | E TK_OP_REL_LESS E .
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 120
    TK_OP_SUB         shift, and go to state 121
    TK_OP_MUL         shift, and go to state 122
    TK_OP_DIV         shift, and go to state 123
    TK_OP_MOD         shift, and go to state 124
    TK_OP_BIN_AND     shift, and go to state 133
    TK_OP_BIN_OR      shift, and go to state 134
    TK_OP_BIN_XOR     shift, and go to state 135
    TK_OP_BIN_SHIFTR  shift, and go to state 136
    TK_OP_BIN_SHIFTL  shift, and go to state 137

    $default  reduce using rule 55 (E)


state 170

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   56  | E TK_OP_REL_GREATER E .
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 120
    TK_OP_SUB         shift, and go to state 121
    TK_OP_MUL         shift, and go to state 122
    TK_OP_DIV         shift, and go to state 123
    TK_OP_MOD         shift, and go to state 124
    TK_OP_BIN_AND     shift, and go to state 133
    TK_OP_BIN_OR      shift, and go to state 134
    TK_OP_BIN_XOR     shift, and go to state 135
    TK_OP_BIN_SHIFTR  shift, and go to state 136
    TK_OP_BIN_SHIFTL  shift, and go to state 137

    $default  reduce using rule 56 (E)


state 171

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   57  | E TK_OP_REL_EQLESS E .
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 120
    TK_OP_SUB         shift, and go to state 121
    TK_OP_MUL         shift, and go to state 122
    TK_OP_DIV         shift, and go to state 123
    TK_OP_MOD         shift, and go to state 124
    TK_OP_BIN_AND     shift, and go to state 133
    TK_OP_BIN_OR      shift, and go to state 134
    TK_OP_BIN_XOR     shift, and go to state 135
    TK_OP_BIN_SHIFTR  shift, and go to state 136
    TK_OP_BIN_SHIFTL  shift, and go to state 137

    $default  reduce using rule 57 (E)


state 172

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   58  | E TK_OP_REL_EQGREATER E .
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 120
    TK_OP_SUB         shift, and go to state 121
    TK_OP_MUL         shift, and go to state 122
    TK_OP_DIV         shift, and go to state 123
    TK_OP_MOD         shift, and go to state 124
    TK_OP_BIN_AND     shift, and go to state 133
    TK_OP_BIN_OR      shift, and go to state 134
    TK_OP_BIN_XOR     shift, and go to state 135
    TK_OP_BIN_SHIFTR  shift, and go to state 136
    TK_OP_BIN_SHIFTL  shift, and go to state 137

    $default  reduce using rule 58 (E)


state 173

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   53  | E TK_OP_REL_EQ E .
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 53 (E)


state 174

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   54  | E TK_OP_REL_DIFF E .
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 54 (E)


state 175

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   52  | E TK_OP_LOGIC_AND E .
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 52 (E)


state 176

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   51  | E TK_OP_LOGIC_OR E .
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 51 (E)


state 177

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   59  | E TK_OP_BIN_AND E .
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 120
    TK_OP_SUB  shift, and go to state 121
    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 59 (E)


state 178

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   60  | E TK_OP_BIN_OR E .
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 120
    TK_OP_SUB  shift, and go to state 121
    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 60 (E)


state 179

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   61  | E TK_OP_BIN_XOR E .
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 120
    TK_OP_SUB  shift, and go to state 121
    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 61 (E)


state 180

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   62  | E TK_OP_BIN_SHIFTR E .
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 120
    TK_OP_SUB  shift, and go to state 121
    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 62 (E)


state 181

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   63  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 120
    TK_OP_SUB  shift, and go to state 121
    TK_OP_MUL  shift, and go to state 122
    TK_OP_DIV  shift, and go to state 123
    TK_OP_MOD  shift, and go to state 124

    $default  reduce using rule 63 (E)


state 182

   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E
   77 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137

    $default  reduce using rule 77 (DECLARATION)


state 183

   73 COUT: TK_COUT '(' E ')' .

    $default  reduce using rule 73 (COUT)


state 184

  115 TERMINAL: TK_ID .

    $default  reduce using rule 115 (TERMINAL)


state 185

   45 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 45 (E)


state 186

   25 IF: IF_C '(' E ')' . COMMAND
   26   | IF_C '(' E ')' . COMMAND TK_ELSE COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 191
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 187

   28 WHILE: WHILE_C '(' E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 192
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 188

   30 DO_WHILE: DO_WHILE_C COMMAND TK_WHILE '(' . E ')' ';'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    E              go to state 193
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 189

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' . OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    $default  reduce using rule 32 (OPTIONAL_E)

    OPTIONAL_E     go to state 194
    E              go to state 160
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 190

   39 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT . TERMINAL ')' COMMAND

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 184
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 195
    SIGNAL    go to state 91


state 191

   25 IF: IF_C '(' E ')' COMMAND .
   26   | IF_C '(' E ')' COMMAND . TK_ELSE COMMAND

    TK_ELSE  shift, and go to state 196

    TK_ELSE   [reduce using rule 25 (IF)]
    $default  reduce using rule 25 (IF)


state 192

   28 WHILE: WHILE_C '(' E ')' COMMAND .

    $default  reduce using rule 28 (WHILE)


state 193

   30 DO_WHILE: DO_WHILE_C COMMAND TK_WHILE '(' E . ')' ';'
   46 E: E . TK_OP_SUM E
   47  | E . TK_OP_SUB E
   48  | E . TK_OP_MUL E
   49  | E . TK_OP_DIV E
   50  | E . TK_OP_MOD E
   51  | E . TK_OP_LOGIC_OR E
   52  | E . TK_OP_LOGIC_AND E
   53  | E . TK_OP_REL_EQ E
   54  | E . TK_OP_REL_DIFF E
   55  | E . TK_OP_REL_LESS E
   56  | E . TK_OP_REL_GREATER E
   57  | E . TK_OP_REL_EQLESS E
   58  | E . TK_OP_REL_EQGREATER E
   59  | E . TK_OP_BIN_AND E
   60  | E . TK_OP_BIN_OR E
   61  | E . TK_OP_BIN_XOR E
   62  | E . TK_OP_BIN_SHIFTR E
   63  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 120
    TK_OP_SUB            shift, and go to state 121
    TK_OP_MUL            shift, and go to state 122
    TK_OP_DIV            shift, and go to state 123
    TK_OP_MOD            shift, and go to state 124
    TK_OP_REL_LESS       shift, and go to state 125
    TK_OP_REL_GREATER    shift, and go to state 126
    TK_OP_REL_EQLESS     shift, and go to state 127
    TK_OP_REL_EQGREATER  shift, and go to state 128
    TK_OP_REL_EQ         shift, and go to state 129
    TK_OP_REL_DIFF       shift, and go to state 130
    TK_OP_LOGIC_AND      shift, and go to state 131
    TK_OP_LOGIC_OR       shift, and go to state 132
    TK_OP_BIN_AND        shift, and go to state 133
    TK_OP_BIN_OR         shift, and go to state 134
    TK_OP_BIN_XOR        shift, and go to state 135
    TK_OP_BIN_SHIFTR     shift, and go to state 136
    TK_OP_BIN_SHIFTL     shift, and go to state 137
    ')'                  shift, and go to state 197


state 194

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E . ';' OPTIONAL_E ')' COMMAND

    ';'  shift, and go to state 198


state 195

   39 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL . ')' COMMAND

    ')'  shift, and go to state 199


state 196

   26 IF: IF_C '(' E ')' COMMAND TK_ELSE . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 200
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 197

   30 DO_WHILE: DO_WHILE_C COMMAND TK_WHILE '(' E ')' . ';'

    ';'  shift, and go to state 201


state 198

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' . OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 102
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 65
    '('              shift, and go to state 66

    $default  reduce using rule 32 (OPTIONAL_E)

    OPTIONAL_E     go to state 202
    E              go to state 160
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 199

   39 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 203
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 200

   26 IF: IF_C '(' E ')' COMMAND TK_ELSE COMMAND .

    $default  reduce using rule 26 (IF)


state 201

   30 DO_WHILE: DO_WHILE_C COMMAND TK_WHILE '(' E ')' ';' .

    $default  reduce using rule 30 (DO_WHILE)


state 202

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E . ')' COMMAND

    ')'  shift, and go to state 204


state 203

   39 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND .

    $default  reduce using rule 39 (FOR)


state 204

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_FOR                shift, and go to state 61
    TK_WHILE              shift, and go to state 62
    TK_DO                 shift, and go to state 63
    TK_GOTO               shift, and go to state 64
    TK_OP_INCREASE        shift, and go to state 65
    '('                   shift, and go to state 66
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 67

    SCOPE          go to state 68
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 205
    STATEMENT      go to state 71
    RETURN         go to state 72
    IF_C           go to state 73
    IF             go to state 74
    WHILE_C        go to state 75
    WHILE          go to state 76
    DO_WHILE_C     go to state 77
    DO_WHILE       go to state 78
    FOR_C          go to state 79
    FOR            go to state 80
    LABEL          go to state 81
    GOTO           go to state 82
    E              go to state 83
    INCREASE       go to state 84
    PREV_INCREASE  go to state 85
    ATTRIBUITION   go to state 86
    OP_ASSIGN      go to state 87
    COUT           go to state 88
    DECLARATION    go to state 89
    TYPE           go to state 18
    TERMINAL       go to state 90
    SIGNAL         go to state 91


state 205

   38 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND .

    $default  reduce using rule 38 (FOR)
