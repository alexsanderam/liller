Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_EACH
   TK_OP_LESS_LESS
   ELSE


State 241 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START TRANSLATION_UNIT

    2 START: /* empty */

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN OPEN_ARGS CLOSE_ARGS

    5 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    6                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    7 EXTERNAL_DECLARATION: DECLARATION ';'
    8                     | FUNCTION
    9                     | FUNCTION_HEADER ';'

   10 FUNCTION: FUNCTION_HEADER SCOPE
   11         | MAIN_HEADER SCOPE

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS CLOSE_ARGS
   13                | TK_ID OPEN_ARGS ARGS CLOSE_ARGS

   14 OPEN_ARGS: '('

   15 CLOSE_ARGS: ')'

   16 ARGS: TYPE OPTIONAL_ID ',' ARGS
   17     | TYPE OPTIONAL_ID
   18     | /* empty */

   19 OPTIONAL_ID: TK_ID
   20            | /* empty */

   21 PARAMETERS: PARAMETERS ',' E
   22           | E

   23 CALL_FUNCTION: COUT
   24              | TK_ID '(' PARAMETERS ')'

   25 COUT: TK_COUT '(' E_C ')'
   26     | TK_COUTN '(' E_C ')'

   27 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

   28 BEGIN_SCOPE: '{'

   29 END_SCOPE: '}'

   30 COMMANDS: STATEMENT COMMANDS
   31         | /* empty */

   32 STATEMENT: E_C ';'
   33          | RETURN ';'
   34          | DECLARATION ';'
   35          | SCOPE
   36          | IF
   37          | WHILE
   38          | DO_WHILE
   39          | FOR
   40          | LABEL STATEMENT
   41          | GOTO ';'
   42          | CONTINUE ';'
   43          | BREAK ';'
   44          | SWITCH
   45          | ';'

   46 RETURN: TK_RETURN E_C

   47 IF_C: TK_IF

   48 IF: IF_C '(' E_C ')' STATEMENT
   49   | IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT

   50 WHILE_C: TK_WHILE

   51 WHILE: WHILE_C '(' E_C ')' STATEMENT

   52 DO_WHILE_C: TK_DO

   53 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';'

   54 OPTIONAL_E: E_C
   55           | /* empty */

   56 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E
   57                          | DECLARATION

   58 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION
   59                         | TERMINAL

   60 FOR_C: TK_FOR

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   62    | FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

   63 LABEL: TK_ID TK_GO_LABEL
   64      | TK_CASE E_C TK_GO_LABEL
   65      | TK_DEFAULT TK_GO_LABEL

   66 GOTO: TK_GOTO TK_ID

   67 CONTINUE: TK_CONTINUE

   68 BREAK: TK_BREAK

   69 SWITCH_C: TK_SWITCH

   70 SWITCH: SWITCH_C '(' E_C ')' STATEMENT

   71 E_C: E

   72 E: '(' E ')'
   73  | CALL_FUNCTION
   74  | TERMINAL
   75  | ATTRIBUITION
   76  | '(' TYPE ')' TERMINAL
   77  | E TK_OP_SUM E
   78  | E TK_OP_SUB E
   79  | E TK_OP_MUL E
   80  | E TK_OP_DIV E
   81  | E TK_OP_MOD E
   82  | E TK_OP_LOGIC_OR E
   83  | E TK_OP_LOGIC_AND E
   84  | E TK_OP_REL_EQ E
   85  | E TK_OP_REL_DIFF E
   86  | E TK_OP_REL_LESS E
   87  | E TK_OP_REL_GREATER E
   88  | E TK_OP_REL_EQLESS E
   89  | E TK_OP_REL_EQGREATER E
   90  | E TK_OP_BIN_AND E
   91  | E TK_OP_BIN_OR E
   92  | E TK_OP_BIN_XOR E
   93  | E TK_OP_BIN_SHIFTR E
   94  | E TK_OP_BIN_SHIFTL E
   95  | TK_OP_LOGIC_NOT E
   96  | TK_OP_BIN_NOT E
   97  | INCREASE
   98  | PREV_INCREASE

   99 INCREASE: TK_ID TK_OP_INCREASE

  100 PREV_INCREASE: TK_OP_INCREASE TK_ID

  101 ATTRIBUITION: TK_ID TK_ASSIGN E
  102             | OP_ASSIGN

  103 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

  104 DECLARATION: DECLARATION ',' TK_ID
  105            | DECLARATION ',' TK_ID TK_ASSIGN E
  106            | TYPE TK_ID
  107            | TYPE TK_ID TK_ASSIGN E

  108 TYPE: TK_TYPE_CHAR
  109     | TK_TYPE_STRING
  110     | TK_TYPE_INT
  111     | TK_TYPE_VOID
  112     | TK_TYPE_FLOAT
  113     | TK_TYPE_DOUBLE
  114     | TK_TYPE_BOOL
  115     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
  116     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
  117     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
  118     | TK_MODIFIER_SIGNED TK_TYPE_INT
  119     | TK_MODIFIER_SHORT TK_TYPE_INT
  120     | TK_MODIFIER_LONG TK_TYPE_INT
  121     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
  122     | TK_MODIFIER_SHORT
  123     | TK_MODIFIER_LONG
  124     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  125     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  126     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
  127     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
  128     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  129     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  130     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  131     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
  132     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

  133 TERMINAL: TK_INT
  134         | TK_FLOAT
  135         | TK_SCIENTIFIC
  136         | TK_CHAR
  137         | SIGNAL TK_INT
  138         | SIGNAL TK_FLOAT
  139         | SIGNAL TK_SCIENTIFIC
  140         | SIGNAL TK_CHAR
  141         | TK_STRING
  142         | TK_BOOL
  143         | TK_ID
  144         | SIGNAL TK_ID

  145 SIGNAL: TK_OP_SUM
  146       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 24 25 26 48 49 51 53 61 62 70 72 76
')' (41) 15 24 25 26 48 49 51 53 61 62 70 72 76
',' (44) 16 21 104 105
';' (59) 7 9 32 33 34 41 42 43 45 53 61
'{' (123) 28
'}' (125) 29
error (256)
TK_INT (258) 133 137
TK_FLOAT (259) 134 138
TK_SCIENTIFIC (260) 135 139
TK_CHAR (261) 136 140
TK_STRING (262) 141
TK_BOOL (263) 142
TK_MAIN (264) 3 4
TK_ID (265) 12 13 19 24 63 66 99 100 101 103 104 105 106 107 143 144
TK_TYPE_CHAR (266) 108 115 116
TK_TYPE_STRING (267) 109
TK_TYPE_INT (268) 3 4 110 117 118 119 120 124 125 126 127 128 129 130
TK_TYPE_VOID (269) 3 111
TK_TYPE_FLOAT (270) 112
TK_TYPE_DOUBLE (271) 113 121
TK_TYPE_BOOL (272) 114
TK_MODIFIER_UNSIGNED (273) 115 117 124 126 129 131
TK_MODIFIER_SIGNED (274) 116 118 125 127 130 132
TK_MODIFIER_SHORT (275) 119 122 124 125
TK_MODIFIER_LONG (276) 120 121 123 126 127 128 129 130 131 132
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 77 145
TK_OP_SUB (280) 78 146
TK_OP_MUL (281) 79
TK_OP_DIV (282) 80
TK_OP_MOD (283) 81
TK_OP_REL_LESS (284) 86
TK_OP_REL_GREATER (285) 87
TK_OP_REL_EQLESS (286) 88
TK_OP_REL_EQGREATER (287) 89
TK_OP_REL_EQ (288) 84
TK_OP_REL_DIFF (289) 85
TK_OP_LOGIC_AND (290) 83
TK_OP_LOGIC_OR (291) 82
TK_OP_LOGIC_NOT (292) 95
TK_OP_BIN_AND (293) 90
TK_OP_BIN_OR (294) 91
TK_OP_BIN_XOR (295) 92
TK_OP_BIN_NOT (296) 96
TK_OP_BIN_SHIFTR (297) 93
TK_OP_BIN_SHIFTL (298) 94
TK_ASSIGN (299) 101 105 107
TK_RETURN (300) 46
TK_COUT (301) 25
TK_COUTN (302) 26
TK_IF (303) 47
TK_ELSE (304) 49
TK_SWITCH (305) 69
TK_CASE (306) 64
TK_DEFAULT (307) 65
TK_FOR (308) 60
TK_EACH (309)
TK_WHILE (310) 50 53
TK_DO (311) 52
TK_BREAK (312) 68
TK_CONTINUE (313) 67
TK_GOTO (314) 66
TK_OP_INCREASE (315) 99 100
TK_OP_LESS_LESS (316)
TK_OP_ASSIGN (317) 103
TK_DOT_DOT (318) 62
TK_GO_LABEL (319) 63 64 65
IFX (320)
ELSE (321)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
BEGIN (74)
    on left: 1, on right: 0
START (75)
    on left: 2, on right: 1
MAIN_HEADER (76)
    on left: 3 4, on right: 11
TRANSLATION_UNIT (77)
    on left: 5 6, on right: 1 6
EXTERNAL_DECLARATION (78)
    on left: 7 8 9, on right: 5 6
FUNCTION (79)
    on left: 10 11, on right: 8
FUNCTION_HEADER (80)
    on left: 12 13, on right: 9 10
OPEN_ARGS (81)
    on left: 14, on right: 3 4 12 13
CLOSE_ARGS (82)
    on left: 15, on right: 3 4 12 13
ARGS (83)
    on left: 16 17 18, on right: 12 13 16
OPTIONAL_ID (84)
    on left: 19 20, on right: 16 17
PARAMETERS (85)
    on left: 21 22, on right: 21 24
CALL_FUNCTION (86)
    on left: 23 24, on right: 73
COUT (87)
    on left: 25 26, on right: 23
SCOPE (88)
    on left: 27, on right: 10 11 35
BEGIN_SCOPE (89)
    on left: 28, on right: 27
END_SCOPE (90)
    on left: 29, on right: 27
COMMANDS (91)
    on left: 30 31, on right: 27 30
STATEMENT (92)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45, on right: 30
    40 48 49 51 53 61 62 70
RETURN (93)
    on left: 46, on right: 33
IF_C (94)
    on left: 47, on right: 48 49
IF (95)
    on left: 48 49, on right: 36
WHILE_C (96)
    on left: 50, on right: 51
WHILE (97)
    on left: 51, on right: 37
DO_WHILE_C (98)
    on left: 52, on right: 53
DO_WHILE (99)
    on left: 53, on right: 38
OPTIONAL_E (100)
    on left: 54 55, on right: 56 61
OPTIONAL_E_OR_DECLARATION (101)
    on left: 56 57, on right: 61
ATTRIBUITION_OR_TERMINAL (102)
    on left: 58 59, on right: 62
FOR_C (103)
    on left: 60, on right: 61 62
FOR (104)
    on left: 61 62, on right: 39
LABEL (105)
    on left: 63 64 65, on right: 40
GOTO (106)
    on left: 66, on right: 41
CONTINUE (107)
    on left: 67, on right: 42
BREAK (108)
    on left: 68, on right: 43
SWITCH_C (109)
    on left: 69, on right: 70
SWITCH (110)
    on left: 70, on right: 44
E_C (111)
    on left: 71, on right: 25 26 32 46 48 49 51 53 54 64 70
E (112)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
    90 91 92 93 94 95 96 97 98, on right: 21 22 71 72 77 78 79 80 81
    82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 101 103 105 107
INCREASE (113)
    on left: 99, on right: 97
PREV_INCREASE (114)
    on left: 100, on right: 98
ATTRIBUITION (115)
    on left: 101 102, on right: 58 75
OP_ASSIGN (116)
    on left: 103, on right: 102
DECLARATION (117)
    on left: 104 105 106 107, on right: 7 34 57 104 105
TYPE (118)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
    122 123 124 125 126 127 128 129 130 131 132, on right: 12 16 17
    76 106 107
TERMINAL (119)
    on left: 133 134 135 136 137 138 139 140 141 142 143 144, on right:
    59 62 74 76
SIGNAL (120)
    on left: 145 146, on right: 137 138 139 140 144


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . TRANSLATION_UNIT

    TK_ID                 shift, and go to state 4
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN_HEADER           go to state 16
    TRANSLATION_UNIT      go to state 17
    EXTERNAL_DECLARATION  go to state 18
    FUNCTION              go to state 19
    FUNCTION_HEADER       go to state 20
    DECLARATION           go to state 21
    TYPE                  go to state 22


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

   13 FUNCTION_HEADER: TK_ID . OPEN_ARGS ARGS CLOSE_ARGS

    '('  shift, and go to state 23

    OPEN_ARGS  go to state 24


state 5

  108 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 108 (TYPE)


state 6

  109 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 109 (TYPE)


state 7

    3 MAIN_HEADER: TK_TYPE_INT . TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT . TK_MAIN OPEN_ARGS CLOSE_ARGS
  110 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 25

    $default  reduce using rule 110 (TYPE)


state 8

  111 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 111 (TYPE)


state 9

  112 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 112 (TYPE)


state 10

  113 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 113 (TYPE)


state 11

  114 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 114 (TYPE)


state 12

  115 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
  117     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
  124     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  126     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  129     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  131     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 26
    TK_TYPE_INT        shift, and go to state 27
    TK_MODIFIER_SHORT  shift, and go to state 28
    TK_MODIFIER_LONG   shift, and go to state 29


state 13

  116 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
  118     | TK_MODIFIER_SIGNED . TK_TYPE_INT
  125     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  127     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  130     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  132     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 30
    TK_TYPE_INT        shift, and go to state 31
    TK_MODIFIER_SHORT  shift, and go to state 32
    TK_MODIFIER_LONG   shift, and go to state 33


state 14

  119 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
  122     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 34

    $default  reduce using rule 122 (TYPE)


state 15

  120 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
  121     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
  123     | TK_MODIFIER_LONG .
  128     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 35
    TK_TYPE_DOUBLE    shift, and go to state 36
    TK_MODIFIER_LONG  shift, and go to state 37

    $default  reduce using rule 123 (TYPE)


state 16

   11 FUNCTION: MAIN_HEADER . SCOPE

    '{'  shift, and go to state 38

    SCOPE        go to state 39
    BEGIN_SCOPE  go to state 40


state 17

    1 BEGIN: START TRANSLATION_UNIT .
    6 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    TK_ID                 shift, and go to state 4
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 1 (BEGIN)

    MAIN_HEADER           go to state 16
    EXTERNAL_DECLARATION  go to state 41
    FUNCTION              go to state 19
    FUNCTION_HEADER       go to state 20
    DECLARATION           go to state 21
    TYPE                  go to state 22


state 18

    5 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


state 19

    8 EXTERNAL_DECLARATION: FUNCTION .

    $default  reduce using rule 8 (EXTERNAL_DECLARATION)


state 20

    9 EXTERNAL_DECLARATION: FUNCTION_HEADER . ';'
   10 FUNCTION: FUNCTION_HEADER . SCOPE

    ';'  shift, and go to state 42
    '{'  shift, and go to state 38

    SCOPE        go to state 43
    BEGIN_SCOPE  go to state 40


state 21

    7 EXTERNAL_DECLARATION: DECLARATION . ';'
  104 DECLARATION: DECLARATION . ',' TK_ID
  105            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 44
    ','  shift, and go to state 45


state 22

   12 FUNCTION_HEADER: TYPE . TK_ID OPEN_ARGS ARGS CLOSE_ARGS
  106 DECLARATION: TYPE . TK_ID
  107            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 46


state 23

   14 OPEN_ARGS: '(' .

    $default  reduce using rule 14 (OPEN_ARGS)


state 24

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS . ARGS CLOSE_ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 48
    TYPE  go to state 49


state 25

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN . OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN . OPEN_ARGS CLOSE_ARGS

    '('  shift, and go to state 23

    OPEN_ARGS  go to state 50


state 26

  115 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 115 (TYPE)


state 27

  117 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 117 (TYPE)


state 28

  124 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 51


state 29

  126 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  129     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  131     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 52
    TK_MODIFIER_LONG  shift, and go to state 53


state 30

  116 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 116 (TYPE)


state 31

  118 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 118 (TYPE)


state 32

  125 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 54


state 33

  127 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  130     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  132     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 55
    TK_MODIFIER_LONG  shift, and go to state 56


state 34

  119 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 119 (TYPE)


state 35

  120 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 120 (TYPE)


state 36

  121 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 121 (TYPE)


state 37

  128 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 57


state 38

   28 BEGIN_SCOPE: '{' .

    $default  reduce using rule 28 (BEGIN_SCOPE)


state 39

   11 FUNCTION: MAIN_HEADER SCOPE .

    $default  reduce using rule 11 (FUNCTION)


state 40

   27 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    $default  reduce using rule 31 (COMMANDS)

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    COMMANDS       go to state 88
    STATEMENT      go to state 89
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 41

    6 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 6 (TRANSLATION_UNIT)


state 42

    9 EXTERNAL_DECLARATION: FUNCTION_HEADER ';' .

    $default  reduce using rule 9 (EXTERNAL_DECLARATION)


state 43

   10 FUNCTION: FUNCTION_HEADER SCOPE .

    $default  reduce using rule 10 (FUNCTION)


state 44

    7 EXTERNAL_DECLARATION: DECLARATION ';' .

    $default  reduce using rule 7 (EXTERNAL_DECLARATION)


state 45

  104 DECLARATION: DECLARATION ',' . TK_ID
  105            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 115


state 46

   12 FUNCTION_HEADER: TYPE TK_ID . OPEN_ARGS ARGS CLOSE_ARGS
  106 DECLARATION: TYPE TK_ID .
  107            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 116
    '('        shift, and go to state 23

    $default  reduce using rule 106 (DECLARATION)

    OPEN_ARGS  go to state 117


state 47

  110 TYPE: TK_TYPE_INT .

    $default  reduce using rule 110 (TYPE)


state 48

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS ARGS . CLOSE_ARGS

    ')'  shift, and go to state 118

    CLOSE_ARGS  go to state 119


state 49

   16 ARGS: TYPE . OPTIONAL_ID ',' ARGS
   17     | TYPE . OPTIONAL_ID

    TK_ID  shift, and go to state 120

    $default  reduce using rule 20 (OPTIONAL_ID)

    OPTIONAL_ID  go to state 121


state 50

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS . TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN OPEN_ARGS . CLOSE_ARGS

    TK_TYPE_VOID  shift, and go to state 122
    ')'           shift, and go to state 118

    CLOSE_ARGS  go to state 123


state 51

  124 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 124 (TYPE)


state 52

  126 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 126 (TYPE)


state 53

  129 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  131     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 124

    $default  reduce using rule 131 (TYPE)


state 54

  125 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 125 (TYPE)


state 55

  127 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 127 (TYPE)


state 56

  130 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  132     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 125

    $default  reduce using rule 132 (TYPE)


state 57

  128 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 128 (TYPE)


state 58

  133 TERMINAL: TK_INT .

    $default  reduce using rule 133 (TERMINAL)


state 59

  134 TERMINAL: TK_FLOAT .

    $default  reduce using rule 134 (TERMINAL)


state 60

  135 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 135 (TERMINAL)


state 61

  136 TERMINAL: TK_CHAR .

    $default  reduce using rule 136 (TERMINAL)


state 62

  141 TERMINAL: TK_STRING .

    $default  reduce using rule 141 (TERMINAL)


state 63

  142 TERMINAL: TK_BOOL .

    $default  reduce using rule 142 (TERMINAL)


state 64

   24 CALL_FUNCTION: TK_ID . '(' PARAMETERS ')'
   63 LABEL: TK_ID . TK_GO_LABEL
   99 INCREASE: TK_ID . TK_OP_INCREASE
  101 ATTRIBUITION: TK_ID . TK_ASSIGN E
  103 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  143 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 126
    TK_OP_INCREASE  shift, and go to state 127
    TK_OP_ASSIGN    shift, and go to state 128
    TK_GO_LABEL     shift, and go to state 129
    '('             shift, and go to state 130

    $default  reduce using rule 143 (TERMINAL)


state 65

  145 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 145 (SIGNAL)


state 66

  146 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 146 (SIGNAL)


state 67

   95 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 132
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 68

   96 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 133
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 69

   46 RETURN: TK_RETURN . E_C

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 134
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 70

   25 COUT: TK_COUT . '(' E_C ')'

    '('  shift, and go to state 135


state 71

   26 COUT: TK_COUTN . '(' E_C ')'

    '('  shift, and go to state 136


state 72

   47 IF_C: TK_IF .

    $default  reduce using rule 47 (IF_C)


state 73

   69 SWITCH_C: TK_SWITCH .

    $default  reduce using rule 69 (SWITCH_C)


state 74

   64 LABEL: TK_CASE . E_C TK_GO_LABEL

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 137
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 75

   65 LABEL: TK_DEFAULT . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 138


state 76

   60 FOR_C: TK_FOR .

    $default  reduce using rule 60 (FOR_C)


state 77

   50 WHILE_C: TK_WHILE .

    $default  reduce using rule 50 (WHILE_C)


state 78

   52 DO_WHILE_C: TK_DO .

    $default  reduce using rule 52 (DO_WHILE_C)


state 79

   68 BREAK: TK_BREAK .

    $default  reduce using rule 68 (BREAK)


state 80

   67 CONTINUE: TK_CONTINUE .

    $default  reduce using rule 67 (CONTINUE)


state 81

   66 GOTO: TK_GOTO . TK_ID

    TK_ID  shift, and go to state 139


state 82

  100 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 140


state 83

   45 STATEMENT: ';' .

    $default  reduce using rule 45 (STATEMENT)


state 84

   72 E: '(' . E ')'
   76  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 131
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_OP_INCREASE        shift, and go to state 82
    '('                   shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 141
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TYPE           go to state 142
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 85

   73 E: CALL_FUNCTION .

    $default  reduce using rule 73 (E)


state 86

   23 CALL_FUNCTION: COUT .

    $default  reduce using rule 23 (CALL_FUNCTION)


state 87

   35 STATEMENT: SCOPE .

    $default  reduce using rule 35 (STATEMENT)


state 88

   27 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 143

    END_SCOPE  go to state 144


state 89

   30 COMMANDS: STATEMENT . COMMANDS

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    $default  reduce using rule 31 (COMMANDS)

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    COMMANDS       go to state 145
    STATEMENT      go to state 89
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 90

   33 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 146


state 91

   48 IF: IF_C . '(' E_C ')' STATEMENT
   49   | IF_C . '(' E_C ')' STATEMENT TK_ELSE STATEMENT

    '('  shift, and go to state 147


state 92

   36 STATEMENT: IF .

    $default  reduce using rule 36 (STATEMENT)


state 93

   51 WHILE: WHILE_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 148


state 94

   37 STATEMENT: WHILE .

    $default  reduce using rule 37 (STATEMENT)


state 95

   53 DO_WHILE: DO_WHILE_C . STATEMENT TK_WHILE '(' E_C ')' ';'

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 149
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 96

   38 STATEMENT: DO_WHILE .

    $default  reduce using rule 38 (STATEMENT)


state 97

   61 FOR: FOR_C . '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   62    | FOR_C . '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    '('  shift, and go to state 150


state 98

   39 STATEMENT: FOR .

    $default  reduce using rule 39 (STATEMENT)


state 99

   40 STATEMENT: LABEL . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 151
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 100

   41 STATEMENT: GOTO . ';'

    ';'  shift, and go to state 152


state 101

   42 STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 153


state 102

   43 STATEMENT: BREAK . ';'

    ';'  shift, and go to state 154


state 103

   70 SWITCH: SWITCH_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 155


state 104

   44 STATEMENT: SWITCH .

    $default  reduce using rule 44 (STATEMENT)


state 105

   32 STATEMENT: E_C . ';'

    ';'  shift, and go to state 156


state 106

   71 E_C: E .
   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 71 (E_C)


state 107

   97 E: INCREASE .

    $default  reduce using rule 97 (E)


state 108

   98 E: PREV_INCREASE .

    $default  reduce using rule 98 (E)


state 109

   75 E: ATTRIBUITION .

    $default  reduce using rule 75 (E)


state 110

  102 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 102 (ATTRIBUITION)


state 111

   34 STATEMENT: DECLARATION . ';'
  104 DECLARATION: DECLARATION . ',' TK_ID
  105            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 175
    ','  shift, and go to state 45


state 112

  106 DECLARATION: TYPE . TK_ID
  107            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 176


state 113

   74 E: TERMINAL .

    $default  reduce using rule 74 (E)


state 114

  137 TERMINAL: SIGNAL . TK_INT
  138         | SIGNAL . TK_FLOAT
  139         | SIGNAL . TK_SCIENTIFIC
  140         | SIGNAL . TK_CHAR
  144         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 177
    TK_FLOAT       shift, and go to state 178
    TK_SCIENTIFIC  shift, and go to state 179
    TK_CHAR        shift, and go to state 180
    TK_ID          shift, and go to state 181


state 115

  104 DECLARATION: DECLARATION ',' TK_ID .
  105            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 182

    $default  reduce using rule 104 (DECLARATION)


state 116

  107 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 183
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 117

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS . ARGS CLOSE_ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 184
    TYPE  go to state 49


state 118

   15 CLOSE_ARGS: ')' .

    $default  reduce using rule 15 (CLOSE_ARGS)


state 119

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS ARGS CLOSE_ARGS .

    $default  reduce using rule 13 (FUNCTION_HEADER)


state 120

   19 OPTIONAL_ID: TK_ID .

    $default  reduce using rule 19 (OPTIONAL_ID)


state 121

   16 ARGS: TYPE OPTIONAL_ID . ',' ARGS
   17     | TYPE OPTIONAL_ID .

    ','  shift, and go to state 185

    $default  reduce using rule 17 (ARGS)


state 122

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID . CLOSE_ARGS

    ')'  shift, and go to state 118

    CLOSE_ARGS  go to state 186


state 123

    4 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS CLOSE_ARGS .

    $default  reduce using rule 4 (MAIN_HEADER)


state 124

  129 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 129 (TYPE)


state 125

  130 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 130 (TYPE)


state 126

  101 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 187
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 127

   99 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 99 (INCREASE)


state 128

  103 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 188
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 129

   63 LABEL: TK_ID TK_GO_LABEL .

    $default  reduce using rule 63 (LABEL)


state 130

   24 CALL_FUNCTION: TK_ID '(' . PARAMETERS ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    PARAMETERS     go to state 189
    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 190
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 131

   24 CALL_FUNCTION: TK_ID . '(' PARAMETERS ')'
   99 INCREASE: TK_ID . TK_OP_INCREASE
  101 ATTRIBUITION: TK_ID . TK_ASSIGN E
  103 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  143 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 126
    TK_OP_INCREASE  shift, and go to state 127
    TK_OP_ASSIGN    shift, and go to state 128
    '('             shift, and go to state 130

    $default  reduce using rule 143 (TERMINAL)


state 132

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
   95  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 95 (E)


state 133

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
   96  | TK_OP_BIN_NOT E .

    $default  reduce using rule 96 (E)


state 134

   46 RETURN: TK_RETURN E_C .

    $default  reduce using rule 46 (RETURN)


state 135

   25 COUT: TK_COUT '(' . E_C ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 191
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 136

   26 COUT: TK_COUTN '(' . E_C ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 192
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 137

   64 LABEL: TK_CASE E_C . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 193


state 138

   65 LABEL: TK_DEFAULT TK_GO_LABEL .

    $default  reduce using rule 65 (LABEL)


state 139

   66 GOTO: TK_GOTO TK_ID .

    $default  reduce using rule 66 (GOTO)


state 140

  100 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 100 (PREV_INCREASE)


state 141

   72 E: '(' E . ')'
   77  | E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174
    ')'                  shift, and go to state 194


state 142

   76 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 195


state 143

   29 END_SCOPE: '}' .

    $default  reduce using rule 29 (END_SCOPE)


state 144

   27 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 27 (SCOPE)


state 145

   30 COMMANDS: STATEMENT COMMANDS .

    $default  reduce using rule 30 (COMMANDS)


state 146

   33 STATEMENT: RETURN ';' .

    $default  reduce using rule 33 (STATEMENT)


state 147

   48 IF: IF_C '(' . E_C ')' STATEMENT
   49   | IF_C '(' . E_C ')' STATEMENT TK_ELSE STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 196
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 148

   51 WHILE: WHILE_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 197
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 149

   53 DO_WHILE: DO_WHILE_C STATEMENT . TK_WHILE '(' E_C ')' ';'

    TK_WHILE  shift, and go to state 198


state 150

   61 FOR: FOR_C '(' . OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   62    | FOR_C '(' . ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 131
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_OP_INCREASE        shift, and go to state 82
    '('                   shift, and go to state 84

    $default  reduce using rule 55 (OPTIONAL_E)

    CALL_FUNCTION              go to state 85
    COUT                       go to state 86
    OPTIONAL_E                 go to state 199
    OPTIONAL_E_OR_DECLARATION  go to state 200
    ATTRIBUITION_OR_TERMINAL   go to state 201
    E_C                        go to state 202
    E                          go to state 106
    INCREASE                   go to state 107
    PREV_INCREASE              go to state 108
    ATTRIBUITION               go to state 203
    OP_ASSIGN                  go to state 110
    DECLARATION                go to state 204
    TYPE                       go to state 112
    TERMINAL                   go to state 205
    SIGNAL                     go to state 114


state 151

   40 STATEMENT: LABEL STATEMENT .

    $default  reduce using rule 40 (STATEMENT)


state 152

   41 STATEMENT: GOTO ';' .

    $default  reduce using rule 41 (STATEMENT)


state 153

   42 STATEMENT: CONTINUE ';' .

    $default  reduce using rule 42 (STATEMENT)


state 154

   43 STATEMENT: BREAK ';' .

    $default  reduce using rule 43 (STATEMENT)


state 155

   70 SWITCH: SWITCH_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 206
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 156

   32 STATEMENT: E_C ';' .

    $default  reduce using rule 32 (STATEMENT)


state 157

   77 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 207
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 158

   78 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 208
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 159

   79 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 209
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 160

   80 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 210
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 161

   81 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 211
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 162

   86 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 212
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 163

   87 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 213
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 164

   88 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 214
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 165

   89 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 215
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 166

   84 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 216
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 167

   85 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 217
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 168

   83 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 218
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 169

   82 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 219
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 170

   90 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 220
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 171

   91 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 221
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 172

   92 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 222
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 173

   93 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 223
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 174

   94 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 224
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 175

   34 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 34 (STATEMENT)


state 176

  106 DECLARATION: TYPE TK_ID .
  107            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 116

    $default  reduce using rule 106 (DECLARATION)


state 177

  137 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 137 (TERMINAL)


state 178

  138 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 138 (TERMINAL)


state 179

  139 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 139 (TERMINAL)


state 180

  140 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 140 (TERMINAL)


state 181

  144 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 144 (TERMINAL)


state 182

  105 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 225
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 183

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
  107 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 107 (DECLARATION)


state 184

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS . CLOSE_ARGS

    ')'  shift, and go to state 118

    CLOSE_ARGS  go to state 226


state 185

   16 ARGS: TYPE OPTIONAL_ID ',' . ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 227
    TYPE  go to state 49


state 186

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS .

    $default  reduce using rule 3 (MAIN_HEADER)


state 187

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
  101 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 101 (ATTRIBUITION)


state 188

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
  103 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 103 (OP_ASSIGN)


state 189

   21 PARAMETERS: PARAMETERS . ',' E
   24 CALL_FUNCTION: TK_ID '(' PARAMETERS . ')'

    ')'  shift, and go to state 228
    ','  shift, and go to state 229


state 190

   22 PARAMETERS: E .
   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 22 (PARAMETERS)


state 191

   25 COUT: TK_COUT '(' E_C . ')'

    ')'  shift, and go to state 230


state 192

   26 COUT: TK_COUTN '(' E_C . ')'

    ')'  shift, and go to state 231


state 193

   64 LABEL: TK_CASE E_C TK_GO_LABEL .

    $default  reduce using rule 64 (LABEL)


state 194

   72 E: '(' E ')' .

    $default  reduce using rule 72 (E)


state 195

   76 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 58
    TK_FLOAT       shift, and go to state 59
    TK_SCIENTIFIC  shift, and go to state 60
    TK_CHAR        shift, and go to state 61
    TK_STRING      shift, and go to state 62
    TK_BOOL        shift, and go to state 63
    TK_ID          shift, and go to state 232
    TK_OP_SUM      shift, and go to state 65
    TK_OP_SUB      shift, and go to state 66

    TERMINAL  go to state 233
    SIGNAL    go to state 114


state 196

   48 IF: IF_C '(' E_C . ')' STATEMENT
   49   | IF_C '(' E_C . ')' STATEMENT TK_ELSE STATEMENT

    ')'  shift, and go to state 234


state 197

   51 WHILE: WHILE_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 235


state 198

   53 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE . '(' E_C ')' ';'

    '('  shift, and go to state 236


state 199

   56 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E .

    $default  reduce using rule 56 (OPTIONAL_E_OR_DECLARATION)


state 200

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION . ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 237


state 201

   62 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL . TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_DOT_DOT  shift, and go to state 238


state 202

   54 OPTIONAL_E: E_C .

    $default  reduce using rule 54 (OPTIONAL_E)


state 203

   58 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION .
   75 E: ATTRIBUITION .

    TK_DOT_DOT  reduce using rule 58 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 75 (E)


state 204

   57 OPTIONAL_E_OR_DECLARATION: DECLARATION .
  104 DECLARATION: DECLARATION . ',' TK_ID
  105            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ','  shift, and go to state 45

    $default  reduce using rule 57 (OPTIONAL_E_OR_DECLARATION)


state 205

   59 ATTRIBUITION_OR_TERMINAL: TERMINAL .
   74 E: TERMINAL .

    TK_DOT_DOT  reduce using rule 59 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 74 (E)


state 206

   70 SWITCH: SWITCH_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 239


state 207

   77 E: E . TK_OP_SUM E
   77  | E TK_OP_SUM E .
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 158
    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 77 (E)


state 208

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   78  | E TK_OP_SUB E .
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 78 (E)


state 209

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   79  | E TK_OP_MUL E .
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 79 (E)


state 210

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   80  | E TK_OP_DIV E .
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 80 (E)


state 211

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   81  | E TK_OP_MOD E .
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 81 (E)


state 212

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   86  | E TK_OP_REL_LESS E .
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 157
    TK_OP_SUB         shift, and go to state 158
    TK_OP_MUL         shift, and go to state 159
    TK_OP_DIV         shift, and go to state 160
    TK_OP_MOD         shift, and go to state 161
    TK_OP_BIN_AND     shift, and go to state 170
    TK_OP_BIN_OR      shift, and go to state 171
    TK_OP_BIN_XOR     shift, and go to state 172
    TK_OP_BIN_SHIFTR  shift, and go to state 173
    TK_OP_BIN_SHIFTL  shift, and go to state 174

    $default  reduce using rule 86 (E)


state 213

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   87  | E TK_OP_REL_GREATER E .
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 157
    TK_OP_SUB         shift, and go to state 158
    TK_OP_MUL         shift, and go to state 159
    TK_OP_DIV         shift, and go to state 160
    TK_OP_MOD         shift, and go to state 161
    TK_OP_BIN_AND     shift, and go to state 170
    TK_OP_BIN_OR      shift, and go to state 171
    TK_OP_BIN_XOR     shift, and go to state 172
    TK_OP_BIN_SHIFTR  shift, and go to state 173
    TK_OP_BIN_SHIFTL  shift, and go to state 174

    $default  reduce using rule 87 (E)


state 214

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   88  | E TK_OP_REL_EQLESS E .
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 157
    TK_OP_SUB         shift, and go to state 158
    TK_OP_MUL         shift, and go to state 159
    TK_OP_DIV         shift, and go to state 160
    TK_OP_MOD         shift, and go to state 161
    TK_OP_BIN_AND     shift, and go to state 170
    TK_OP_BIN_OR      shift, and go to state 171
    TK_OP_BIN_XOR     shift, and go to state 172
    TK_OP_BIN_SHIFTR  shift, and go to state 173
    TK_OP_BIN_SHIFTL  shift, and go to state 174

    $default  reduce using rule 88 (E)


state 215

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   89  | E TK_OP_REL_EQGREATER E .
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 157
    TK_OP_SUB         shift, and go to state 158
    TK_OP_MUL         shift, and go to state 159
    TK_OP_DIV         shift, and go to state 160
    TK_OP_MOD         shift, and go to state 161
    TK_OP_BIN_AND     shift, and go to state 170
    TK_OP_BIN_OR      shift, and go to state 171
    TK_OP_BIN_XOR     shift, and go to state 172
    TK_OP_BIN_SHIFTR  shift, and go to state 173
    TK_OP_BIN_SHIFTL  shift, and go to state 174

    $default  reduce using rule 89 (E)


state 216

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   84  | E TK_OP_REL_EQ E .
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 84 (E)


state 217

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   85  | E TK_OP_REL_DIFF E .
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 85 (E)


state 218

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   83  | E TK_OP_LOGIC_AND E .
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 83 (E)


state 219

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   82  | E TK_OP_LOGIC_OR E .
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 82 (E)


state 220

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   90  | E TK_OP_BIN_AND E .
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 157
    TK_OP_SUB  shift, and go to state 158
    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 90 (E)


state 221

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   91  | E TK_OP_BIN_OR E .
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 157
    TK_OP_SUB  shift, and go to state 158
    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 91 (E)


state 222

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   92  | E TK_OP_BIN_XOR E .
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 157
    TK_OP_SUB  shift, and go to state 158
    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 92 (E)


state 223

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   93  | E TK_OP_BIN_SHIFTR E .
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 157
    TK_OP_SUB  shift, and go to state 158
    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 93 (E)


state 224

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
   94  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 157
    TK_OP_SUB  shift, and go to state 158
    TK_OP_MUL  shift, and go to state 159
    TK_OP_DIV  shift, and go to state 160
    TK_OP_MOD  shift, and go to state 161

    $default  reduce using rule 94 (E)


state 225

   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E
  105 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 105 (DECLARATION)


state 226

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS CLOSE_ARGS .

    $default  reduce using rule 12 (FUNCTION_HEADER)


state 227

   16 ARGS: TYPE OPTIONAL_ID ',' ARGS .

    $default  reduce using rule 16 (ARGS)


state 228

   24 CALL_FUNCTION: TK_ID '(' PARAMETERS ')' .

    $default  reduce using rule 24 (CALL_FUNCTION)


state 229

   21 PARAMETERS: PARAMETERS ',' . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E              go to state 240
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 230

   25 COUT: TK_COUT '(' E_C ')' .

    $default  reduce using rule 25 (COUT)


state 231

   26 COUT: TK_COUTN '(' E_C ')' .

    $default  reduce using rule 26 (COUT)


state 232

  143 TERMINAL: TK_ID .

    $default  reduce using rule 143 (TERMINAL)


state 233

   76 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 76 (E)


state 234

   48 IF: IF_C '(' E_C ')' . STATEMENT
   49   | IF_C '(' E_C ')' . STATEMENT TK_ELSE STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 241
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 235

   51 WHILE: WHILE_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 242
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 236

   53 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' . E_C ')' ';'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    E_C            go to state 243
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 237

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' . OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    $default  reduce using rule 55 (OPTIONAL_E)

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    OPTIONAL_E     go to state 244
    E_C            go to state 202
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 238

   62 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT . TERMINAL ')' STATEMENT

    TK_INT         shift, and go to state 58
    TK_FLOAT       shift, and go to state 59
    TK_SCIENTIFIC  shift, and go to state 60
    TK_CHAR        shift, and go to state 61
    TK_STRING      shift, and go to state 62
    TK_BOOL        shift, and go to state 63
    TK_ID          shift, and go to state 232
    TK_OP_SUM      shift, and go to state 65
    TK_OP_SUB      shift, and go to state 66

    TERMINAL  go to state 245
    SIGNAL    go to state 114


state 239

   70 SWITCH: SWITCH_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 246
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 240

   21 PARAMETERS: PARAMETERS ',' E .
   77 E: E . TK_OP_SUM E
   78  | E . TK_OP_SUB E
   79  | E . TK_OP_MUL E
   80  | E . TK_OP_DIV E
   81  | E . TK_OP_MOD E
   82  | E . TK_OP_LOGIC_OR E
   83  | E . TK_OP_LOGIC_AND E
   84  | E . TK_OP_REL_EQ E
   85  | E . TK_OP_REL_DIFF E
   86  | E . TK_OP_REL_LESS E
   87  | E . TK_OP_REL_GREATER E
   88  | E . TK_OP_REL_EQLESS E
   89  | E . TK_OP_REL_EQGREATER E
   90  | E . TK_OP_BIN_AND E
   91  | E . TK_OP_BIN_OR E
   92  | E . TK_OP_BIN_XOR E
   93  | E . TK_OP_BIN_SHIFTR E
   94  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 157
    TK_OP_SUB            shift, and go to state 158
    TK_OP_MUL            shift, and go to state 159
    TK_OP_DIV            shift, and go to state 160
    TK_OP_MOD            shift, and go to state 161
    TK_OP_REL_LESS       shift, and go to state 162
    TK_OP_REL_GREATER    shift, and go to state 163
    TK_OP_REL_EQLESS     shift, and go to state 164
    TK_OP_REL_EQGREATER  shift, and go to state 165
    TK_OP_REL_EQ         shift, and go to state 166
    TK_OP_REL_DIFF       shift, and go to state 167
    TK_OP_LOGIC_AND      shift, and go to state 168
    TK_OP_LOGIC_OR       shift, and go to state 169
    TK_OP_BIN_AND        shift, and go to state 170
    TK_OP_BIN_OR         shift, and go to state 171
    TK_OP_BIN_XOR        shift, and go to state 172
    TK_OP_BIN_SHIFTR     shift, and go to state 173
    TK_OP_BIN_SHIFTL     shift, and go to state 174

    $default  reduce using rule 21 (PARAMETERS)


state 241

   48 IF: IF_C '(' E_C ')' STATEMENT .
   49   | IF_C '(' E_C ')' STATEMENT . TK_ELSE STATEMENT

    TK_ELSE  shift, and go to state 247

    TK_ELSE   [reduce using rule 48 (IF)]
    $default  reduce using rule 48 (IF)


state 242

   51 WHILE: WHILE_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 51 (WHILE)


state 243

   53 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C . ')' ';'

    ')'  shift, and go to state 248


state 244

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E . ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 249


state 245

   62 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL . ')' STATEMENT

    ')'  shift, and go to state 250


state 246

   70 SWITCH: SWITCH_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 70 (SWITCH)


state 247

   49 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 251
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 248

   53 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' . ';'

    ';'  shift, and go to state 252


state 249

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' . OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 131
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    $default  reduce using rule 55 (OPTIONAL_E)

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    OPTIONAL_E     go to state 253
    E_C            go to state 202
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 250

   62 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 254
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 251

   49 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT .

    $default  reduce using rule 49 (IF)


state 252

   53 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';' .

    $default  reduce using rule 53 (DO_WHILE)


state 253

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E . ')' STATEMENT

    ')'  shift, and go to state 255


state 254

   62 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT .

    $default  reduce using rule 62 (FOR)


state 255

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 85
    COUT           go to state 86
    SCOPE          go to state 87
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 256
    RETURN         go to state 90
    IF_C           go to state 91
    IF             go to state 92
    WHILE_C        go to state 93
    WHILE          go to state 94
    DO_WHILE_C     go to state 95
    DO_WHILE       go to state 96
    FOR_C          go to state 97
    FOR            go to state 98
    LABEL          go to state 99
    GOTO           go to state 100
    CONTINUE       go to state 101
    BREAK          go to state 102
    SWITCH_C       go to state 103
    SWITCH         go to state 104
    E_C            go to state 105
    E              go to state 106
    INCREASE       go to state 107
    PREV_INCREASE  go to state 108
    ATTRIBUITION   go to state 109
    OP_ASSIGN      go to state 110
    DECLARATION    go to state 111
    TYPE           go to state 112
    TERMINAL       go to state 113
    SIGNAL         go to state 114


state 256

   61 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT .

    $default  reduce using rule 61 (FOR)
