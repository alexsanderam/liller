Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_SWITCH
   TK_CASE
   TK_DEFAULT
   TK_FOR
   TK_EACH
   TK_BREAK
   TK_CONTINUE
   TK_GOTO
   TK_OP_LESS_LESS
   ELSE


State 163 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: CONTROL_COMMAND COMMANDS
    9         | /* empty */

   10 CONTROL_COMMAND: COMMAND

   11 COMMAND: E ';'
   12        | RETURN ';'
   13        | COUT ';'
   14        | DECLARATION ';'
   15        | SCOPE
   16        | IF
   17        | WHILE
   18        | ';'

   19 RETURN: TK_RETURN E

   20 IF: TK_IF '(' E ')' COMMAND
   21   | TK_IF '(' E ')' COMMAND TK_ELSE COMMAND

   22 WHILE: TK_WHILE '(' E ')' COMMAND

   23 E: '(' E ')'
   24  | TERMINAL
   25  | ATTRIBUITION
   26  | '(' TYPE ')' TERMINAL
   27  | E TK_OP_SUM E
   28  | E TK_OP_SUB E
   29  | E TK_OP_MUL E
   30  | E TK_OP_DIV E
   31  | E TK_OP_MOD E
   32  | E TK_OP_LOGIC_OR E
   33  | E TK_OP_LOGIC_AND E
   34  | E TK_OP_REL_EQ E
   35  | E TK_OP_REL_DIFF E
   36  | E TK_OP_REL_LESS E
   37  | E TK_OP_REL_GREATER E
   38  | E TK_OP_REL_EQLESS E
   39  | E TK_OP_REL_EQGREATER E
   40  | E TK_OP_BIN_AND E
   41  | E TK_OP_BIN_OR E
   42  | E TK_OP_BIN_XOR E
   43  | E TK_OP_BIN_SHIFTR E
   44  | E TK_OP_BIN_SHIFTL E
   45  | TK_OP_LOGIC_NOT E
   46  | TK_OP_BIN_NOT E
   47  | INCREASE
   48  | PREV_INCREASE

   49 INCREASE: TK_ID TK_OP_INCREASE

   50 PREV_INCREASE: TK_OP_INCREASE TK_ID

   51 ATTRIBUITION: TK_ID TK_ASSIGN E
   52             | OP_ASSIGN

   53 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   54 COUT: TK_COUT '(' E ')'

   55 DECLARATIONS: DECLARATIONS DECLARATION ';'
   56             | /* empty */

   57 DECLARATION: DECLARATION ',' TK_ID
   58            | DECLARATION ',' TK_ID TK_ASSIGN E
   59            | TYPE TK_ID
   60            | TYPE TK_ID TK_ASSIGN E

   61 TYPE: TK_TYPE_CHAR
   62     | TK_TYPE_STRING
   63     | TK_TYPE_INT
   64     | TK_TYPE_VOID
   65     | TK_TYPE_FLOAT
   66     | TK_TYPE_DOUBLE
   67     | TK_TYPE_BOOL
   68     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   69     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   70     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   71     | TK_MODIFIER_SIGNED TK_TYPE_INT
   72     | TK_MODIFIER_SHORT TK_TYPE_INT
   73     | TK_MODIFIER_LONG TK_TYPE_INT
   74     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
   75     | TK_MODIFIER_SHORT
   76     | TK_MODIFIER_LONG
   77     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   78     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   79     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
   80     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
   81     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   83     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   84     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
   85     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

   86 TERMINAL: TK_INT
   87         | TK_FLOAT
   88         | TK_SCIENTIFIC
   89         | TK_CHAR
   90         | SIGNAL TK_INT
   91         | SIGNAL TK_FLOAT
   92         | SIGNAL TK_SCIENTIFIC
   93         | SIGNAL TK_CHAR
   94         | TK_STRING
   95         | TK_BOOL
   96         | TK_ID
   97         | SIGNAL TK_ID

   98 SIGNAL: TK_OP_SUM
   99       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 20 21 22 23 26 54
')' (41) 3 4 20 21 22 23 26 54
',' (44) 57 58
';' (59) 11 12 13 14 18 55
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 86 90
TK_FLOAT (259) 87 91
TK_SCIENTIFIC (260) 88 92
TK_CHAR (261) 89 93
TK_STRING (262) 94
TK_BOOL (263) 95
TK_MAIN (264) 3 4
TK_ID (265) 49 50 51 53 57 58 59 60 96 97
TK_TYPE_CHAR (266) 61 68 69
TK_TYPE_STRING (267) 62
TK_TYPE_INT (268) 3 4 63 70 71 72 73 77 78 79 80 81 82 83
TK_TYPE_VOID (269) 3 64
TK_TYPE_FLOAT (270) 65
TK_TYPE_DOUBLE (271) 66 74
TK_TYPE_BOOL (272) 67
TK_MODIFIER_UNSIGNED (273) 68 70 77 79 82 84
TK_MODIFIER_SIGNED (274) 69 71 78 80 83 85
TK_MODIFIER_SHORT (275) 72 75 77 78
TK_MODIFIER_LONG (276) 73 74 76 79 80 81 82 83 84 85
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 27 98
TK_OP_SUB (280) 28 99
TK_OP_MUL (281) 29
TK_OP_DIV (282) 30
TK_OP_MOD (283) 31
TK_OP_REL_LESS (284) 36
TK_OP_REL_GREATER (285) 37
TK_OP_REL_EQLESS (286) 38
TK_OP_REL_EQGREATER (287) 39
TK_OP_REL_EQ (288) 34
TK_OP_REL_DIFF (289) 35
TK_OP_LOGIC_AND (290) 33
TK_OP_LOGIC_OR (291) 32
TK_OP_LOGIC_NOT (292) 45
TK_OP_BIN_AND (293) 40
TK_OP_BIN_OR (294) 41
TK_OP_BIN_XOR (295) 42
TK_OP_BIN_NOT (296) 46
TK_OP_BIN_SHIFTR (297) 43
TK_OP_BIN_SHIFTL (298) 44
TK_ASSIGN (299) 51 58 60
TK_RETURN (300) 19
TK_COUT (301) 54
TK_IF (302) 20 21
TK_ELSE (303) 21
TK_SWITCH (304)
TK_CASE (305)
TK_DEFAULT (306)
TK_FOR (307)
TK_EACH (308)
TK_WHILE (309) 22
TK_BREAK (310)
TK_CONTINUE (311)
TK_GOTO (312)
TK_OP_INCREASE (313) 49 50
TK_OP_LESS_LESS (314)
TK_OP_ASSIGN (315) 53
IFX (316)
ELSE (317)


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
BEGIN (70)
    on left: 1, on right: 0
START (71)
    on left: 2, on right: 1
MAIN (72)
    on left: 3 4, on right: 1
SCOPE (73)
    on left: 5, on right: 1 15
BEGIN_SCOPE (74)
    on left: 6, on right: 5
END_SCOPE (75)
    on left: 7, on right: 5
COMMANDS (76)
    on left: 8 9, on right: 5 8
CONTROL_COMMAND (77)
    on left: 10, on right: 8
COMMAND (78)
    on left: 11 12 13 14 15 16 17 18, on right: 10 20 21 22
RETURN (79)
    on left: 19, on right: 12
IF (80)
    on left: 20 21, on right: 16
WHILE (81)
    on left: 22, on right: 17
E (82)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47 48, on right: 11 19 20 21 22 23 27 28 29 30
    31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 51 53 54 58 60
INCREASE (83)
    on left: 49, on right: 47
PREV_INCREASE (84)
    on left: 50, on right: 48
ATTRIBUITION (85)
    on left: 51 52, on right: 25
OP_ASSIGN (86)
    on left: 53, on right: 52
COUT (87)
    on left: 54, on right: 13
DECLARATIONS (88)
    on left: 55 56, on right: 1 55
DECLARATION (89)
    on left: 57 58 59 60, on right: 14 55 57 58
TYPE (90)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84 85, on right: 26 59 60
TERMINAL (91)
    on left: 86 87 88 89 90 91 92 93 94 95 96 97, on right: 24 26
SIGNAL (92)
    on left: 98 99, on right: 90 91 92 93 97


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 56 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   55 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   61 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 61 (TYPE)


state 6

   62 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 62 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   63 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 63 (TYPE)


state 8

   64 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 64 (TYPE)


state 9

   65 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 65 (TYPE)


state 10

   66 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 66 (TYPE)


state 11

   67 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 67 (TYPE)


state 12

   68 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   70     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
   77     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   79     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   84     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   69 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   71     | TK_MODIFIER_SIGNED . TK_TYPE_INT
   78     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   80     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   83     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   85     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

   72 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
   75     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 75 (TYPE)


state 15

   73 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
   74     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
   76     | TK_MODIFIER_LONG .
   81     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 76 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   55 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   57 DECLARATION: DECLARATION . ',' TK_ID
   58            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   59 DECLARATION: TYPE . TK_ID
   60            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   68 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 68 (TYPE)


state 21

   70 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 70 (TYPE)


state 22

   77 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

   79 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   84     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   69 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 69 (TYPE)


state 25

   71 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 71 (TYPE)


state 26

   78 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

   80 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   83     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   85     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

   72 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 72 (TYPE)


state 29

   73 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 73 (TYPE)


state 30

   74 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 74 (TYPE)


state 31

   81 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_WHILE              shift, and go to state 61
    TK_OP_INCREASE        shift, and go to state 62
    '('                   shift, and go to state 63
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 64

    $default  reduce using rule 9 (COMMANDS)

    SCOPE            go to state 65
    BEGIN_SCOPE      go to state 34
    COMMANDS         go to state 66
    CONTROL_COMMAND  go to state 67
    COMMAND          go to state 68
    RETURN           go to state 69
    IF               go to state 70
    WHILE            go to state 71
    E                go to state 72
    INCREASE         go to state 73
    PREV_INCREASE    go to state 74
    ATTRIBUITION     go to state 75
    OP_ASSIGN        go to state 76
    COUT             go to state 77
    DECLARATION      go to state 78
    TYPE             go to state 18
    TERMINAL         go to state 79
    SIGNAL           go to state 80


state 35

   55 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 55 (DECLARATIONS)


state 36

   57 DECLARATION: DECLARATION ',' . TK_ID
   58            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 81


state 37

   59 DECLARATION: TYPE TK_ID .
   60            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 82

    $default  reduce using rule 59 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 83
    ')'           shift, and go to state 84


state 39

   77 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 77 (TYPE)


state 40

   79 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 79 (TYPE)


state 41

   82 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   84     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 85

    $default  reduce using rule 84 (TYPE)


state 42

   78 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 78 (TYPE)


state 43

   80 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 80 (TYPE)


state 44

   83 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   85     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 86

    $default  reduce using rule 85 (TYPE)


state 45

   81 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 81 (TYPE)


state 46

   86 TERMINAL: TK_INT .

    $default  reduce using rule 86 (TERMINAL)


state 47

   87 TERMINAL: TK_FLOAT .

    $default  reduce using rule 87 (TERMINAL)


state 48

   88 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 88 (TERMINAL)


state 49

   89 TERMINAL: TK_CHAR .

    $default  reduce using rule 89 (TERMINAL)


state 50

   94 TERMINAL: TK_STRING .

    $default  reduce using rule 94 (TERMINAL)


state 51

   95 TERMINAL: TK_BOOL .

    $default  reduce using rule 95 (TERMINAL)


state 52

   49 INCREASE: TK_ID . TK_OP_INCREASE
   51 ATTRIBUITION: TK_ID . TK_ASSIGN E
   53 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
   96 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 87
    TK_OP_INCREASE  shift, and go to state 88
    TK_OP_ASSIGN    shift, and go to state 89

    $default  reduce using rule 96 (TERMINAL)


state 53

   63 TYPE: TK_TYPE_INT .

    $default  reduce using rule 63 (TYPE)


state 54

   98 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 98 (SIGNAL)


state 55

   99 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 99 (SIGNAL)


state 56

   45 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 90
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 57

   46 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 91
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 58

   19 RETURN: TK_RETURN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 92
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 59

   54 COUT: TK_COUT . '(' E ')'

    '('  shift, and go to state 93


state 60

   20 IF: TK_IF . '(' E ')' COMMAND
   21   | TK_IF . '(' E ')' COMMAND TK_ELSE COMMAND

    '('  shift, and go to state 94


state 61

   22 WHILE: TK_WHILE . '(' E ')' COMMAND

    '('  shift, and go to state 95


state 62

   50 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 96


state 63

   23 E: '(' . E ')'
   26  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 62
    '('                   shift, and go to state 63

    E              go to state 97
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TYPE           go to state 98
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 64

   18 COMMAND: ';' .

    $default  reduce using rule 18 (COMMAND)


state 65

   15 COMMAND: SCOPE .

    $default  reduce using rule 15 (COMMAND)


state 66

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 99

    END_SCOPE  go to state 100


state 67

    8 COMMANDS: CONTROL_COMMAND . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_WHILE              shift, and go to state 61
    TK_OP_INCREASE        shift, and go to state 62
    '('                   shift, and go to state 63
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 64

    $default  reduce using rule 9 (COMMANDS)

    SCOPE            go to state 65
    BEGIN_SCOPE      go to state 34
    COMMANDS         go to state 101
    CONTROL_COMMAND  go to state 67
    COMMAND          go to state 68
    RETURN           go to state 69
    IF               go to state 70
    WHILE            go to state 71
    E                go to state 72
    INCREASE         go to state 73
    PREV_INCREASE    go to state 74
    ATTRIBUITION     go to state 75
    OP_ASSIGN        go to state 76
    COUT             go to state 77
    DECLARATION      go to state 78
    TYPE             go to state 18
    TERMINAL         go to state 79
    SIGNAL           go to state 80


state 68

   10 CONTROL_COMMAND: COMMAND .

    $default  reduce using rule 10 (CONTROL_COMMAND)


state 69

   12 COMMAND: RETURN . ';'

    ';'  shift, and go to state 102


state 70

   16 COMMAND: IF .

    $default  reduce using rule 16 (COMMAND)


state 71

   17 COMMAND: WHILE .

    $default  reduce using rule 17 (COMMAND)


state 72

   11 COMMAND: E . ';'
   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120
    ';'                  shift, and go to state 121


state 73

   47 E: INCREASE .

    $default  reduce using rule 47 (E)


state 74

   48 E: PREV_INCREASE .

    $default  reduce using rule 48 (E)


state 75

   25 E: ATTRIBUITION .

    $default  reduce using rule 25 (E)


state 76

   52 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 52 (ATTRIBUITION)


state 77

   13 COMMAND: COUT . ';'

    ';'  shift, and go to state 122


state 78

   14 COMMAND: DECLARATION . ';'
   57 DECLARATION: DECLARATION . ',' TK_ID
   58            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 123
    ','  shift, and go to state 36


state 79

   24 E: TERMINAL .

    $default  reduce using rule 24 (E)


state 80

   90 TERMINAL: SIGNAL . TK_INT
   91         | SIGNAL . TK_FLOAT
   92         | SIGNAL . TK_SCIENTIFIC
   93         | SIGNAL . TK_CHAR
   97         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 124
    TK_FLOAT       shift, and go to state 125
    TK_SCIENTIFIC  shift, and go to state 126
    TK_CHAR        shift, and go to state 127
    TK_ID          shift, and go to state 128


state 81

   57 DECLARATION: DECLARATION ',' TK_ID .
   58            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 129

    $default  reduce using rule 57 (DECLARATION)


state 82

   60 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 130
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 83

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 131


state 84

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 85

   82 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 82 (TYPE)


state 86

   83 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 83 (TYPE)


state 87

   51 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 132
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 88

   49 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 49 (INCREASE)


state 89

   53 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 133
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 90

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   45  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 45 (E)


state 91

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   46  | TK_OP_BIN_NOT E .

    $default  reduce using rule 46 (E)


state 92

   19 RETURN: TK_RETURN E .
   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 19 (RETURN)


state 93

   54 COUT: TK_COUT '(' . E ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 134
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 94

   20 IF: TK_IF '(' . E ')' COMMAND
   21   | TK_IF '(' . E ')' COMMAND TK_ELSE COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 135
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 95

   22 WHILE: TK_WHILE '(' . E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 136
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 96

   50 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 50 (PREV_INCREASE)


state 97

   23 E: '(' E . ')'
   27  | E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120
    ')'                  shift, and go to state 137


state 98

   26 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 138


state 99

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 100

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 101

    8 COMMANDS: CONTROL_COMMAND COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 102

   12 COMMAND: RETURN ';' .

    $default  reduce using rule 12 (COMMAND)


state 103

   27 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 139
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 104

   28 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 140
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 105

   29 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 141
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 106

   30 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 142
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 107

   31 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 143
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 108

   36 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 144
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 109

   37 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 145
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 110

   38 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 146
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 111

   39 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 147
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 112

   34 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 148
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 113

   35 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 149
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 114

   33 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 150
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 115

   32 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 151
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 116

   40 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 152
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 117

   41 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 153
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 118

   42 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 154
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 119

   43 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 155
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 120

   44 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 156
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 121

   11 COMMAND: E ';' .

    $default  reduce using rule 11 (COMMAND)


state 122

   13 COMMAND: COUT ';' .

    $default  reduce using rule 13 (COMMAND)


state 123

   14 COMMAND: DECLARATION ';' .

    $default  reduce using rule 14 (COMMAND)


state 124

   90 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 90 (TERMINAL)


state 125

   91 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 91 (TERMINAL)


state 126

   92 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 92 (TERMINAL)


state 127

   93 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 93 (TERMINAL)


state 128

   97 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 97 (TERMINAL)


state 129

   58 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 62
    '('              shift, and go to state 63

    E              go to state 157
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 130

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   60 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 60 (DECLARATION)


state 131

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 132

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   51 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 51 (ATTRIBUITION)


state 133

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   53 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 53 (OP_ASSIGN)


state 134

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   54 COUT: TK_COUT '(' E . ')'

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120
    ')'                  shift, and go to state 158


state 135

   20 IF: TK_IF '(' E . ')' COMMAND
   21   | TK_IF '(' E . ')' COMMAND TK_ELSE COMMAND
   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120
    ')'                  shift, and go to state 159


state 136

   22 WHILE: TK_WHILE '(' E . ')' COMMAND
   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120
    ')'                  shift, and go to state 160


state 137

   23 E: '(' E ')' .

    $default  reduce using rule 23 (E)


state 138

   26 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 161
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 162
    SIGNAL    go to state 80


state 139

   27 E: E . TK_OP_SUM E
   27  | E TK_OP_SUM E .
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 104
    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 27 (E)


state 140

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   28  | E TK_OP_SUB E .
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 28 (E)


state 141

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   29  | E TK_OP_MUL E .
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 29 (E)


state 142

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   30  | E TK_OP_DIV E .
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 30 (E)


state 143

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   31  | E TK_OP_MOD E .
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 31 (E)


state 144

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   36  | E TK_OP_REL_LESS E .
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 103
    TK_OP_SUB         shift, and go to state 104
    TK_OP_MUL         shift, and go to state 105
    TK_OP_DIV         shift, and go to state 106
    TK_OP_MOD         shift, and go to state 107
    TK_OP_BIN_AND     shift, and go to state 116
    TK_OP_BIN_OR      shift, and go to state 117
    TK_OP_BIN_XOR     shift, and go to state 118
    TK_OP_BIN_SHIFTR  shift, and go to state 119
    TK_OP_BIN_SHIFTL  shift, and go to state 120

    $default  reduce using rule 36 (E)


state 145

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   37  | E TK_OP_REL_GREATER E .
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 103
    TK_OP_SUB         shift, and go to state 104
    TK_OP_MUL         shift, and go to state 105
    TK_OP_DIV         shift, and go to state 106
    TK_OP_MOD         shift, and go to state 107
    TK_OP_BIN_AND     shift, and go to state 116
    TK_OP_BIN_OR      shift, and go to state 117
    TK_OP_BIN_XOR     shift, and go to state 118
    TK_OP_BIN_SHIFTR  shift, and go to state 119
    TK_OP_BIN_SHIFTL  shift, and go to state 120

    $default  reduce using rule 37 (E)


state 146

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   38  | E TK_OP_REL_EQLESS E .
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 103
    TK_OP_SUB         shift, and go to state 104
    TK_OP_MUL         shift, and go to state 105
    TK_OP_DIV         shift, and go to state 106
    TK_OP_MOD         shift, and go to state 107
    TK_OP_BIN_AND     shift, and go to state 116
    TK_OP_BIN_OR      shift, and go to state 117
    TK_OP_BIN_XOR     shift, and go to state 118
    TK_OP_BIN_SHIFTR  shift, and go to state 119
    TK_OP_BIN_SHIFTL  shift, and go to state 120

    $default  reduce using rule 38 (E)


state 147

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   39  | E TK_OP_REL_EQGREATER E .
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 103
    TK_OP_SUB         shift, and go to state 104
    TK_OP_MUL         shift, and go to state 105
    TK_OP_DIV         shift, and go to state 106
    TK_OP_MOD         shift, and go to state 107
    TK_OP_BIN_AND     shift, and go to state 116
    TK_OP_BIN_OR      shift, and go to state 117
    TK_OP_BIN_XOR     shift, and go to state 118
    TK_OP_BIN_SHIFTR  shift, and go to state 119
    TK_OP_BIN_SHIFTL  shift, and go to state 120

    $default  reduce using rule 39 (E)


state 148

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   34  | E TK_OP_REL_EQ E .
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 34 (E)


state 149

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   35  | E TK_OP_REL_DIFF E .
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 35 (E)


state 150

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   33  | E TK_OP_LOGIC_AND E .
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 33 (E)


state 151

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   32  | E TK_OP_LOGIC_OR E .
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 32 (E)


state 152

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   40  | E TK_OP_BIN_AND E .
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 103
    TK_OP_SUB  shift, and go to state 104
    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 40 (E)


state 153

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   41  | E TK_OP_BIN_OR E .
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 103
    TK_OP_SUB  shift, and go to state 104
    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 41 (E)


state 154

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   42  | E TK_OP_BIN_XOR E .
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 103
    TK_OP_SUB  shift, and go to state 104
    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 42 (E)


state 155

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   43  | E TK_OP_BIN_SHIFTR E .
   44  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 103
    TK_OP_SUB  shift, and go to state 104
    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 43 (E)


state 156

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   44  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 103
    TK_OP_SUB  shift, and go to state 104
    TK_OP_MUL  shift, and go to state 105
    TK_OP_DIV  shift, and go to state 106
    TK_OP_MOD  shift, and go to state 107

    $default  reduce using rule 44 (E)


state 157

   27 E: E . TK_OP_SUM E
   28  | E . TK_OP_SUB E
   29  | E . TK_OP_MUL E
   30  | E . TK_OP_DIV E
   31  | E . TK_OP_MOD E
   32  | E . TK_OP_LOGIC_OR E
   33  | E . TK_OP_LOGIC_AND E
   34  | E . TK_OP_REL_EQ E
   35  | E . TK_OP_REL_DIFF E
   36  | E . TK_OP_REL_LESS E
   37  | E . TK_OP_REL_GREATER E
   38  | E . TK_OP_REL_EQLESS E
   39  | E . TK_OP_REL_EQGREATER E
   40  | E . TK_OP_BIN_AND E
   41  | E . TK_OP_BIN_OR E
   42  | E . TK_OP_BIN_XOR E
   43  | E . TK_OP_BIN_SHIFTR E
   44  | E . TK_OP_BIN_SHIFTL E
   58 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 103
    TK_OP_SUB            shift, and go to state 104
    TK_OP_MUL            shift, and go to state 105
    TK_OP_DIV            shift, and go to state 106
    TK_OP_MOD            shift, and go to state 107
    TK_OP_REL_LESS       shift, and go to state 108
    TK_OP_REL_GREATER    shift, and go to state 109
    TK_OP_REL_EQLESS     shift, and go to state 110
    TK_OP_REL_EQGREATER  shift, and go to state 111
    TK_OP_REL_EQ         shift, and go to state 112
    TK_OP_REL_DIFF       shift, and go to state 113
    TK_OP_LOGIC_AND      shift, and go to state 114
    TK_OP_LOGIC_OR       shift, and go to state 115
    TK_OP_BIN_AND        shift, and go to state 116
    TK_OP_BIN_OR         shift, and go to state 117
    TK_OP_BIN_XOR        shift, and go to state 118
    TK_OP_BIN_SHIFTR     shift, and go to state 119
    TK_OP_BIN_SHIFTL     shift, and go to state 120

    $default  reduce using rule 58 (DECLARATION)


state 158

   54 COUT: TK_COUT '(' E ')' .

    $default  reduce using rule 54 (COUT)


state 159

   20 IF: TK_IF '(' E ')' . COMMAND
   21   | TK_IF '(' E ')' . COMMAND TK_ELSE COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_WHILE              shift, and go to state 61
    TK_OP_INCREASE        shift, and go to state 62
    '('                   shift, and go to state 63
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 64

    SCOPE          go to state 65
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 163
    RETURN         go to state 69
    IF             go to state 70
    WHILE          go to state 71
    E              go to state 72
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    COUT           go to state 77
    DECLARATION    go to state 78
    TYPE           go to state 18
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 160

   22 WHILE: TK_WHILE '(' E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_WHILE              shift, and go to state 61
    TK_OP_INCREASE        shift, and go to state 62
    '('                   shift, and go to state 63
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 64

    SCOPE          go to state 65
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 164
    RETURN         go to state 69
    IF             go to state 70
    WHILE          go to state 71
    E              go to state 72
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    COUT           go to state 77
    DECLARATION    go to state 78
    TYPE           go to state 18
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 161

   96 TERMINAL: TK_ID .

    $default  reduce using rule 96 (TERMINAL)


state 162

   26 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 26 (E)


state 163

   20 IF: TK_IF '(' E ')' COMMAND .
   21   | TK_IF '(' E ')' COMMAND . TK_ELSE COMMAND

    TK_ELSE  shift, and go to state 165

    TK_ELSE   [reduce using rule 20 (IF)]
    $default  reduce using rule 20 (IF)


state 164

   22 WHILE: TK_WHILE '(' E ')' COMMAND .

    $default  reduce using rule 22 (WHILE)


state 165

   21 IF: TK_IF '(' E ')' COMMAND TK_ELSE . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_WHILE              shift, and go to state 61
    TK_OP_INCREASE        shift, and go to state 62
    '('                   shift, and go to state 63
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 64

    SCOPE          go to state 65
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 166
    RETURN         go to state 69
    IF             go to state 70
    WHILE          go to state 71
    E              go to state 72
    INCREASE       go to state 73
    PREV_INCREASE  go to state 74
    ATTRIBUITION   go to state 75
    OP_ASSIGN      go to state 76
    COUT           go to state 77
    DECLARATION    go to state 78
    TYPE           go to state 18
    TERMINAL       go to state 79
    SIGNAL         go to state 80


state 166

   21 IF: TK_IF '(' E ')' COMMAND TK_ELSE COMMAND .

    $default  reduce using rule 21 (IF)
