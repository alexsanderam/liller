Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_EACH
   TK_OP_LESS_LESS
   ELSE


State 235 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START TRANSLATION_UNIT

    2 START: /* empty */

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN OPEN_ARGS CLOSE_ARGS

    5 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    6                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    7 EXTERNAL_DECLARATION: DECLARATION ';'
    8                     | FUNCTION
    9                     | FUNCTION_HEADER ';'

   10 FUNCTION: FUNCTION_HEADER SCOPE
   11         | MAIN_HEADER SCOPE

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS CLOSE_ARGS
   13                | TK_ID OPEN_ARGS ARGS CLOSE_ARGS

   14 OPEN_ARGS: '('

   15 CLOSE_ARGS: ')'

   16 ARGS: TYPE OPTIONAL_ID ',' ARGS
   17     | TYPE OPTIONAL_ID
   18     | /* empty */

   19 OPTIONAL_ID: TK_ID
   20            | /* empty */

   21 COUT: TK_COUT '(' E_C ')'
   22     | TK_COUTN '(' E_C ')'

   23 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

   24 BEGIN_SCOPE: '{'

   25 END_SCOPE: '}'

   26 COMMANDS: STATEMENT COMMANDS
   27         | /* empty */

   28 STATEMENT: E_C ';'
   29          | RETURN ';'
   30          | COUT ';'
   31          | DECLARATION ';'
   32          | SCOPE
   33          | IF
   34          | WHILE
   35          | DO_WHILE
   36          | FOR
   37          | LABEL STATEMENT
   38          | GOTO ';'
   39          | CONTINUE ';'
   40          | BREAK ';'
   41          | SWITCH
   42          | ';'

   43 RETURN: TK_RETURN E_C

   44 IF_C: TK_IF

   45 IF: IF_C '(' E_C ')' STATEMENT
   46   | IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT

   47 WHILE_C: TK_WHILE

   48 WHILE: WHILE_C '(' E_C ')' STATEMENT

   49 DO_WHILE_C: TK_DO

   50 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';'

   51 OPTIONAL_E: E_C
   52           | /* empty */

   53 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E
   54                          | DECLARATION

   55 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION
   56                         | TERMINAL

   57 FOR_C: TK_FOR

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   59    | FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

   60 LABEL: TK_ID TK_GO_LABEL
   61      | TK_CASE E_C TK_GO_LABEL
   62      | TK_DEFAULT TK_GO_LABEL

   63 GOTO: TK_GOTO TK_ID

   64 CONTINUE: TK_CONTINUE

   65 BREAK: TK_BREAK

   66 SWITCH_C: TK_SWITCH

   67 SWITCH: SWITCH_C '(' E_C ')' STATEMENT

   68 E_C: E

   69 E: '(' E ')'
   70  | TERMINAL
   71  | ATTRIBUITION
   72  | '(' TYPE ')' TERMINAL
   73  | E TK_OP_SUM E
   74  | E TK_OP_SUB E
   75  | E TK_OP_MUL E
   76  | E TK_OP_DIV E
   77  | E TK_OP_MOD E
   78  | E TK_OP_LOGIC_OR E
   79  | E TK_OP_LOGIC_AND E
   80  | E TK_OP_REL_EQ E
   81  | E TK_OP_REL_DIFF E
   82  | E TK_OP_REL_LESS E
   83  | E TK_OP_REL_GREATER E
   84  | E TK_OP_REL_EQLESS E
   85  | E TK_OP_REL_EQGREATER E
   86  | E TK_OP_BIN_AND E
   87  | E TK_OP_BIN_OR E
   88  | E TK_OP_BIN_XOR E
   89  | E TK_OP_BIN_SHIFTR E
   90  | E TK_OP_BIN_SHIFTL E
   91  | TK_OP_LOGIC_NOT E
   92  | TK_OP_BIN_NOT E
   93  | INCREASE
   94  | PREV_INCREASE

   95 INCREASE: TK_ID TK_OP_INCREASE

   96 PREV_INCREASE: TK_OP_INCREASE TK_ID

   97 ATTRIBUITION: TK_ID TK_ASSIGN E
   98             | OP_ASSIGN

   99 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

  100 DECLARATION: DECLARATION ',' TK_ID
  101            | DECLARATION ',' TK_ID TK_ASSIGN E
  102            | TYPE TK_ID
  103            | TYPE TK_ID TK_ASSIGN E

  104 TYPE: TK_TYPE_CHAR
  105     | TK_TYPE_STRING
  106     | TK_TYPE_INT
  107     | TK_TYPE_VOID
  108     | TK_TYPE_FLOAT
  109     | TK_TYPE_DOUBLE
  110     | TK_TYPE_BOOL
  111     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
  112     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
  113     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
  114     | TK_MODIFIER_SIGNED TK_TYPE_INT
  115     | TK_MODIFIER_SHORT TK_TYPE_INT
  116     | TK_MODIFIER_LONG TK_TYPE_INT
  117     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
  118     | TK_MODIFIER_SHORT
  119     | TK_MODIFIER_LONG
  120     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  121     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  122     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
  123     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
  124     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  125     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  126     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  127     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
  128     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

  129 TERMINAL: TK_INT
  130         | TK_FLOAT
  131         | TK_SCIENTIFIC
  132         | TK_CHAR
  133         | SIGNAL TK_INT
  134         | SIGNAL TK_FLOAT
  135         | SIGNAL TK_SCIENTIFIC
  136         | SIGNAL TK_CHAR
  137         | TK_STRING
  138         | TK_BOOL
  139         | TK_ID
  140         | SIGNAL TK_ID

  141 SIGNAL: TK_OP_SUM
  142       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 21 22 45 46 48 50 58 59 67 69 72
')' (41) 15 21 22 45 46 48 50 58 59 67 69 72
',' (44) 16 100 101
';' (59) 7 9 28 29 30 31 38 39 40 42 50 58
'{' (123) 24
'}' (125) 25
error (256)
TK_INT (258) 129 133
TK_FLOAT (259) 130 134
TK_SCIENTIFIC (260) 131 135
TK_CHAR (261) 132 136
TK_STRING (262) 137
TK_BOOL (263) 138
TK_MAIN (264) 3 4
TK_ID (265) 12 13 19 60 63 95 96 97 99 100 101 102 103 139 140
TK_TYPE_CHAR (266) 104 111 112
TK_TYPE_STRING (267) 105
TK_TYPE_INT (268) 3 4 106 113 114 115 116 120 121 122 123 124 125 126
TK_TYPE_VOID (269) 3 107
TK_TYPE_FLOAT (270) 108
TK_TYPE_DOUBLE (271) 109 117
TK_TYPE_BOOL (272) 110
TK_MODIFIER_UNSIGNED (273) 111 113 120 122 125 127
TK_MODIFIER_SIGNED (274) 112 114 121 123 126 128
TK_MODIFIER_SHORT (275) 115 118 120 121
TK_MODIFIER_LONG (276) 116 117 119 122 123 124 125 126 127 128
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 73 141
TK_OP_SUB (280) 74 142
TK_OP_MUL (281) 75
TK_OP_DIV (282) 76
TK_OP_MOD (283) 77
TK_OP_REL_LESS (284) 82
TK_OP_REL_GREATER (285) 83
TK_OP_REL_EQLESS (286) 84
TK_OP_REL_EQGREATER (287) 85
TK_OP_REL_EQ (288) 80
TK_OP_REL_DIFF (289) 81
TK_OP_LOGIC_AND (290) 79
TK_OP_LOGIC_OR (291) 78
TK_OP_LOGIC_NOT (292) 91
TK_OP_BIN_AND (293) 86
TK_OP_BIN_OR (294) 87
TK_OP_BIN_XOR (295) 88
TK_OP_BIN_NOT (296) 92
TK_OP_BIN_SHIFTR (297) 89
TK_OP_BIN_SHIFTL (298) 90
TK_ASSIGN (299) 97 101 103
TK_RETURN (300) 43
TK_COUT (301) 21
TK_COUTN (302) 22
TK_IF (303) 44
TK_ELSE (304) 46
TK_SWITCH (305) 66
TK_CASE (306) 61
TK_DEFAULT (307) 62
TK_FOR (308) 57
TK_EACH (309)
TK_WHILE (310) 47 50
TK_DO (311) 49
TK_BREAK (312) 65
TK_CONTINUE (313) 64
TK_GOTO (314) 63
TK_OP_INCREASE (315) 95 96
TK_OP_LESS_LESS (316)
TK_OP_ASSIGN (317) 99
TK_DOT_DOT (318) 59
TK_GO_LABEL (319) 60 61 62
IFX (320)
ELSE (321)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
BEGIN (74)
    on left: 1, on right: 0
START (75)
    on left: 2, on right: 1
MAIN_HEADER (76)
    on left: 3 4, on right: 11
TRANSLATION_UNIT (77)
    on left: 5 6, on right: 1 6
EXTERNAL_DECLARATION (78)
    on left: 7 8 9, on right: 5 6
FUNCTION (79)
    on left: 10 11, on right: 8
FUNCTION_HEADER (80)
    on left: 12 13, on right: 9 10
OPEN_ARGS (81)
    on left: 14, on right: 3 4 12 13
CLOSE_ARGS (82)
    on left: 15, on right: 3 4 12 13
ARGS (83)
    on left: 16 17 18, on right: 12 13 16
OPTIONAL_ID (84)
    on left: 19 20, on right: 16 17
COUT (85)
    on left: 21 22, on right: 30
SCOPE (86)
    on left: 23, on right: 10 11 32
BEGIN_SCOPE (87)
    on left: 24, on right: 23
END_SCOPE (88)
    on left: 25, on right: 23
COMMANDS (89)
    on left: 26 27, on right: 23 26
STATEMENT (90)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    26 37 45 46 48 50 58 59 67
RETURN (91)
    on left: 43, on right: 29
IF_C (92)
    on left: 44, on right: 45 46
IF (93)
    on left: 45 46, on right: 33
WHILE_C (94)
    on left: 47, on right: 48
WHILE (95)
    on left: 48, on right: 34
DO_WHILE_C (96)
    on left: 49, on right: 50
DO_WHILE (97)
    on left: 50, on right: 35
OPTIONAL_E (98)
    on left: 51 52, on right: 53 58
OPTIONAL_E_OR_DECLARATION (99)
    on left: 53 54, on right: 58
ATTRIBUITION_OR_TERMINAL (100)
    on left: 55 56, on right: 59
FOR_C (101)
    on left: 57, on right: 58 59
FOR (102)
    on left: 58 59, on right: 36
LABEL (103)
    on left: 60 61 62, on right: 37
GOTO (104)
    on left: 63, on right: 38
CONTINUE (105)
    on left: 64, on right: 39
BREAK (106)
    on left: 65, on right: 40
SWITCH_C (107)
    on left: 66, on right: 67
SWITCH (108)
    on left: 67, on right: 41
E_C (109)
    on left: 68, on right: 21 22 28 43 45 46 48 50 51 61 67
E (110)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 92 93 94, on right: 68 69 73 74 75 76 77 78 79 80
    81 82 83 84 85 86 87 88 89 90 91 92 97 99 101 103
INCREASE (111)
    on left: 95, on right: 93
PREV_INCREASE (112)
    on left: 96, on right: 94
ATTRIBUITION (113)
    on left: 97 98, on right: 55 71
OP_ASSIGN (114)
    on left: 99, on right: 98
DECLARATION (115)
    on left: 100 101 102 103, on right: 7 31 54 100 101
TYPE (116)
    on left: 104 105 106 107 108 109 110 111 112 113 114 115 116 117
    118 119 120 121 122 123 124 125 126 127 128, on right: 12 16 17
    72 102 103
TERMINAL (117)
    on left: 129 130 131 132 133 134 135 136 137 138 139 140, on right:
    56 59 70 72
SIGNAL (118)
    on left: 141 142, on right: 133 134 135 136 140


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . TRANSLATION_UNIT

    TK_ID                 shift, and go to state 4
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN_HEADER           go to state 16
    TRANSLATION_UNIT      go to state 17
    EXTERNAL_DECLARATION  go to state 18
    FUNCTION              go to state 19
    FUNCTION_HEADER       go to state 20
    DECLARATION           go to state 21
    TYPE                  go to state 22


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

   13 FUNCTION_HEADER: TK_ID . OPEN_ARGS ARGS CLOSE_ARGS

    '('  shift, and go to state 23

    OPEN_ARGS  go to state 24


state 5

  104 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 104 (TYPE)


state 6

  105 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 105 (TYPE)


state 7

    3 MAIN_HEADER: TK_TYPE_INT . TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT . TK_MAIN OPEN_ARGS CLOSE_ARGS
  106 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 25

    $default  reduce using rule 106 (TYPE)


state 8

  107 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 107 (TYPE)


state 9

  108 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 108 (TYPE)


state 10

  109 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 109 (TYPE)


state 11

  110 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 110 (TYPE)


state 12

  111 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
  113     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
  120     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  122     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  125     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  127     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 26
    TK_TYPE_INT        shift, and go to state 27
    TK_MODIFIER_SHORT  shift, and go to state 28
    TK_MODIFIER_LONG   shift, and go to state 29


state 13

  112 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
  114     | TK_MODIFIER_SIGNED . TK_TYPE_INT
  121     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  123     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  126     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  128     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 30
    TK_TYPE_INT        shift, and go to state 31
    TK_MODIFIER_SHORT  shift, and go to state 32
    TK_MODIFIER_LONG   shift, and go to state 33


state 14

  115 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
  118     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 34

    $default  reduce using rule 118 (TYPE)


state 15

  116 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
  117     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
  119     | TK_MODIFIER_LONG .
  124     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 35
    TK_TYPE_DOUBLE    shift, and go to state 36
    TK_MODIFIER_LONG  shift, and go to state 37

    $default  reduce using rule 119 (TYPE)


state 16

   11 FUNCTION: MAIN_HEADER . SCOPE

    '{'  shift, and go to state 38

    SCOPE        go to state 39
    BEGIN_SCOPE  go to state 40


state 17

    1 BEGIN: START TRANSLATION_UNIT .
    6 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    TK_ID                 shift, and go to state 4
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 1 (BEGIN)

    MAIN_HEADER           go to state 16
    EXTERNAL_DECLARATION  go to state 41
    FUNCTION              go to state 19
    FUNCTION_HEADER       go to state 20
    DECLARATION           go to state 21
    TYPE                  go to state 22


state 18

    5 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


state 19

    8 EXTERNAL_DECLARATION: FUNCTION .

    $default  reduce using rule 8 (EXTERNAL_DECLARATION)


state 20

    9 EXTERNAL_DECLARATION: FUNCTION_HEADER . ';'
   10 FUNCTION: FUNCTION_HEADER . SCOPE

    ';'  shift, and go to state 42
    '{'  shift, and go to state 38

    SCOPE        go to state 43
    BEGIN_SCOPE  go to state 40


state 21

    7 EXTERNAL_DECLARATION: DECLARATION . ';'
  100 DECLARATION: DECLARATION . ',' TK_ID
  101            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 44
    ','  shift, and go to state 45


state 22

   12 FUNCTION_HEADER: TYPE . TK_ID OPEN_ARGS ARGS CLOSE_ARGS
  102 DECLARATION: TYPE . TK_ID
  103            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 46


state 23

   14 OPEN_ARGS: '(' .

    $default  reduce using rule 14 (OPEN_ARGS)


state 24

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS . ARGS CLOSE_ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 48
    TYPE  go to state 49


state 25

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN . OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN . OPEN_ARGS CLOSE_ARGS

    '('  shift, and go to state 23

    OPEN_ARGS  go to state 50


state 26

  111 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 111 (TYPE)


state 27

  113 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 113 (TYPE)


state 28

  120 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 51


state 29

  122 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  125     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  127     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 52
    TK_MODIFIER_LONG  shift, and go to state 53


state 30

  112 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 112 (TYPE)


state 31

  114 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 114 (TYPE)


state 32

  121 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 54


state 33

  123 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  126     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  128     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 55
    TK_MODIFIER_LONG  shift, and go to state 56


state 34

  115 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 115 (TYPE)


state 35

  116 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 116 (TYPE)


state 36

  117 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 117 (TYPE)


state 37

  124 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 57


state 38

   24 BEGIN_SCOPE: '{' .

    $default  reduce using rule 24 (BEGIN_SCOPE)


state 39

   11 FUNCTION: MAIN_HEADER SCOPE .

    $default  reduce using rule 11 (FUNCTION)


state 40

   23 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    $default  reduce using rule 27 (COMMANDS)

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    COMMANDS       go to state 87
    STATEMENT      go to state 88
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 41

    6 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 6 (TRANSLATION_UNIT)


state 42

    9 EXTERNAL_DECLARATION: FUNCTION_HEADER ';' .

    $default  reduce using rule 9 (EXTERNAL_DECLARATION)


state 43

   10 FUNCTION: FUNCTION_HEADER SCOPE .

    $default  reduce using rule 10 (FUNCTION)


state 44

    7 EXTERNAL_DECLARATION: DECLARATION ';' .

    $default  reduce using rule 7 (EXTERNAL_DECLARATION)


state 45

  100 DECLARATION: DECLARATION ',' . TK_ID
  101            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 114


state 46

   12 FUNCTION_HEADER: TYPE TK_ID . OPEN_ARGS ARGS CLOSE_ARGS
  102 DECLARATION: TYPE TK_ID .
  103            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 115
    '('        shift, and go to state 23

    $default  reduce using rule 102 (DECLARATION)

    OPEN_ARGS  go to state 116


state 47

  106 TYPE: TK_TYPE_INT .

    $default  reduce using rule 106 (TYPE)


state 48

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS ARGS . CLOSE_ARGS

    ')'  shift, and go to state 117

    CLOSE_ARGS  go to state 118


state 49

   16 ARGS: TYPE . OPTIONAL_ID ',' ARGS
   17     | TYPE . OPTIONAL_ID

    TK_ID  shift, and go to state 119

    $default  reduce using rule 20 (OPTIONAL_ID)

    OPTIONAL_ID  go to state 120


state 50

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS . TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN OPEN_ARGS . CLOSE_ARGS

    TK_TYPE_VOID  shift, and go to state 121
    ')'           shift, and go to state 117

    CLOSE_ARGS  go to state 122


state 51

  120 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 120 (TYPE)


state 52

  122 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 122 (TYPE)


state 53

  125 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  127     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 123

    $default  reduce using rule 127 (TYPE)


state 54

  121 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 121 (TYPE)


state 55

  123 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 123 (TYPE)


state 56

  126 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  128     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 124

    $default  reduce using rule 128 (TYPE)


state 57

  124 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 124 (TYPE)


state 58

  129 TERMINAL: TK_INT .

    $default  reduce using rule 129 (TERMINAL)


state 59

  130 TERMINAL: TK_FLOAT .

    $default  reduce using rule 130 (TERMINAL)


state 60

  131 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 131 (TERMINAL)


state 61

  132 TERMINAL: TK_CHAR .

    $default  reduce using rule 132 (TERMINAL)


state 62

  137 TERMINAL: TK_STRING .

    $default  reduce using rule 137 (TERMINAL)


state 63

  138 TERMINAL: TK_BOOL .

    $default  reduce using rule 138 (TERMINAL)


state 64

   60 LABEL: TK_ID . TK_GO_LABEL
   95 INCREASE: TK_ID . TK_OP_INCREASE
   97 ATTRIBUITION: TK_ID . TK_ASSIGN E
   99 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  139 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 125
    TK_OP_INCREASE  shift, and go to state 126
    TK_OP_ASSIGN    shift, and go to state 127
    TK_GO_LABEL     shift, and go to state 128

    $default  reduce using rule 139 (TERMINAL)


state 65

  141 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 141 (SIGNAL)


state 66

  142 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 142 (SIGNAL)


state 67

   91 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 130
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 68

   92 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 131
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 69

   43 RETURN: TK_RETURN . E_C

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 132
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 70

   21 COUT: TK_COUT . '(' E_C ')'

    '('  shift, and go to state 133


state 71

   22 COUT: TK_COUTN . '(' E_C ')'

    '('  shift, and go to state 134


state 72

   44 IF_C: TK_IF .

    $default  reduce using rule 44 (IF_C)


state 73

   66 SWITCH_C: TK_SWITCH .

    $default  reduce using rule 66 (SWITCH_C)


state 74

   61 LABEL: TK_CASE . E_C TK_GO_LABEL

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 135
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 75

   62 LABEL: TK_DEFAULT . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 136


state 76

   57 FOR_C: TK_FOR .

    $default  reduce using rule 57 (FOR_C)


state 77

   47 WHILE_C: TK_WHILE .

    $default  reduce using rule 47 (WHILE_C)


state 78

   49 DO_WHILE_C: TK_DO .

    $default  reduce using rule 49 (DO_WHILE_C)


state 79

   65 BREAK: TK_BREAK .

    $default  reduce using rule 65 (BREAK)


state 80

   64 CONTINUE: TK_CONTINUE .

    $default  reduce using rule 64 (CONTINUE)


state 81

   63 GOTO: TK_GOTO . TK_ID

    TK_ID  shift, and go to state 137


state 82

   96 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 138


state 83

   42 STATEMENT: ';' .

    $default  reduce using rule 42 (STATEMENT)


state 84

   69 E: '(' . E ')'
   72  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 129
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_OP_INCREASE        shift, and go to state 82
    '('                   shift, and go to state 84

    E              go to state 139
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TYPE           go to state 140
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 85

   30 STATEMENT: COUT . ';'

    ';'  shift, and go to state 141


state 86

   32 STATEMENT: SCOPE .

    $default  reduce using rule 32 (STATEMENT)


state 87

   23 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 142

    END_SCOPE  go to state 143


state 88

   26 COMMANDS: STATEMENT . COMMANDS

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    $default  reduce using rule 27 (COMMANDS)

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    COMMANDS       go to state 144
    STATEMENT      go to state 88
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 89

   29 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 145


state 90

   45 IF: IF_C . '(' E_C ')' STATEMENT
   46   | IF_C . '(' E_C ')' STATEMENT TK_ELSE STATEMENT

    '('  shift, and go to state 146


state 91

   33 STATEMENT: IF .

    $default  reduce using rule 33 (STATEMENT)


state 92

   48 WHILE: WHILE_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 147


state 93

   34 STATEMENT: WHILE .

    $default  reduce using rule 34 (STATEMENT)


state 94

   50 DO_WHILE: DO_WHILE_C . STATEMENT TK_WHILE '(' E_C ')' ';'

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 148
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 95

   35 STATEMENT: DO_WHILE .

    $default  reduce using rule 35 (STATEMENT)


state 96

   58 FOR: FOR_C . '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   59    | FOR_C . '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    '('  shift, and go to state 149


state 97

   36 STATEMENT: FOR .

    $default  reduce using rule 36 (STATEMENT)


state 98

   37 STATEMENT: LABEL . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 150
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 99

   38 STATEMENT: GOTO . ';'

    ';'  shift, and go to state 151


state 100

   39 STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 152


state 101

   40 STATEMENT: BREAK . ';'

    ';'  shift, and go to state 153


state 102

   67 SWITCH: SWITCH_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 154


state 103

   41 STATEMENT: SWITCH .

    $default  reduce using rule 41 (STATEMENT)


state 104

   28 STATEMENT: E_C . ';'

    ';'  shift, and go to state 155


state 105

   68 E_C: E .
   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_LOGIC_AND      shift, and go to state 167
    TK_OP_LOGIC_OR       shift, and go to state 168
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 68 (E_C)


state 106

   93 E: INCREASE .

    $default  reduce using rule 93 (E)


state 107

   94 E: PREV_INCREASE .

    $default  reduce using rule 94 (E)


state 108

   71 E: ATTRIBUITION .

    $default  reduce using rule 71 (E)


state 109

   98 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 98 (ATTRIBUITION)


state 110

   31 STATEMENT: DECLARATION . ';'
  100 DECLARATION: DECLARATION . ',' TK_ID
  101            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 174
    ','  shift, and go to state 45


state 111

  102 DECLARATION: TYPE . TK_ID
  103            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 175


state 112

   70 E: TERMINAL .

    $default  reduce using rule 70 (E)


state 113

  133 TERMINAL: SIGNAL . TK_INT
  134         | SIGNAL . TK_FLOAT
  135         | SIGNAL . TK_SCIENTIFIC
  136         | SIGNAL . TK_CHAR
  140         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 176
    TK_FLOAT       shift, and go to state 177
    TK_SCIENTIFIC  shift, and go to state 178
    TK_CHAR        shift, and go to state 179
    TK_ID          shift, and go to state 180


state 114

  100 DECLARATION: DECLARATION ',' TK_ID .
  101            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 181

    $default  reduce using rule 100 (DECLARATION)


state 115

  103 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 182
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 116

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS . ARGS CLOSE_ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 183
    TYPE  go to state 49


state 117

   15 CLOSE_ARGS: ')' .

    $default  reduce using rule 15 (CLOSE_ARGS)


state 118

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS ARGS CLOSE_ARGS .

    $default  reduce using rule 13 (FUNCTION_HEADER)


state 119

   19 OPTIONAL_ID: TK_ID .

    $default  reduce using rule 19 (OPTIONAL_ID)


state 120

   16 ARGS: TYPE OPTIONAL_ID . ',' ARGS
   17     | TYPE OPTIONAL_ID .

    ','  shift, and go to state 184

    $default  reduce using rule 17 (ARGS)


state 121

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID . CLOSE_ARGS

    ')'  shift, and go to state 117

    CLOSE_ARGS  go to state 185


state 122

    4 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS CLOSE_ARGS .

    $default  reduce using rule 4 (MAIN_HEADER)


state 123

  125 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 125 (TYPE)


state 124

  126 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 126 (TYPE)


state 125

   97 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 186
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 126

   95 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 95 (INCREASE)


state 127

   99 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 187
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 128

   60 LABEL: TK_ID TK_GO_LABEL .

    $default  reduce using rule 60 (LABEL)


state 129

   95 INCREASE: TK_ID . TK_OP_INCREASE
   97 ATTRIBUITION: TK_ID . TK_ASSIGN E
   99 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  139 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 125
    TK_OP_INCREASE  shift, and go to state 126
    TK_OP_ASSIGN    shift, and go to state 127

    $default  reduce using rule 139 (TERMINAL)


state 130

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
   91  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 91 (E)


state 131

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
   92  | TK_OP_BIN_NOT E .

    $default  reduce using rule 92 (E)


state 132

   43 RETURN: TK_RETURN E_C .

    $default  reduce using rule 43 (RETURN)


state 133

   21 COUT: TK_COUT '(' . E_C ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 188
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 134

   22 COUT: TK_COUTN '(' . E_C ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 189
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 135

   61 LABEL: TK_CASE E_C . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 190


state 136

   62 LABEL: TK_DEFAULT TK_GO_LABEL .

    $default  reduce using rule 62 (LABEL)


state 137

   63 GOTO: TK_GOTO TK_ID .

    $default  reduce using rule 63 (GOTO)


state 138

   96 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 96 (PREV_INCREASE)


state 139

   69 E: '(' E . ')'
   73  | E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_LOGIC_AND      shift, and go to state 167
    TK_OP_LOGIC_OR       shift, and go to state 168
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173
    ')'                  shift, and go to state 191


state 140

   72 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 192


state 141

   30 STATEMENT: COUT ';' .

    $default  reduce using rule 30 (STATEMENT)


state 142

   25 END_SCOPE: '}' .

    $default  reduce using rule 25 (END_SCOPE)


state 143

   23 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 23 (SCOPE)


state 144

   26 COMMANDS: STATEMENT COMMANDS .

    $default  reduce using rule 26 (COMMANDS)


state 145

   29 STATEMENT: RETURN ';' .

    $default  reduce using rule 29 (STATEMENT)


state 146

   45 IF: IF_C '(' . E_C ')' STATEMENT
   46   | IF_C '(' . E_C ')' STATEMENT TK_ELSE STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 193
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 147

   48 WHILE: WHILE_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 194
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 148

   50 DO_WHILE: DO_WHILE_C STATEMENT . TK_WHILE '(' E_C ')' ';'

    TK_WHILE  shift, and go to state 195


state 149

   58 FOR: FOR_C '(' . OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   59    | FOR_C '(' . ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 129
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_OP_INCREASE        shift, and go to state 82
    '('                   shift, and go to state 84

    $default  reduce using rule 52 (OPTIONAL_E)

    OPTIONAL_E                 go to state 196
    OPTIONAL_E_OR_DECLARATION  go to state 197
    ATTRIBUITION_OR_TERMINAL   go to state 198
    E_C                        go to state 199
    E                          go to state 105
    INCREASE                   go to state 106
    PREV_INCREASE              go to state 107
    ATTRIBUITION               go to state 200
    OP_ASSIGN                  go to state 109
    DECLARATION                go to state 201
    TYPE                       go to state 111
    TERMINAL                   go to state 202
    SIGNAL                     go to state 113


state 150

   37 STATEMENT: LABEL STATEMENT .

    $default  reduce using rule 37 (STATEMENT)


state 151

   38 STATEMENT: GOTO ';' .

    $default  reduce using rule 38 (STATEMENT)


state 152

   39 STATEMENT: CONTINUE ';' .

    $default  reduce using rule 39 (STATEMENT)


state 153

   40 STATEMENT: BREAK ';' .

    $default  reduce using rule 40 (STATEMENT)


state 154

   67 SWITCH: SWITCH_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 203
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 155

   28 STATEMENT: E_C ';' .

    $default  reduce using rule 28 (STATEMENT)


state 156

   73 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 204
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 157

   74 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 205
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 158

   75 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 206
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 159

   76 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 207
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 160

   77 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 208
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 161

   82 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 209
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 162

   83 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 210
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 163

   84 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 211
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 164

   85 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 212
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 165

   80 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 213
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 166

   81 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 214
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 167

   79 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 215
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 168

   78 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 216
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 169

   86 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 217
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 170

   87 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 218
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 171

   88 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 219
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 172

   89 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 220
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 173

   90 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 221
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 174

   31 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 31 (STATEMENT)


state 175

  102 DECLARATION: TYPE TK_ID .
  103            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 115

    $default  reduce using rule 102 (DECLARATION)


state 176

  133 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 133 (TERMINAL)


state 177

  134 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 134 (TERMINAL)


state 178

  135 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 135 (TERMINAL)


state 179

  136 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 136 (TERMINAL)


state 180

  140 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 140 (TERMINAL)


state 181

  101 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E              go to state 222
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 182

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
  103 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_LOGIC_AND      shift, and go to state 167
    TK_OP_LOGIC_OR       shift, and go to state 168
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 103 (DECLARATION)


state 183

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS . CLOSE_ARGS

    ')'  shift, and go to state 117

    CLOSE_ARGS  go to state 223


state 184

   16 ARGS: TYPE OPTIONAL_ID ',' . ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 224
    TYPE  go to state 49


state 185

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS .

    $default  reduce using rule 3 (MAIN_HEADER)


state 186

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
   97 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_LOGIC_AND      shift, and go to state 167
    TK_OP_LOGIC_OR       shift, and go to state 168
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 97 (ATTRIBUITION)


state 187

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
   99 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_LOGIC_AND      shift, and go to state 167
    TK_OP_LOGIC_OR       shift, and go to state 168
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 99 (OP_ASSIGN)


state 188

   21 COUT: TK_COUT '(' E_C . ')'

    ')'  shift, and go to state 225


state 189

   22 COUT: TK_COUTN '(' E_C . ')'

    ')'  shift, and go to state 226


state 190

   61 LABEL: TK_CASE E_C TK_GO_LABEL .

    $default  reduce using rule 61 (LABEL)


state 191

   69 E: '(' E ')' .

    $default  reduce using rule 69 (E)


state 192

   72 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 58
    TK_FLOAT       shift, and go to state 59
    TK_SCIENTIFIC  shift, and go to state 60
    TK_CHAR        shift, and go to state 61
    TK_STRING      shift, and go to state 62
    TK_BOOL        shift, and go to state 63
    TK_ID          shift, and go to state 227
    TK_OP_SUM      shift, and go to state 65
    TK_OP_SUB      shift, and go to state 66

    TERMINAL  go to state 228
    SIGNAL    go to state 113


state 193

   45 IF: IF_C '(' E_C . ')' STATEMENT
   46   | IF_C '(' E_C . ')' STATEMENT TK_ELSE STATEMENT

    ')'  shift, and go to state 229


state 194

   48 WHILE: WHILE_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 230


state 195

   50 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE . '(' E_C ')' ';'

    '('  shift, and go to state 231


state 196

   53 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E .

    $default  reduce using rule 53 (OPTIONAL_E_OR_DECLARATION)


state 197

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION . ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 232


state 198

   59 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL . TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_DOT_DOT  shift, and go to state 233


state 199

   51 OPTIONAL_E: E_C .

    $default  reduce using rule 51 (OPTIONAL_E)


state 200

   55 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION .
   71 E: ATTRIBUITION .

    TK_DOT_DOT  reduce using rule 55 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 71 (E)


state 201

   54 OPTIONAL_E_OR_DECLARATION: DECLARATION .
  100 DECLARATION: DECLARATION . ',' TK_ID
  101            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ','  shift, and go to state 45

    $default  reduce using rule 54 (OPTIONAL_E_OR_DECLARATION)


state 202

   56 ATTRIBUITION_OR_TERMINAL: TERMINAL .
   70 E: TERMINAL .

    TK_DOT_DOT  reduce using rule 56 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 70 (E)


state 203

   67 SWITCH: SWITCH_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 234


state 204

   73 E: E . TK_OP_SUM E
   73  | E TK_OP_SUM E .
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 157
    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 73 (E)


state 205

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   74  | E TK_OP_SUB E .
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 74 (E)


state 206

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   75  | E TK_OP_MUL E .
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 75 (E)


state 207

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   76  | E TK_OP_DIV E .
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 76 (E)


state 208

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   77  | E TK_OP_MOD E .
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 77 (E)


state 209

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   82  | E TK_OP_REL_LESS E .
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 156
    TK_OP_SUB         shift, and go to state 157
    TK_OP_MUL         shift, and go to state 158
    TK_OP_DIV         shift, and go to state 159
    TK_OP_MOD         shift, and go to state 160
    TK_OP_BIN_AND     shift, and go to state 169
    TK_OP_BIN_OR      shift, and go to state 170
    TK_OP_BIN_XOR     shift, and go to state 171
    TK_OP_BIN_SHIFTR  shift, and go to state 172
    TK_OP_BIN_SHIFTL  shift, and go to state 173

    $default  reduce using rule 82 (E)


state 210

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   83  | E TK_OP_REL_GREATER E .
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 156
    TK_OP_SUB         shift, and go to state 157
    TK_OP_MUL         shift, and go to state 158
    TK_OP_DIV         shift, and go to state 159
    TK_OP_MOD         shift, and go to state 160
    TK_OP_BIN_AND     shift, and go to state 169
    TK_OP_BIN_OR      shift, and go to state 170
    TK_OP_BIN_XOR     shift, and go to state 171
    TK_OP_BIN_SHIFTR  shift, and go to state 172
    TK_OP_BIN_SHIFTL  shift, and go to state 173

    $default  reduce using rule 83 (E)


state 211

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   84  | E TK_OP_REL_EQLESS E .
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 156
    TK_OP_SUB         shift, and go to state 157
    TK_OP_MUL         shift, and go to state 158
    TK_OP_DIV         shift, and go to state 159
    TK_OP_MOD         shift, and go to state 160
    TK_OP_BIN_AND     shift, and go to state 169
    TK_OP_BIN_OR      shift, and go to state 170
    TK_OP_BIN_XOR     shift, and go to state 171
    TK_OP_BIN_SHIFTR  shift, and go to state 172
    TK_OP_BIN_SHIFTL  shift, and go to state 173

    $default  reduce using rule 84 (E)


state 212

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   85  | E TK_OP_REL_EQGREATER E .
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 156
    TK_OP_SUB         shift, and go to state 157
    TK_OP_MUL         shift, and go to state 158
    TK_OP_DIV         shift, and go to state 159
    TK_OP_MOD         shift, and go to state 160
    TK_OP_BIN_AND     shift, and go to state 169
    TK_OP_BIN_OR      shift, and go to state 170
    TK_OP_BIN_XOR     shift, and go to state 171
    TK_OP_BIN_SHIFTR  shift, and go to state 172
    TK_OP_BIN_SHIFTL  shift, and go to state 173

    $default  reduce using rule 85 (E)


state 213

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   80  | E TK_OP_REL_EQ E .
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 80 (E)


state 214

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   81  | E TK_OP_REL_DIFF E .
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 81 (E)


state 215

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   79  | E TK_OP_LOGIC_AND E .
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 79 (E)


state 216

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   78  | E TK_OP_LOGIC_OR E .
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 78 (E)


state 217

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   86  | E TK_OP_BIN_AND E .
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 156
    TK_OP_SUB  shift, and go to state 157
    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 86 (E)


state 218

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   87  | E TK_OP_BIN_OR E .
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 156
    TK_OP_SUB  shift, and go to state 157
    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 87 (E)


state 219

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   88  | E TK_OP_BIN_XOR E .
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 156
    TK_OP_SUB  shift, and go to state 157
    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 88 (E)


state 220

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   89  | E TK_OP_BIN_SHIFTR E .
   90  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 156
    TK_OP_SUB  shift, and go to state 157
    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 89 (E)


state 221

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
   90  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 156
    TK_OP_SUB  shift, and go to state 157
    TK_OP_MUL  shift, and go to state 158
    TK_OP_DIV  shift, and go to state 159
    TK_OP_MOD  shift, and go to state 160

    $default  reduce using rule 90 (E)


state 222

   73 E: E . TK_OP_SUM E
   74  | E . TK_OP_SUB E
   75  | E . TK_OP_MUL E
   76  | E . TK_OP_DIV E
   77  | E . TK_OP_MOD E
   78  | E . TK_OP_LOGIC_OR E
   79  | E . TK_OP_LOGIC_AND E
   80  | E . TK_OP_REL_EQ E
   81  | E . TK_OP_REL_DIFF E
   82  | E . TK_OP_REL_LESS E
   83  | E . TK_OP_REL_GREATER E
   84  | E . TK_OP_REL_EQLESS E
   85  | E . TK_OP_REL_EQGREATER E
   86  | E . TK_OP_BIN_AND E
   87  | E . TK_OP_BIN_OR E
   88  | E . TK_OP_BIN_XOR E
   89  | E . TK_OP_BIN_SHIFTR E
   90  | E . TK_OP_BIN_SHIFTL E
  101 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 156
    TK_OP_SUB            shift, and go to state 157
    TK_OP_MUL            shift, and go to state 158
    TK_OP_DIV            shift, and go to state 159
    TK_OP_MOD            shift, and go to state 160
    TK_OP_REL_LESS       shift, and go to state 161
    TK_OP_REL_GREATER    shift, and go to state 162
    TK_OP_REL_EQLESS     shift, and go to state 163
    TK_OP_REL_EQGREATER  shift, and go to state 164
    TK_OP_REL_EQ         shift, and go to state 165
    TK_OP_REL_DIFF       shift, and go to state 166
    TK_OP_LOGIC_AND      shift, and go to state 167
    TK_OP_LOGIC_OR       shift, and go to state 168
    TK_OP_BIN_AND        shift, and go to state 169
    TK_OP_BIN_OR         shift, and go to state 170
    TK_OP_BIN_XOR        shift, and go to state 171
    TK_OP_BIN_SHIFTR     shift, and go to state 172
    TK_OP_BIN_SHIFTL     shift, and go to state 173

    $default  reduce using rule 101 (DECLARATION)


state 223

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS CLOSE_ARGS .

    $default  reduce using rule 12 (FUNCTION_HEADER)


state 224

   16 ARGS: TYPE OPTIONAL_ID ',' ARGS .

    $default  reduce using rule 16 (ARGS)


state 225

   21 COUT: TK_COUT '(' E_C ')' .

    $default  reduce using rule 21 (COUT)


state 226

   22 COUT: TK_COUTN '(' E_C ')' .

    $default  reduce using rule 22 (COUT)


state 227

  139 TERMINAL: TK_ID .

    $default  reduce using rule 139 (TERMINAL)


state 228

   72 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 72 (E)


state 229

   45 IF: IF_C '(' E_C ')' . STATEMENT
   46   | IF_C '(' E_C ')' . STATEMENT TK_ELSE STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 235
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 230

   48 WHILE: WHILE_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 236
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 231

   50 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' . E_C ')' ';'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    E_C            go to state 237
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 232

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' . OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    $default  reduce using rule 52 (OPTIONAL_E)

    OPTIONAL_E     go to state 238
    E_C            go to state 199
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 233

   59 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT . TERMINAL ')' STATEMENT

    TK_INT         shift, and go to state 58
    TK_FLOAT       shift, and go to state 59
    TK_SCIENTIFIC  shift, and go to state 60
    TK_CHAR        shift, and go to state 61
    TK_STRING      shift, and go to state 62
    TK_BOOL        shift, and go to state 63
    TK_ID          shift, and go to state 227
    TK_OP_SUM      shift, and go to state 65
    TK_OP_SUB      shift, and go to state 66

    TERMINAL  go to state 239
    SIGNAL    go to state 113


state 234

   67 SWITCH: SWITCH_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 240
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 235

   45 IF: IF_C '(' E_C ')' STATEMENT .
   46   | IF_C '(' E_C ')' STATEMENT . TK_ELSE STATEMENT

    TK_ELSE  shift, and go to state 241

    TK_ELSE   [reduce using rule 45 (IF)]
    $default  reduce using rule 45 (IF)


state 236

   48 WHILE: WHILE_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 48 (WHILE)


state 237

   50 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C . ')' ';'

    ')'  shift, and go to state 242


state 238

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E . ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 243


state 239

   59 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL . ')' STATEMENT

    ')'  shift, and go to state 244


state 240

   67 SWITCH: SWITCH_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 67 (SWITCH)


state 241

   46 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 245
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 242

   50 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' . ';'

    ';'  shift, and go to state 246


state 243

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' . OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 129
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_OP_INCREASE   shift, and go to state 82
    '('              shift, and go to state 84

    $default  reduce using rule 52 (OPTIONAL_E)

    OPTIONAL_E     go to state 247
    E_C            go to state 199
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 244

   59 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 248
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 245

   46 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT .

    $default  reduce using rule 46 (IF)


state 246

   50 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';' .

    $default  reduce using rule 50 (DO_WHILE)


state 247

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E . ')' STATEMENT

    ')'  shift, and go to state 249


state 248

   59 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT .

    $default  reduce using rule 59 (FOR)


state 249

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_IF                 shift, and go to state 72
    TK_SWITCH             shift, and go to state 73
    TK_CASE               shift, and go to state 74
    TK_DEFAULT            shift, and go to state 75
    TK_FOR                shift, and go to state 76
    TK_WHILE              shift, and go to state 77
    TK_DO                 shift, and go to state 78
    TK_BREAK              shift, and go to state 79
    TK_CONTINUE           shift, and go to state 80
    TK_GOTO               shift, and go to state 81
    TK_OP_INCREASE        shift, and go to state 82
    ';'                   shift, and go to state 83
    '('                   shift, and go to state 84
    '{'                   shift, and go to state 38

    COUT           go to state 85
    SCOPE          go to state 86
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 250
    RETURN         go to state 89
    IF_C           go to state 90
    IF             go to state 91
    WHILE_C        go to state 92
    WHILE          go to state 93
    DO_WHILE_C     go to state 94
    DO_WHILE       go to state 95
    FOR_C          go to state 96
    FOR            go to state 97
    LABEL          go to state 98
    GOTO           go to state 99
    CONTINUE       go to state 100
    BREAK          go to state 101
    SWITCH_C       go to state 102
    SWITCH         go to state 103
    E_C            go to state 104
    E              go to state 105
    INCREASE       go to state 106
    PREV_INCREASE  go to state 107
    ATTRIBUITION   go to state 108
    OP_ASSIGN      go to state 109
    DECLARATION    go to state 110
    TYPE           go to state 111
    TERMINAL       go to state 112
    SIGNAL         go to state 113


state 250

   58 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT .

    $default  reduce using rule 58 (FOR)
