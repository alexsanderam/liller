Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_EACH
   TK_OP_LESS_LESS


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START TRANSLATION_UNIT

    2 START: /* empty */

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN OPEN_ARGS CLOSE_ARGS

    5 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    6                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    7 EXTERNAL_DECLARATION: DECLARATION ';'
    8                     | FUNCTION
    9                     | FUNCTION_HEADER ';'

   10 FUNCTION: FUNCTION_HEADER SCOPE
   11         | MAIN_HEADER SCOPE

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS CLOSE_ARGS
   13                | TK_ID OPEN_ARGS ARGS CLOSE_ARGS

   14 OPEN_ARGS: '('

   15 CLOSE_ARGS: ')'

   16 ARGS: TYPE OPTIONAL_ID ',' ARGS
   17     | TYPE OPTIONAL_ID
   18     | /* empty */

   19 OPTIONAL_ID: TK_ID VECTOR_SIZES
   20            | VECTOR_SIZES

   21 OPTIONAL_PARAMETERS: PARAMETERS
   22                    | /* empty */

   23 PARAMETERS: PARAMETERS ',' E
   24           | E

   25 CALL_FUNCTION: COUT
   26              | CIN
   27              | TK_ID '(' OPTIONAL_PARAMETERS ')'

   28 COUT: TK_COUT '(' E_C ')'
   29     | TK_COUTN '(' E_C ')'
   30     | TK_COUTN '(' ')'

   31 CIN: TK_CIN '(' E_C ')'

   32 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

   33 BEGIN_SCOPE: '{'

   34 END_SCOPE: '}'

   35 COMMANDS: STATEMENT COMMANDS
   36         | /* empty */

   37 STATEMENT: E_C ';'
   38          | RETURN ';'
   39          | DECLARATION ';'
   40          | SCOPE
   41          | IF
   42          | WHILE
   43          | DO_WHILE
   44          | FOR
   45          | LABEL STATEMENT
   46          | GOTO ';'
   47          | CONTINUE ';'
   48          | BREAK ';'
   49          | SWITCH
   50          | ';'

   51 RETURN: TK_RETURN E_C

   52 IF_C: TK_IF

   53 IF: IF_C '(' E_C ')' STATEMENT
   54   | IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT

   55 WHILE_C: TK_WHILE

   56 WHILE: WHILE_C '(' E_C ')' STATEMENT

   57 DO_WHILE_C: TK_DO

   58 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';'

   59 OPTIONAL_E: E_C
   60           | /* empty */

   61 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E
   62                          | DECLARATION

   63 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION
   64                         | TERMINAL

   65 FOR_C: TK_FOR

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   67    | FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

   68 LABEL: TK_ID TK_GO_LABEL
   69      | TK_CASE E_C TK_GO_LABEL
   70      | TK_DEFAULT TK_GO_LABEL

   71 GOTO: TK_GOTO TK_ID

   72 CONTINUE: TK_CONTINUE

   73 BREAK: TK_BREAK

   74 SWITCH_C: TK_SWITCH

   75 SWITCH: SWITCH_C '(' E_C ')' STATEMENT

   76 E_C: E

   77 E: '(' E ')'
   78  | CALL_FUNCTION
   79  | TERMINAL
   80  | ATTRIBUITION
   81  | '(' TYPE ')' TERMINAL
   82  | E TK_OP_SUM E
   83  | E TK_OP_SUB E
   84  | E TK_OP_MUL E
   85  | E TK_OP_DIV E
   86  | E TK_OP_MOD E
   87  | E TK_OP_LOGIC_OR E
   88  | E TK_OP_LOGIC_AND E
   89  | E TK_OP_REL_EQ E
   90  | E TK_OP_REL_DIFF E
   91  | E TK_OP_REL_LESS E
   92  | E TK_OP_REL_GREATER E
   93  | E TK_OP_REL_EQLESS E
   94  | E TK_OP_REL_EQGREATER E
   95  | E TK_OP_BIN_AND E
   96  | E TK_OP_BIN_OR E
   97  | E TK_OP_BIN_XOR E
   98  | E TK_OP_BIN_SHIFTR E
   99  | E TK_OP_BIN_SHIFTL E
  100  | TK_OP_LOGIC_NOT E
  101  | TK_OP_BIN_NOT E
  102  | INCREASE
  103  | PREV_INCREASE

  104 INCREASE: TK_ID VECTOR_P TK_OP_INCREASE

  105 PREV_INCREASE: TK_OP_INCREASE TK_ID VECTOR_P

  106 ATTRIBUITION: TK_ID VECTOR_P TK_ASSIGN E
  107             | OP_ASSIGN

  108 OP_ASSIGN: TK_ID VECTOR_P TK_OP_ASSIGN E

  109 DECLARATION: DECLARATION ',' TK_ID VECTOR_SIZES
  110            | DECLARATION ',' TK_ID TK_ASSIGN E
  111            | TYPE TK_ID VECTOR_SIZES
  112            | TYPE TK_ID TK_ASSIGN E

  113 TYPE: TK_TYPE_CHAR
  114     | TK_TYPE_STRING
  115     | TK_TYPE_INT
  116     | TK_TYPE_VOID
  117     | TK_TYPE_FLOAT
  118     | TK_TYPE_DOUBLE
  119     | TK_TYPE_BOOL
  120     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
  121     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
  122     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
  123     | TK_MODIFIER_SIGNED TK_TYPE_INT
  124     | TK_MODIFIER_SHORT TK_TYPE_INT
  125     | TK_MODIFIER_LONG TK_TYPE_INT
  126     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
  127     | TK_MODIFIER_SHORT
  128     | TK_MODIFIER_LONG
  129     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  130     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  131     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
  132     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
  133     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  134     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  135     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  136     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
  137     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

  138 TERMINAL: TK_INT
  139         | TK_FLOAT
  140         | TK_SCIENTIFIC
  141         | TK_CHAR
  142         | SIGNAL TK_INT
  143         | SIGNAL TK_FLOAT
  144         | SIGNAL TK_SCIENTIFIC
  145         | SIGNAL TK_CHAR
  146         | TK_STRING
  147         | TK_BOOL
  148         | TK_ID VECTOR_P
  149         | SIGNAL TK_ID VECTOR_P

  150 SIGNAL: TK_OP_SUM
  151       | TK_OP_SUB

  152 VECTOR_SIZES: '[' E_C ']' VECTOR_SIZES
  153             | /* empty */

  154 VECTOR_P: '[' E_C ']' VECTOR_P
  155         | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 27 28 29 30 31 53 54 56 58 66 67 75 77 81
')' (41) 15 27 28 29 30 31 53 54 56 58 66 67 75 77 81
',' (44) 16 23 109 110
';' (59) 7 9 37 38 39 46 47 48 50 58 66
'[' (91) 152 154
']' (93) 152 154
'{' (123) 33
'}' (125) 34
error (256)
TK_INT (258) 138 142
TK_FLOAT (259) 139 143
TK_SCIENTIFIC (260) 140 144
TK_CHAR (261) 141 145
TK_STRING (262) 146
TK_BOOL (263) 147
TK_MAIN (264) 3 4
TK_ID (265) 12 13 19 27 68 71 104 105 106 108 109 110 111 112 148 149
TK_TYPE_CHAR (266) 113 120 121
TK_TYPE_STRING (267) 114
TK_TYPE_INT (268) 3 4 115 122 123 124 125 129 130 131 132 133 134 135
TK_TYPE_VOID (269) 3 116
TK_TYPE_FLOAT (270) 117
TK_TYPE_DOUBLE (271) 118 126
TK_TYPE_BOOL (272) 119
TK_MODIFIER_UNSIGNED (273) 120 122 129 131 134 136
TK_MODIFIER_SIGNED (274) 121 123 130 132 135 137
TK_MODIFIER_SHORT (275) 124 127 129 130
TK_MODIFIER_LONG (276) 125 126 128 131 132 133 134 135 136 137
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 82 150
TK_OP_SUB (280) 83 151
TK_OP_MUL (281) 84
TK_OP_DIV (282) 85
TK_OP_MOD (283) 86
TK_OP_REL_LESS (284) 91
TK_OP_REL_GREATER (285) 92
TK_OP_REL_EQLESS (286) 93
TK_OP_REL_EQGREATER (287) 94
TK_OP_REL_EQ (288) 89
TK_OP_REL_DIFF (289) 90
TK_OP_LOGIC_AND (290) 88
TK_OP_LOGIC_OR (291) 87
TK_OP_LOGIC_NOT (292) 100
TK_OP_BIN_AND (293) 95
TK_OP_BIN_OR (294) 96
TK_OP_BIN_XOR (295) 97
TK_OP_BIN_NOT (296) 101
TK_OP_BIN_SHIFTR (297) 98
TK_OP_BIN_SHIFTL (298) 99
TK_ASSIGN (299) 106 110 112
TK_RETURN (300) 51
TK_COUT (301) 28
TK_COUTN (302) 29 30
TK_CIN (303) 31
TK_IF (304) 52
TK_ELSE (305) 54
TK_SWITCH (306) 74
TK_CASE (307) 69
TK_DEFAULT (308) 70
TK_FOR (309) 65
TK_EACH (310)
TK_WHILE (311) 55 58
TK_DO (312) 57
TK_BREAK (313) 73
TK_CONTINUE (314) 72
TK_GOTO (315) 71
TK_OP_INCREASE (316) 104 105
TK_OP_LESS_LESS (317)
TK_OP_ASSIGN (318) 108
TK_DOT_DOT (319) 67
TK_GO_LABEL (320) 68 69 70
IFX (321)


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
BEGIN (76)
    on left: 1, on right: 0
START (77)
    on left: 2, on right: 1
MAIN_HEADER (78)
    on left: 3 4, on right: 11
TRANSLATION_UNIT (79)
    on left: 5 6, on right: 1 6
EXTERNAL_DECLARATION (80)
    on left: 7 8 9, on right: 5 6
FUNCTION (81)
    on left: 10 11, on right: 8
FUNCTION_HEADER (82)
    on left: 12 13, on right: 9 10
OPEN_ARGS (83)
    on left: 14, on right: 3 4 12 13
CLOSE_ARGS (84)
    on left: 15, on right: 3 4 12 13
ARGS (85)
    on left: 16 17 18, on right: 12 13 16
OPTIONAL_ID (86)
    on left: 19 20, on right: 16 17
OPTIONAL_PARAMETERS (87)
    on left: 21 22, on right: 27
PARAMETERS (88)
    on left: 23 24, on right: 21 23
CALL_FUNCTION (89)
    on left: 25 26 27, on right: 78
COUT (90)
    on left: 28 29 30, on right: 25
CIN (91)
    on left: 31, on right: 26
SCOPE (92)
    on left: 32, on right: 10 11 40
BEGIN_SCOPE (93)
    on left: 33, on right: 32
END_SCOPE (94)
    on left: 34, on right: 32
COMMANDS (95)
    on left: 35 36, on right: 32 35
STATEMENT (96)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50, on right: 35
    45 53 54 56 58 66 67 75
RETURN (97)
    on left: 51, on right: 38
IF_C (98)
    on left: 52, on right: 53 54
IF (99)
    on left: 53 54, on right: 41
WHILE_C (100)
    on left: 55, on right: 56
WHILE (101)
    on left: 56, on right: 42
DO_WHILE_C (102)
    on left: 57, on right: 58
DO_WHILE (103)
    on left: 58, on right: 43
OPTIONAL_E (104)
    on left: 59 60, on right: 61 66
OPTIONAL_E_OR_DECLARATION (105)
    on left: 61 62, on right: 66
ATTRIBUITION_OR_TERMINAL (106)
    on left: 63 64, on right: 67
FOR_C (107)
    on left: 65, on right: 66 67
FOR (108)
    on left: 66 67, on right: 44
LABEL (109)
    on left: 68 69 70, on right: 45
GOTO (110)
    on left: 71, on right: 46
CONTINUE (111)
    on left: 72, on right: 47
BREAK (112)
    on left: 73, on right: 48
SWITCH_C (113)
    on left: 74, on right: 75
SWITCH (114)
    on left: 75, on right: 49
E_C (115)
    on left: 76, on right: 28 29 31 37 51 53 54 56 58 59 69 75 152
    154
E (116)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
    95 96 97 98 99 100 101 102 103, on right: 23 24 76 77 82 83 84
    85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 106 108 110
    112
INCREASE (117)
    on left: 104, on right: 102
PREV_INCREASE (118)
    on left: 105, on right: 103
ATTRIBUITION (119)
    on left: 106 107, on right: 63 80
OP_ASSIGN (120)
    on left: 108, on right: 107
DECLARATION (121)
    on left: 109 110 111 112, on right: 7 39 62 109 110
TYPE (122)
    on left: 113 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 135 136 137, on right: 12 16 17
    81 111 112
TERMINAL (123)
    on left: 138 139 140 141 142 143 144 145 146 147 148 149, on right:
    64 67 79 81
SIGNAL (124)
    on left: 150 151, on right: 142 143 144 145 149
VECTOR_SIZES (125)
    on left: 152 153, on right: 19 20 109 111 152
VECTOR_P (126)
    on left: 154 155, on right: 104 105 106 108 148 149 154


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . TRANSLATION_UNIT

    TK_ID                 shift, and go to state 4
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN_HEADER           go to state 16
    TRANSLATION_UNIT      go to state 17
    EXTERNAL_DECLARATION  go to state 18
    FUNCTION              go to state 19
    FUNCTION_HEADER       go to state 20
    DECLARATION           go to state 21
    TYPE                  go to state 22


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

   13 FUNCTION_HEADER: TK_ID . OPEN_ARGS ARGS CLOSE_ARGS

    '('  shift, and go to state 23

    OPEN_ARGS  go to state 24


state 5

  113 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 113 (TYPE)


state 6

  114 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 114 (TYPE)


state 7

    3 MAIN_HEADER: TK_TYPE_INT . TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT . TK_MAIN OPEN_ARGS CLOSE_ARGS
  115 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 25

    $default  reduce using rule 115 (TYPE)


state 8

  116 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 116 (TYPE)


state 9

  117 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 117 (TYPE)


state 10

  118 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 118 (TYPE)


state 11

  119 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 119 (TYPE)


state 12

  120 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
  122     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
  129     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  131     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  134     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  136     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 26
    TK_TYPE_INT        shift, and go to state 27
    TK_MODIFIER_SHORT  shift, and go to state 28
    TK_MODIFIER_LONG   shift, and go to state 29


state 13

  121 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
  123     | TK_MODIFIER_SIGNED . TK_TYPE_INT
  130     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  132     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  135     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  137     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 30
    TK_TYPE_INT        shift, and go to state 31
    TK_MODIFIER_SHORT  shift, and go to state 32
    TK_MODIFIER_LONG   shift, and go to state 33


state 14

  124 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
  127     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 34

    $default  reduce using rule 127 (TYPE)


state 15

  125 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
  126     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
  128     | TK_MODIFIER_LONG .
  133     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 35
    TK_TYPE_DOUBLE    shift, and go to state 36
    TK_MODIFIER_LONG  shift, and go to state 37

    $default  reduce using rule 128 (TYPE)


state 16

   11 FUNCTION: MAIN_HEADER . SCOPE

    '{'  shift, and go to state 38

    SCOPE        go to state 39
    BEGIN_SCOPE  go to state 40


state 17

    1 BEGIN: START TRANSLATION_UNIT .
    6 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    TK_ID                 shift, and go to state 4
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 1 (BEGIN)

    MAIN_HEADER           go to state 16
    EXTERNAL_DECLARATION  go to state 41
    FUNCTION              go to state 19
    FUNCTION_HEADER       go to state 20
    DECLARATION           go to state 21
    TYPE                  go to state 22


state 18

    5 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


state 19

    8 EXTERNAL_DECLARATION: FUNCTION .

    $default  reduce using rule 8 (EXTERNAL_DECLARATION)


state 20

    9 EXTERNAL_DECLARATION: FUNCTION_HEADER . ';'
   10 FUNCTION: FUNCTION_HEADER . SCOPE

    ';'  shift, and go to state 42
    '{'  shift, and go to state 38

    SCOPE        go to state 43
    BEGIN_SCOPE  go to state 40


state 21

    7 EXTERNAL_DECLARATION: DECLARATION . ';'
  109 DECLARATION: DECLARATION . ',' TK_ID VECTOR_SIZES
  110            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 44
    ','  shift, and go to state 45


state 22

   12 FUNCTION_HEADER: TYPE . TK_ID OPEN_ARGS ARGS CLOSE_ARGS
  111 DECLARATION: TYPE . TK_ID VECTOR_SIZES
  112            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 46


state 23

   14 OPEN_ARGS: '(' .

    $default  reduce using rule 14 (OPEN_ARGS)


state 24

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS . ARGS CLOSE_ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 48
    TYPE  go to state 49


state 25

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN . OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN . OPEN_ARGS CLOSE_ARGS

    '('  shift, and go to state 23

    OPEN_ARGS  go to state 50


state 26

  120 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 120 (TYPE)


state 27

  122 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 122 (TYPE)


state 28

  129 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 51


state 29

  131 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  134     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  136     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 52
    TK_MODIFIER_LONG  shift, and go to state 53


state 30

  121 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 121 (TYPE)


state 31

  123 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 123 (TYPE)


state 32

  130 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 54


state 33

  132 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  135     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  137     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 55
    TK_MODIFIER_LONG  shift, and go to state 56


state 34

  124 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 124 (TYPE)


state 35

  125 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 125 (TYPE)


state 36

  126 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 126 (TYPE)


state 37

  133 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 57


state 38

   33 BEGIN_SCOPE: '{' .

    $default  reduce using rule 33 (BEGIN_SCOPE)


state 39

   11 FUNCTION: MAIN_HEADER SCOPE .

    $default  reduce using rule 11 (FUNCTION)


state 40

   32 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    $default  reduce using rule 36 (COMMANDS)

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    COMMANDS       go to state 90
    STATEMENT      go to state 91
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 41

    6 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 6 (TRANSLATION_UNIT)


state 42

    9 EXTERNAL_DECLARATION: FUNCTION_HEADER ';' .

    $default  reduce using rule 9 (EXTERNAL_DECLARATION)


state 43

   10 FUNCTION: FUNCTION_HEADER SCOPE .

    $default  reduce using rule 10 (FUNCTION)


state 44

    7 EXTERNAL_DECLARATION: DECLARATION ';' .

    $default  reduce using rule 7 (EXTERNAL_DECLARATION)


state 45

  109 DECLARATION: DECLARATION ',' . TK_ID VECTOR_SIZES
  110            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 117


state 46

   12 FUNCTION_HEADER: TYPE TK_ID . OPEN_ARGS ARGS CLOSE_ARGS
  111 DECLARATION: TYPE TK_ID . VECTOR_SIZES
  112            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 118
    '('        shift, and go to state 23
    '['        shift, and go to state 119

    $default  reduce using rule 153 (VECTOR_SIZES)

    OPEN_ARGS     go to state 120
    VECTOR_SIZES  go to state 121


state 47

  115 TYPE: TK_TYPE_INT .

    $default  reduce using rule 115 (TYPE)


state 48

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS ARGS . CLOSE_ARGS

    ')'  shift, and go to state 122

    CLOSE_ARGS  go to state 123


state 49

   16 ARGS: TYPE . OPTIONAL_ID ',' ARGS
   17     | TYPE . OPTIONAL_ID

    TK_ID  shift, and go to state 124
    '['    shift, and go to state 119

    $default  reduce using rule 153 (VECTOR_SIZES)

    OPTIONAL_ID   go to state 125
    VECTOR_SIZES  go to state 126


state 50

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS . TK_TYPE_VOID CLOSE_ARGS
    4            | TK_TYPE_INT TK_MAIN OPEN_ARGS . CLOSE_ARGS

    TK_TYPE_VOID  shift, and go to state 127
    ')'           shift, and go to state 122

    CLOSE_ARGS  go to state 128


state 51

  129 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 129 (TYPE)


state 52

  131 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 131 (TYPE)


state 53

  134 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  136     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 129

    $default  reduce using rule 136 (TYPE)


state 54

  130 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 130 (TYPE)


state 55

  132 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 132 (TYPE)


state 56

  135 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  137     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 130

    $default  reduce using rule 137 (TYPE)


state 57

  133 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 133 (TYPE)


state 58

  138 TERMINAL: TK_INT .

    $default  reduce using rule 138 (TERMINAL)


state 59

  139 TERMINAL: TK_FLOAT .

    $default  reduce using rule 139 (TERMINAL)


state 60

  140 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 140 (TERMINAL)


state 61

  141 TERMINAL: TK_CHAR .

    $default  reduce using rule 141 (TERMINAL)


state 62

  146 TERMINAL: TK_STRING .

    $default  reduce using rule 146 (TERMINAL)


state 63

  147 TERMINAL: TK_BOOL .

    $default  reduce using rule 147 (TERMINAL)


state 64

   27 CALL_FUNCTION: TK_ID . '(' OPTIONAL_PARAMETERS ')'
   68 LABEL: TK_ID . TK_GO_LABEL
  104 INCREASE: TK_ID . VECTOR_P TK_OP_INCREASE
  106 ATTRIBUITION: TK_ID . VECTOR_P TK_ASSIGN E
  108 OP_ASSIGN: TK_ID . VECTOR_P TK_OP_ASSIGN E
  148 TERMINAL: TK_ID . VECTOR_P

    TK_GO_LABEL  shift, and go to state 131
    '('          shift, and go to state 132
    '['          shift, and go to state 133

    $default  reduce using rule 155 (VECTOR_P)

    VECTOR_P  go to state 134


state 65

  150 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 150 (SIGNAL)


state 66

  151 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 151 (SIGNAL)


state 67

  100 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 136
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 68

  101 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 137
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 69

   51 RETURN: TK_RETURN . E_C

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 138
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 70

   28 COUT: TK_COUT . '(' E_C ')'

    '('  shift, and go to state 139


state 71

   29 COUT: TK_COUTN . '(' E_C ')'
   30     | TK_COUTN . '(' ')'

    '('  shift, and go to state 140


state 72

   31 CIN: TK_CIN . '(' E_C ')'

    '('  shift, and go to state 141


state 73

   52 IF_C: TK_IF .

    $default  reduce using rule 52 (IF_C)


state 74

   74 SWITCH_C: TK_SWITCH .

    $default  reduce using rule 74 (SWITCH_C)


state 75

   69 LABEL: TK_CASE . E_C TK_GO_LABEL

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 142
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 76

   70 LABEL: TK_DEFAULT . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 143


state 77

   65 FOR_C: TK_FOR .

    $default  reduce using rule 65 (FOR_C)


state 78

   55 WHILE_C: TK_WHILE .

    $default  reduce using rule 55 (WHILE_C)


state 79

   57 DO_WHILE_C: TK_DO .

    $default  reduce using rule 57 (DO_WHILE_C)


state 80

   73 BREAK: TK_BREAK .

    $default  reduce using rule 73 (BREAK)


state 81

   72 CONTINUE: TK_CONTINUE .

    $default  reduce using rule 72 (CONTINUE)


state 82

   71 GOTO: TK_GOTO . TK_ID

    TK_ID  shift, and go to state 144


state 83

  105 PREV_INCREASE: TK_OP_INCREASE . TK_ID VECTOR_P

    TK_ID  shift, and go to state 145


state 84

   50 STATEMENT: ';' .

    $default  reduce using rule 50 (STATEMENT)


state 85

   77 E: '(' . E ')'
   81  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 135
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_OP_INCREASE        shift, and go to state 83
    '('                   shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 146
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TYPE           go to state 147
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 86

   78 E: CALL_FUNCTION .

    $default  reduce using rule 78 (E)


state 87

   25 CALL_FUNCTION: COUT .

    $default  reduce using rule 25 (CALL_FUNCTION)


state 88

   26 CALL_FUNCTION: CIN .

    $default  reduce using rule 26 (CALL_FUNCTION)


state 89

   40 STATEMENT: SCOPE .

    $default  reduce using rule 40 (STATEMENT)


state 90

   32 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 148

    END_SCOPE  go to state 149


state 91

   35 COMMANDS: STATEMENT . COMMANDS

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    $default  reduce using rule 36 (COMMANDS)

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    COMMANDS       go to state 150
    STATEMENT      go to state 91
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 92

   38 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 151


state 93

   53 IF: IF_C . '(' E_C ')' STATEMENT
   54   | IF_C . '(' E_C ')' STATEMENT TK_ELSE STATEMENT

    '('  shift, and go to state 152


state 94

   41 STATEMENT: IF .

    $default  reduce using rule 41 (STATEMENT)


state 95

   56 WHILE: WHILE_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 153


state 96

   42 STATEMENT: WHILE .

    $default  reduce using rule 42 (STATEMENT)


state 97

   58 DO_WHILE: DO_WHILE_C . STATEMENT TK_WHILE '(' E_C ')' ';'

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 154
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 98

   43 STATEMENT: DO_WHILE .

    $default  reduce using rule 43 (STATEMENT)


state 99

   66 FOR: FOR_C . '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   67    | FOR_C . '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    '('  shift, and go to state 155


state 100

   44 STATEMENT: FOR .

    $default  reduce using rule 44 (STATEMENT)


state 101

   45 STATEMENT: LABEL . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 156
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 102

   46 STATEMENT: GOTO . ';'

    ';'  shift, and go to state 157


state 103

   47 STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 158


state 104

   48 STATEMENT: BREAK . ';'

    ';'  shift, and go to state 159


state 105

   75 SWITCH: SWITCH_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 160


state 106

   49 STATEMENT: SWITCH .

    $default  reduce using rule 49 (STATEMENT)


state 107

   37 STATEMENT: E_C . ';'

    ';'  shift, and go to state 161


state 108

   76 E_C: E .
   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 76 (E_C)


state 109

  102 E: INCREASE .

    $default  reduce using rule 102 (E)


state 110

  103 E: PREV_INCREASE .

    $default  reduce using rule 103 (E)


state 111

   80 E: ATTRIBUITION .

    $default  reduce using rule 80 (E)


state 112

  107 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 107 (ATTRIBUITION)


state 113

   39 STATEMENT: DECLARATION . ';'
  109 DECLARATION: DECLARATION . ',' TK_ID VECTOR_SIZES
  110            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 180
    ','  shift, and go to state 45


state 114

  111 DECLARATION: TYPE . TK_ID VECTOR_SIZES
  112            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 181


state 115

   79 E: TERMINAL .

    $default  reduce using rule 79 (E)


state 116

  142 TERMINAL: SIGNAL . TK_INT
  143         | SIGNAL . TK_FLOAT
  144         | SIGNAL . TK_SCIENTIFIC
  145         | SIGNAL . TK_CHAR
  149         | SIGNAL . TK_ID VECTOR_P

    TK_INT         shift, and go to state 182
    TK_FLOAT       shift, and go to state 183
    TK_SCIENTIFIC  shift, and go to state 184
    TK_CHAR        shift, and go to state 185
    TK_ID          shift, and go to state 186


state 117

  109 DECLARATION: DECLARATION ',' TK_ID . VECTOR_SIZES
  110            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 187
    '['        shift, and go to state 119

    $default  reduce using rule 153 (VECTOR_SIZES)

    VECTOR_SIZES  go to state 188


state 118

  112 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 189
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 119

  152 VECTOR_SIZES: '[' . E_C ']' VECTOR_SIZES

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 190
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 120

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS . ARGS CLOSE_ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 191
    TYPE  go to state 49


state 121

  111 DECLARATION: TYPE TK_ID VECTOR_SIZES .

    $default  reduce using rule 111 (DECLARATION)


state 122

   15 CLOSE_ARGS: ')' .

    $default  reduce using rule 15 (CLOSE_ARGS)


state 123

   13 FUNCTION_HEADER: TK_ID OPEN_ARGS ARGS CLOSE_ARGS .

    $default  reduce using rule 13 (FUNCTION_HEADER)


state 124

   19 OPTIONAL_ID: TK_ID . VECTOR_SIZES

    '['  shift, and go to state 119

    $default  reduce using rule 153 (VECTOR_SIZES)

    VECTOR_SIZES  go to state 192


state 125

   16 ARGS: TYPE OPTIONAL_ID . ',' ARGS
   17     | TYPE OPTIONAL_ID .

    ','  shift, and go to state 193

    $default  reduce using rule 17 (ARGS)


state 126

   20 OPTIONAL_ID: VECTOR_SIZES .

    $default  reduce using rule 20 (OPTIONAL_ID)


state 127

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID . CLOSE_ARGS

    ')'  shift, and go to state 122

    CLOSE_ARGS  go to state 194


state 128

    4 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS CLOSE_ARGS .

    $default  reduce using rule 4 (MAIN_HEADER)


state 129

  134 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 134 (TYPE)


state 130

  135 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 135 (TYPE)


state 131

   68 LABEL: TK_ID TK_GO_LABEL .

    $default  reduce using rule 68 (LABEL)


state 132

   27 CALL_FUNCTION: TK_ID '(' . OPTIONAL_PARAMETERS ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    $default  reduce using rule 22 (OPTIONAL_PARAMETERS)

    OPTIONAL_PARAMETERS  go to state 195
    PARAMETERS           go to state 196
    CALL_FUNCTION        go to state 86
    COUT                 go to state 87
    CIN                  go to state 88
    E                    go to state 197
    INCREASE             go to state 109
    PREV_INCREASE        go to state 110
    ATTRIBUITION         go to state 111
    OP_ASSIGN            go to state 112
    TERMINAL             go to state 115
    SIGNAL               go to state 116


state 133

  154 VECTOR_P: '[' . E_C ']' VECTOR_P

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 198
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 134

  104 INCREASE: TK_ID VECTOR_P . TK_OP_INCREASE
  106 ATTRIBUITION: TK_ID VECTOR_P . TK_ASSIGN E
  108 OP_ASSIGN: TK_ID VECTOR_P . TK_OP_ASSIGN E
  148 TERMINAL: TK_ID VECTOR_P .

    TK_ASSIGN       shift, and go to state 199
    TK_OP_INCREASE  shift, and go to state 200
    TK_OP_ASSIGN    shift, and go to state 201

    $default  reduce using rule 148 (TERMINAL)


state 135

   27 CALL_FUNCTION: TK_ID . '(' OPTIONAL_PARAMETERS ')'
  104 INCREASE: TK_ID . VECTOR_P TK_OP_INCREASE
  106 ATTRIBUITION: TK_ID . VECTOR_P TK_ASSIGN E
  108 OP_ASSIGN: TK_ID . VECTOR_P TK_OP_ASSIGN E
  148 TERMINAL: TK_ID . VECTOR_P

    '('  shift, and go to state 132
    '['  shift, and go to state 133

    $default  reduce using rule 155 (VECTOR_P)

    VECTOR_P  go to state 134


state 136

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
  100  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 100 (E)


state 137

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
  101  | TK_OP_BIN_NOT E .

    $default  reduce using rule 101 (E)


state 138

   51 RETURN: TK_RETURN E_C .

    $default  reduce using rule 51 (RETURN)


state 139

   28 COUT: TK_COUT '(' . E_C ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 202
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 140

   29 COUT: TK_COUTN '(' . E_C ')'
   30     | TK_COUTN '(' . ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85
    ')'              shift, and go to state 203

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 204
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 141

   31 CIN: TK_CIN '(' . E_C ')'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 205
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 142

   69 LABEL: TK_CASE E_C . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 206


state 143

   70 LABEL: TK_DEFAULT TK_GO_LABEL .

    $default  reduce using rule 70 (LABEL)


state 144

   71 GOTO: TK_GOTO TK_ID .

    $default  reduce using rule 71 (GOTO)


state 145

  105 PREV_INCREASE: TK_OP_INCREASE TK_ID . VECTOR_P

    '['  shift, and go to state 133

    $default  reduce using rule 155 (VECTOR_P)

    VECTOR_P  go to state 207


state 146

   77 E: '(' E . ')'
   82  | E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179
    ')'                  shift, and go to state 208


state 147

   81 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 209


state 148

   34 END_SCOPE: '}' .

    $default  reduce using rule 34 (END_SCOPE)


state 149

   32 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 32 (SCOPE)


state 150

   35 COMMANDS: STATEMENT COMMANDS .

    $default  reduce using rule 35 (COMMANDS)


state 151

   38 STATEMENT: RETURN ';' .

    $default  reduce using rule 38 (STATEMENT)


state 152

   53 IF: IF_C '(' . E_C ')' STATEMENT
   54   | IF_C '(' . E_C ')' STATEMENT TK_ELSE STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 210
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 153

   56 WHILE: WHILE_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 211
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 154

   58 DO_WHILE: DO_WHILE_C STATEMENT . TK_WHILE '(' E_C ')' ';'

    TK_WHILE  shift, and go to state 212


state 155

   66 FOR: FOR_C '(' . OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   67    | FOR_C '(' . ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 135
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_OP_INCREASE        shift, and go to state 83
    '('                   shift, and go to state 85

    $default  reduce using rule 60 (OPTIONAL_E)

    CALL_FUNCTION              go to state 86
    COUT                       go to state 87
    CIN                        go to state 88
    OPTIONAL_E                 go to state 213
    OPTIONAL_E_OR_DECLARATION  go to state 214
    ATTRIBUITION_OR_TERMINAL   go to state 215
    E_C                        go to state 216
    E                          go to state 108
    INCREASE                   go to state 109
    PREV_INCREASE              go to state 110
    ATTRIBUITION               go to state 217
    OP_ASSIGN                  go to state 112
    DECLARATION                go to state 218
    TYPE                       go to state 114
    TERMINAL                   go to state 219
    SIGNAL                     go to state 116


state 156

   45 STATEMENT: LABEL STATEMENT .

    $default  reduce using rule 45 (STATEMENT)


state 157

   46 STATEMENT: GOTO ';' .

    $default  reduce using rule 46 (STATEMENT)


state 158

   47 STATEMENT: CONTINUE ';' .

    $default  reduce using rule 47 (STATEMENT)


state 159

   48 STATEMENT: BREAK ';' .

    $default  reduce using rule 48 (STATEMENT)


state 160

   75 SWITCH: SWITCH_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 220
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 161

   37 STATEMENT: E_C ';' .

    $default  reduce using rule 37 (STATEMENT)


state 162

   82 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 221
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 163

   83 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 222
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 164

   84 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 223
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 165

   85 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 224
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 166

   86 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 225
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 167

   91 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 226
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 168

   92 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 227
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 169

   93 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 228
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 170

   94 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 229
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 171

   89 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 230
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 172

   90 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 231
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 173

   88 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 232
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 174

   87 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 233
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 175

   95 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 234
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 176

   96 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 235
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 177

   97 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 236
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 178

   98 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 237
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 179

   99 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 238
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 180

   39 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 39 (STATEMENT)


state 181

  111 DECLARATION: TYPE TK_ID . VECTOR_SIZES
  112            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 118
    '['        shift, and go to state 119

    $default  reduce using rule 153 (VECTOR_SIZES)

    VECTOR_SIZES  go to state 121


state 182

  142 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 142 (TERMINAL)


state 183

  143 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 143 (TERMINAL)


state 184

  144 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 144 (TERMINAL)


state 185

  145 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 145 (TERMINAL)


state 186

  149 TERMINAL: SIGNAL TK_ID . VECTOR_P

    '['  shift, and go to state 133

    $default  reduce using rule 155 (VECTOR_P)

    VECTOR_P  go to state 239


state 187

  110 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 240
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 188

  109 DECLARATION: DECLARATION ',' TK_ID VECTOR_SIZES .

    $default  reduce using rule 109 (DECLARATION)


state 189

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
  112 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 112 (DECLARATION)


state 190

  152 VECTOR_SIZES: '[' E_C . ']' VECTOR_SIZES

    ']'  shift, and go to state 241


state 191

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS . CLOSE_ARGS

    ')'  shift, and go to state 122

    CLOSE_ARGS  go to state 242


state 192

   19 OPTIONAL_ID: TK_ID VECTOR_SIZES .

    $default  reduce using rule 19 (OPTIONAL_ID)


state 193

   16 ARGS: TYPE OPTIONAL_ID ',' . ARGS

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    $default  reduce using rule 18 (ARGS)

    ARGS  go to state 243
    TYPE  go to state 49


state 194

    3 MAIN_HEADER: TK_TYPE_INT TK_MAIN OPEN_ARGS TK_TYPE_VOID CLOSE_ARGS .

    $default  reduce using rule 3 (MAIN_HEADER)


state 195

   27 CALL_FUNCTION: TK_ID '(' OPTIONAL_PARAMETERS . ')'

    ')'  shift, and go to state 244


state 196

   21 OPTIONAL_PARAMETERS: PARAMETERS .
   23 PARAMETERS: PARAMETERS . ',' E

    ','  shift, and go to state 245

    $default  reduce using rule 21 (OPTIONAL_PARAMETERS)


state 197

   24 PARAMETERS: E .
   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 24 (PARAMETERS)


state 198

  154 VECTOR_P: '[' E_C . ']' VECTOR_P

    ']'  shift, and go to state 246


state 199

  106 ATTRIBUITION: TK_ID VECTOR_P TK_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 247
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 200

  104 INCREASE: TK_ID VECTOR_P TK_OP_INCREASE .

    $default  reduce using rule 104 (INCREASE)


state 201

  108 OP_ASSIGN: TK_ID VECTOR_P TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 248
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 202

   28 COUT: TK_COUT '(' E_C . ')'

    ')'  shift, and go to state 249


state 203

   30 COUT: TK_COUTN '(' ')' .

    $default  reduce using rule 30 (COUT)


state 204

   29 COUT: TK_COUTN '(' E_C . ')'

    ')'  shift, and go to state 250


state 205

   31 CIN: TK_CIN '(' E_C . ')'

    ')'  shift, and go to state 251


state 206

   69 LABEL: TK_CASE E_C TK_GO_LABEL .

    $default  reduce using rule 69 (LABEL)


state 207

  105 PREV_INCREASE: TK_OP_INCREASE TK_ID VECTOR_P .

    $default  reduce using rule 105 (PREV_INCREASE)


state 208

   77 E: '(' E ')' .

    $default  reduce using rule 77 (E)


state 209

   81 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 58
    TK_FLOAT       shift, and go to state 59
    TK_SCIENTIFIC  shift, and go to state 60
    TK_CHAR        shift, and go to state 61
    TK_STRING      shift, and go to state 62
    TK_BOOL        shift, and go to state 63
    TK_ID          shift, and go to state 252
    TK_OP_SUM      shift, and go to state 65
    TK_OP_SUB      shift, and go to state 66

    TERMINAL  go to state 253
    SIGNAL    go to state 116


state 210

   53 IF: IF_C '(' E_C . ')' STATEMENT
   54   | IF_C '(' E_C . ')' STATEMENT TK_ELSE STATEMENT

    ')'  shift, and go to state 254


state 211

   56 WHILE: WHILE_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 255


state 212

   58 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE . '(' E_C ')' ';'

    '('  shift, and go to state 256


state 213

   61 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E .

    $default  reduce using rule 61 (OPTIONAL_E_OR_DECLARATION)


state 214

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION . ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 257


state 215

   67 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL . TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_DOT_DOT  shift, and go to state 258


state 216

   59 OPTIONAL_E: E_C .

    $default  reduce using rule 59 (OPTIONAL_E)


state 217

   63 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION .
   80 E: ATTRIBUITION .

    TK_DOT_DOT  reduce using rule 63 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 80 (E)


state 218

   62 OPTIONAL_E_OR_DECLARATION: DECLARATION .
  109 DECLARATION: DECLARATION . ',' TK_ID VECTOR_SIZES
  110            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ','  shift, and go to state 45

    $default  reduce using rule 62 (OPTIONAL_E_OR_DECLARATION)


state 219

   64 ATTRIBUITION_OR_TERMINAL: TERMINAL .
   79 E: TERMINAL .

    TK_DOT_DOT  reduce using rule 64 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 79 (E)


state 220

   75 SWITCH: SWITCH_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 259


state 221

   82 E: E . TK_OP_SUM E
   82  | E TK_OP_SUM E .
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 163
    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 82 (E)


state 222

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   83  | E TK_OP_SUB E .
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 83 (E)


state 223

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   84  | E TK_OP_MUL E .
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 84 (E)


state 224

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   85  | E TK_OP_DIV E .
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 85 (E)


state 225

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   86  | E TK_OP_MOD E .
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 86 (E)


state 226

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   91  | E TK_OP_REL_LESS E .
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 162
    TK_OP_SUB         shift, and go to state 163
    TK_OP_MUL         shift, and go to state 164
    TK_OP_DIV         shift, and go to state 165
    TK_OP_MOD         shift, and go to state 166
    TK_OP_BIN_AND     shift, and go to state 175
    TK_OP_BIN_OR      shift, and go to state 176
    TK_OP_BIN_XOR     shift, and go to state 177
    TK_OP_BIN_SHIFTR  shift, and go to state 178
    TK_OP_BIN_SHIFTL  shift, and go to state 179

    $default  reduce using rule 91 (E)


state 227

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   92  | E TK_OP_REL_GREATER E .
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 162
    TK_OP_SUB         shift, and go to state 163
    TK_OP_MUL         shift, and go to state 164
    TK_OP_DIV         shift, and go to state 165
    TK_OP_MOD         shift, and go to state 166
    TK_OP_BIN_AND     shift, and go to state 175
    TK_OP_BIN_OR      shift, and go to state 176
    TK_OP_BIN_XOR     shift, and go to state 177
    TK_OP_BIN_SHIFTR  shift, and go to state 178
    TK_OP_BIN_SHIFTL  shift, and go to state 179

    $default  reduce using rule 92 (E)


state 228

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   93  | E TK_OP_REL_EQLESS E .
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 162
    TK_OP_SUB         shift, and go to state 163
    TK_OP_MUL         shift, and go to state 164
    TK_OP_DIV         shift, and go to state 165
    TK_OP_MOD         shift, and go to state 166
    TK_OP_BIN_AND     shift, and go to state 175
    TK_OP_BIN_OR      shift, and go to state 176
    TK_OP_BIN_XOR     shift, and go to state 177
    TK_OP_BIN_SHIFTR  shift, and go to state 178
    TK_OP_BIN_SHIFTL  shift, and go to state 179

    $default  reduce using rule 93 (E)


state 229

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   94  | E TK_OP_REL_EQGREATER E .
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 162
    TK_OP_SUB         shift, and go to state 163
    TK_OP_MUL         shift, and go to state 164
    TK_OP_DIV         shift, and go to state 165
    TK_OP_MOD         shift, and go to state 166
    TK_OP_BIN_AND     shift, and go to state 175
    TK_OP_BIN_OR      shift, and go to state 176
    TK_OP_BIN_XOR     shift, and go to state 177
    TK_OP_BIN_SHIFTR  shift, and go to state 178
    TK_OP_BIN_SHIFTL  shift, and go to state 179

    $default  reduce using rule 94 (E)


state 230

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   89  | E TK_OP_REL_EQ E .
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 89 (E)


state 231

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   90  | E TK_OP_REL_DIFF E .
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 90 (E)


state 232

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   88  | E TK_OP_LOGIC_AND E .
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 88 (E)


state 233

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   87  | E TK_OP_LOGIC_OR E .
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 87 (E)


state 234

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   95  | E TK_OP_BIN_AND E .
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 162
    TK_OP_SUB  shift, and go to state 163
    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 95 (E)


state 235

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   96  | E TK_OP_BIN_OR E .
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 162
    TK_OP_SUB  shift, and go to state 163
    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 96 (E)


state 236

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   97  | E TK_OP_BIN_XOR E .
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 162
    TK_OP_SUB  shift, and go to state 163
    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 97 (E)


state 237

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   98  | E TK_OP_BIN_SHIFTR E .
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 162
    TK_OP_SUB  shift, and go to state 163
    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 98 (E)


state 238

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
   99  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 162
    TK_OP_SUB  shift, and go to state 163
    TK_OP_MUL  shift, and go to state 164
    TK_OP_DIV  shift, and go to state 165
    TK_OP_MOD  shift, and go to state 166

    $default  reduce using rule 99 (E)


state 239

  149 TERMINAL: SIGNAL TK_ID VECTOR_P .

    $default  reduce using rule 149 (TERMINAL)


state 240

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
  110 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 110 (DECLARATION)


state 241

  152 VECTOR_SIZES: '[' E_C ']' . VECTOR_SIZES

    '['  shift, and go to state 119

    $default  reduce using rule 153 (VECTOR_SIZES)

    VECTOR_SIZES  go to state 260


state 242

   12 FUNCTION_HEADER: TYPE TK_ID OPEN_ARGS ARGS CLOSE_ARGS .

    $default  reduce using rule 12 (FUNCTION_HEADER)


state 243

   16 ARGS: TYPE OPTIONAL_ID ',' ARGS .

    $default  reduce using rule 16 (ARGS)


state 244

   27 CALL_FUNCTION: TK_ID '(' OPTIONAL_PARAMETERS ')' .

    $default  reduce using rule 27 (CALL_FUNCTION)


state 245

   23 PARAMETERS: PARAMETERS ',' . E

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E              go to state 261
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 246

  154 VECTOR_P: '[' E_C ']' . VECTOR_P

    '['  shift, and go to state 133

    $default  reduce using rule 155 (VECTOR_P)

    VECTOR_P  go to state 262


state 247

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
  106 ATTRIBUITION: TK_ID VECTOR_P TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 106 (ATTRIBUITION)


state 248

   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E
  108 OP_ASSIGN: TK_ID VECTOR_P TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 108 (OP_ASSIGN)


state 249

   28 COUT: TK_COUT '(' E_C ')' .

    $default  reduce using rule 28 (COUT)


state 250

   29 COUT: TK_COUTN '(' E_C ')' .

    $default  reduce using rule 29 (COUT)


state 251

   31 CIN: TK_CIN '(' E_C ')' .

    $default  reduce using rule 31 (CIN)


state 252

  148 TERMINAL: TK_ID . VECTOR_P

    '['  shift, and go to state 133

    $default  reduce using rule 155 (VECTOR_P)

    VECTOR_P  go to state 263


state 253

   81 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 81 (E)


state 254

   53 IF: IF_C '(' E_C ')' . STATEMENT
   54   | IF_C '(' E_C ')' . STATEMENT TK_ELSE STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 264
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 255

   56 WHILE: WHILE_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 265
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 256

   58 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' . E_C ')' ';'

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    E_C            go to state 266
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 257

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' . OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    $default  reduce using rule 60 (OPTIONAL_E)

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    OPTIONAL_E     go to state 267
    E_C            go to state 216
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 258

   67 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT . TERMINAL ')' STATEMENT

    TK_INT         shift, and go to state 58
    TK_FLOAT       shift, and go to state 59
    TK_SCIENTIFIC  shift, and go to state 60
    TK_CHAR        shift, and go to state 61
    TK_STRING      shift, and go to state 62
    TK_BOOL        shift, and go to state 63
    TK_ID          shift, and go to state 252
    TK_OP_SUM      shift, and go to state 65
    TK_OP_SUB      shift, and go to state 66

    TERMINAL  go to state 268
    SIGNAL    go to state 116


state 259

   75 SWITCH: SWITCH_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 269
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 260

  152 VECTOR_SIZES: '[' E_C ']' VECTOR_SIZES .

    $default  reduce using rule 152 (VECTOR_SIZES)


state 261

   23 PARAMETERS: PARAMETERS ',' E .
   82 E: E . TK_OP_SUM E
   83  | E . TK_OP_SUB E
   84  | E . TK_OP_MUL E
   85  | E . TK_OP_DIV E
   86  | E . TK_OP_MOD E
   87  | E . TK_OP_LOGIC_OR E
   88  | E . TK_OP_LOGIC_AND E
   89  | E . TK_OP_REL_EQ E
   90  | E . TK_OP_REL_DIFF E
   91  | E . TK_OP_REL_LESS E
   92  | E . TK_OP_REL_GREATER E
   93  | E . TK_OP_REL_EQLESS E
   94  | E . TK_OP_REL_EQGREATER E
   95  | E . TK_OP_BIN_AND E
   96  | E . TK_OP_BIN_OR E
   97  | E . TK_OP_BIN_XOR E
   98  | E . TK_OP_BIN_SHIFTR E
   99  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 162
    TK_OP_SUB            shift, and go to state 163
    TK_OP_MUL            shift, and go to state 164
    TK_OP_DIV            shift, and go to state 165
    TK_OP_MOD            shift, and go to state 166
    TK_OP_REL_LESS       shift, and go to state 167
    TK_OP_REL_GREATER    shift, and go to state 168
    TK_OP_REL_EQLESS     shift, and go to state 169
    TK_OP_REL_EQGREATER  shift, and go to state 170
    TK_OP_REL_EQ         shift, and go to state 171
    TK_OP_REL_DIFF       shift, and go to state 172
    TK_OP_LOGIC_AND      shift, and go to state 173
    TK_OP_LOGIC_OR       shift, and go to state 174
    TK_OP_BIN_AND        shift, and go to state 175
    TK_OP_BIN_OR         shift, and go to state 176
    TK_OP_BIN_XOR        shift, and go to state 177
    TK_OP_BIN_SHIFTR     shift, and go to state 178
    TK_OP_BIN_SHIFTL     shift, and go to state 179

    $default  reduce using rule 23 (PARAMETERS)


state 262

  154 VECTOR_P: '[' E_C ']' VECTOR_P .

    $default  reduce using rule 154 (VECTOR_P)


state 263

  148 TERMINAL: TK_ID VECTOR_P .

    $default  reduce using rule 148 (TERMINAL)


state 264

   53 IF: IF_C '(' E_C ')' STATEMENT .
   54   | IF_C '(' E_C ')' STATEMENT . TK_ELSE STATEMENT

    TK_ELSE  shift, and go to state 270

    $default  reduce using rule 53 (IF)


state 265

   56 WHILE: WHILE_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 56 (WHILE)


state 266

   58 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C . ')' ';'

    ')'  shift, and go to state 271


state 267

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E . ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 272


state 268

   67 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL . ')' STATEMENT

    ')'  shift, and go to state 273


state 269

   75 SWITCH: SWITCH_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 75 (SWITCH)


state 270

   54 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 274
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 271

   58 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' . ';'

    ';'  shift, and go to state 275


state 272

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' . OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 58
    TK_FLOAT         shift, and go to state 59
    TK_SCIENTIFIC    shift, and go to state 60
    TK_CHAR          shift, and go to state 61
    TK_STRING        shift, and go to state 62
    TK_BOOL          shift, and go to state 63
    TK_ID            shift, and go to state 135
    TK_OP_SUM        shift, and go to state 65
    TK_OP_SUB        shift, and go to state 66
    TK_OP_LOGIC_NOT  shift, and go to state 67
    TK_OP_BIN_NOT    shift, and go to state 68
    TK_COUT          shift, and go to state 70
    TK_COUTN         shift, and go to state 71
    TK_CIN           shift, and go to state 72
    TK_OP_INCREASE   shift, and go to state 83
    '('              shift, and go to state 85

    $default  reduce using rule 60 (OPTIONAL_E)

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    OPTIONAL_E     go to state 276
    E_C            go to state 216
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 273

   67 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 277
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 274

   54 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT .

    $default  reduce using rule 54 (IF)


state 275

   58 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';' .

    $default  reduce using rule 58 (DO_WHILE)


state 276

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E . ')' STATEMENT

    ')'  shift, and go to state 278


state 277

   67 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT .

    $default  reduce using rule 67 (FOR)


state 278

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' . STATEMENT

    TK_INT                shift, and go to state 58
    TK_FLOAT              shift, and go to state 59
    TK_SCIENTIFIC         shift, and go to state 60
    TK_CHAR               shift, and go to state 61
    TK_STRING             shift, and go to state 62
    TK_BOOL               shift, and go to state 63
    TK_ID                 shift, and go to state 64
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 47
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 65
    TK_OP_SUB             shift, and go to state 66
    TK_OP_LOGIC_NOT       shift, and go to state 67
    TK_OP_BIN_NOT         shift, and go to state 68
    TK_RETURN             shift, and go to state 69
    TK_COUT               shift, and go to state 70
    TK_COUTN              shift, and go to state 71
    TK_CIN                shift, and go to state 72
    TK_IF                 shift, and go to state 73
    TK_SWITCH             shift, and go to state 74
    TK_CASE               shift, and go to state 75
    TK_DEFAULT            shift, and go to state 76
    TK_FOR                shift, and go to state 77
    TK_WHILE              shift, and go to state 78
    TK_DO                 shift, and go to state 79
    TK_BREAK              shift, and go to state 80
    TK_CONTINUE           shift, and go to state 81
    TK_GOTO               shift, and go to state 82
    TK_OP_INCREASE        shift, and go to state 83
    ';'                   shift, and go to state 84
    '('                   shift, and go to state 85
    '{'                   shift, and go to state 38

    CALL_FUNCTION  go to state 86
    COUT           go to state 87
    CIN            go to state 88
    SCOPE          go to state 89
    BEGIN_SCOPE    go to state 40
    STATEMENT      go to state 279
    RETURN         go to state 92
    IF_C           go to state 93
    IF             go to state 94
    WHILE_C        go to state 95
    WHILE          go to state 96
    DO_WHILE_C     go to state 97
    DO_WHILE       go to state 98
    FOR_C          go to state 99
    FOR            go to state 100
    LABEL          go to state 101
    GOTO           go to state 102
    CONTINUE       go to state 103
    BREAK          go to state 104
    SWITCH_C       go to state 105
    SWITCH         go to state 106
    E_C            go to state 107
    E              go to state 108
    INCREASE       go to state 109
    PREV_INCREASE  go to state 110
    ATTRIBUITION   go to state 111
    OP_ASSIGN      go to state 112
    DECLARATION    go to state 113
    TYPE           go to state 114
    TERMINAL       go to state 115
    SIGNAL         go to state 116


state 279

   66 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT .

    $default  reduce using rule 66 (FOR)
