Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_SWITCH
   TK_CASE
   TK_DEFAULT
   TK_EACH
   TK_BREAK
   TK_CONTINUE
   TK_OP_LESS_LESS
   ELSE


State 186 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: COMMAND COMMANDS
    9         | /* empty */

   10 COMMAND: STATEMENT

   11 STATEMENT: E ';'
   12          | RETURN ';'
   13          | COUT ';'
   14          | DECLARATION ';'
   15          | SCOPE
   16          | IF
   17          | WHILE
   18          | DO_WHILE
   19          | FOR
   20          | LABEL
   21          | GOTO ';'
   22          | ';'

   23 RETURN: TK_RETURN E

   24 CNAD: /* empty */

   25 IF: CNAD TK_IF '(' E ')' COMMAND
   26   | CNAD TK_IF '(' E ')' COMMAND TK_ELSE COMMAND

   27 WHILE: CNAD TK_WHILE '(' E ')' COMMAND

   28 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' ';'

   29 OPTIONAL_E: E
   30           | /* empty */

   31 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION
   32                         | TERMINAL

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   34    | CNAD TK_FOR '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

   35 LABEL: TK_ID TK_GO_LABEL

   36 GOTO: TK_GOTO TK_ID

   37 E: '(' E ')'
   38  | TERMINAL
   39  | ATTRIBUITION
   40  | '(' TYPE ')' TERMINAL
   41  | E TK_OP_SUM E
   42  | E TK_OP_SUB E
   43  | E TK_OP_MUL E
   44  | E TK_OP_DIV E
   45  | E TK_OP_MOD E
   46  | E TK_OP_LOGIC_OR E
   47  | E TK_OP_LOGIC_AND E
   48  | E TK_OP_REL_EQ E
   49  | E TK_OP_REL_DIFF E
   50  | E TK_OP_REL_LESS E
   51  | E TK_OP_REL_GREATER E
   52  | E TK_OP_REL_EQLESS E
   53  | E TK_OP_REL_EQGREATER E
   54  | E TK_OP_BIN_AND E
   55  | E TK_OP_BIN_OR E
   56  | E TK_OP_BIN_XOR E
   57  | E TK_OP_BIN_SHIFTR E
   58  | E TK_OP_BIN_SHIFTL E
   59  | TK_OP_LOGIC_NOT E
   60  | TK_OP_BIN_NOT E
   61  | INCREASE
   62  | PREV_INCREASE

   63 INCREASE: TK_ID TK_OP_INCREASE

   64 PREV_INCREASE: TK_OP_INCREASE TK_ID

   65 ATTRIBUITION: TK_ID TK_ASSIGN E
   66             | OP_ASSIGN

   67 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   68 COUT: TK_COUT '(' E ')'

   69 DECLARATIONS: DECLARATIONS DECLARATION ';'
   70             | /* empty */

   71 DECLARATION: DECLARATION ',' TK_ID
   72            | DECLARATION ',' TK_ID TK_ASSIGN E
   73            | TYPE TK_ID
   74            | TYPE TK_ID TK_ASSIGN E

   75 TYPE: TK_TYPE_CHAR
   76     | TK_TYPE_STRING
   77     | TK_TYPE_INT
   78     | TK_TYPE_VOID
   79     | TK_TYPE_FLOAT
   80     | TK_TYPE_DOUBLE
   81     | TK_TYPE_BOOL
   82     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   83     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   84     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   85     | TK_MODIFIER_SIGNED TK_TYPE_INT
   86     | TK_MODIFIER_SHORT TK_TYPE_INT
   87     | TK_MODIFIER_LONG TK_TYPE_INT
   88     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
   89     | TK_MODIFIER_SHORT
   90     | TK_MODIFIER_LONG
   91     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   92     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   93     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
   94     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
   95     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   96     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   97     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   98     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
   99     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

  100 TERMINAL: TK_INT
  101         | TK_FLOAT
  102         | TK_SCIENTIFIC
  103         | TK_CHAR
  104         | SIGNAL TK_INT
  105         | SIGNAL TK_FLOAT
  106         | SIGNAL TK_SCIENTIFIC
  107         | SIGNAL TK_CHAR
  108         | TK_STRING
  109         | TK_BOOL
  110         | TK_ID
  111         | SIGNAL TK_ID

  112 SIGNAL: TK_OP_SUM
  113       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 25 26 27 28 33 34 37 40 68
')' (41) 3 4 25 26 27 28 33 34 37 40 68
',' (44) 71 72
';' (59) 11 12 13 14 21 22 28 33 69
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 100 104
TK_FLOAT (259) 101 105
TK_SCIENTIFIC (260) 102 106
TK_CHAR (261) 103 107
TK_STRING (262) 108
TK_BOOL (263) 109
TK_MAIN (264) 3 4
TK_ID (265) 35 36 63 64 65 67 71 72 73 74 110 111
TK_TYPE_CHAR (266) 75 82 83
TK_TYPE_STRING (267) 76
TK_TYPE_INT (268) 3 4 77 84 85 86 87 91 92 93 94 95 96 97
TK_TYPE_VOID (269) 3 78
TK_TYPE_FLOAT (270) 79
TK_TYPE_DOUBLE (271) 80 88
TK_TYPE_BOOL (272) 81
TK_MODIFIER_UNSIGNED (273) 82 84 91 93 96 98
TK_MODIFIER_SIGNED (274) 83 85 92 94 97 99
TK_MODIFIER_SHORT (275) 86 89 91 92
TK_MODIFIER_LONG (276) 87 88 90 93 94 95 96 97 98 99
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 41 112
TK_OP_SUB (280) 42 113
TK_OP_MUL (281) 43
TK_OP_DIV (282) 44
TK_OP_MOD (283) 45
TK_OP_REL_LESS (284) 50
TK_OP_REL_GREATER (285) 51
TK_OP_REL_EQLESS (286) 52
TK_OP_REL_EQGREATER (287) 53
TK_OP_REL_EQ (288) 48
TK_OP_REL_DIFF (289) 49
TK_OP_LOGIC_AND (290) 47
TK_OP_LOGIC_OR (291) 46
TK_OP_LOGIC_NOT (292) 59
TK_OP_BIN_AND (293) 54
TK_OP_BIN_OR (294) 55
TK_OP_BIN_XOR (295) 56
TK_OP_BIN_NOT (296) 60
TK_OP_BIN_SHIFTR (297) 57
TK_OP_BIN_SHIFTL (298) 58
TK_ASSIGN (299) 65 72 74
TK_RETURN (300) 23
TK_COUT (301) 68
TK_IF (302) 25 26
TK_ELSE (303) 26
TK_SWITCH (304)
TK_CASE (305)
TK_DEFAULT (306)
TK_FOR (307) 33 34
TK_EACH (308)
TK_WHILE (309) 27 28
TK_DO (310) 28
TK_BREAK (311)
TK_CONTINUE (312)
TK_GOTO (313) 36
TK_OP_INCREASE (314) 63 64
TK_OP_LESS_LESS (315)
TK_OP_ASSIGN (316) 67
TK_DOT_DOT (317) 34
TK_GO_LABEL (318) 35
IFX (319)
ELSE (320)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
BEGIN (73)
    on left: 1, on right: 0
START (74)
    on left: 2, on right: 1
MAIN (75)
    on left: 3 4, on right: 1
SCOPE (76)
    on left: 5, on right: 1 15
BEGIN_SCOPE (77)
    on left: 6, on right: 5
END_SCOPE (78)
    on left: 7, on right: 5
COMMANDS (79)
    on left: 8 9, on right: 5 8
COMMAND (80)
    on left: 10, on right: 8 25 26 27 28 33 34
STATEMENT (81)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22, on right: 10
RETURN (82)
    on left: 23, on right: 12
CNAD (83)
    on left: 24, on right: 25 26 27 28 33 34
IF (84)
    on left: 25 26, on right: 16
WHILE (85)
    on left: 27, on right: 17
DO_WHILE (86)
    on left: 28, on right: 18
OPTIONAL_E (87)
    on left: 29 30, on right: 33
ATTRIBUITION_OR_TERMINAL (88)
    on left: 31 32, on right: 34
FOR (89)
    on left: 33 34, on right: 19
LABEL (90)
    on left: 35, on right: 20
GOTO (91)
    on left: 36, on right: 21
E (92)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 60 61 62, on right: 11 23 25 26 27 28 29 37 41 42
    43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 65 67 68
    72 74
INCREASE (93)
    on left: 63, on right: 61
PREV_INCREASE (94)
    on left: 64, on right: 62
ATTRIBUITION (95)
    on left: 65 66, on right: 31 39
OP_ASSIGN (96)
    on left: 67, on right: 66
COUT (97)
    on left: 68, on right: 13
DECLARATIONS (98)
    on left: 69 70, on right: 1 69
DECLARATION (99)
    on left: 71 72 73 74, on right: 14 69 71 72
TYPE (100)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96 97 98 99, on right: 40 73 74
TERMINAL (101)
    on left: 100 101 102 103 104 105 106 107 108 109 110 111, on right:
    32 34 38 40
SIGNAL (102)
    on left: 112 113, on right: 104 105 106 107 111


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 70 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   69 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   75 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 75 (TYPE)


state 6

   76 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 76 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   77 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 77 (TYPE)


state 8

   78 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 78 (TYPE)


state 9

   79 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 79 (TYPE)


state 10

   80 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 80 (TYPE)


state 11

   81 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 81 (TYPE)


state 12

   82 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   84     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
   91     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   93     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   96     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   98     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   83 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   85     | TK_MODIFIER_SIGNED . TK_TYPE_INT
   92     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   94     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   97     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   99     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

   86 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
   89     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 89 (TYPE)


state 15

   87 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
   88     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
   90     | TK_MODIFIER_LONG .
   95     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 90 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   69 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   71 DECLARATION: DECLARATION . ',' TK_ID
   72            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   73 DECLARATION: TYPE . TK_ID
   74            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   82 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 82 (TYPE)


state 21

   84 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 84 (TYPE)


state 22

   91 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

   93 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   96     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   98     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   83 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 83 (TYPE)


state 25

   85 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 85 (TYPE)


state 26

   92 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

   94 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   97     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   99     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

   86 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 86 (TYPE)


state 29

   87 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 87 (TYPE)


state 30

   88 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 88 (TYPE)


state 31

   95 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    '}'       reduce using rule 9 (COMMANDS)
    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 65
    COMMAND        go to state 66
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 35

   69 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 69 (DECLARATIONS)


state 36

   71 DECLARATION: DECLARATION ',' . TK_ID
   72            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 85


state 37

   73 DECLARATION: TYPE TK_ID .
   74            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 86

    $default  reduce using rule 73 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 87
    ')'           shift, and go to state 88


state 39

   91 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 91 (TYPE)


state 40

   93 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 93 (TYPE)


state 41

   96 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   98     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 89

    $default  reduce using rule 98 (TYPE)


state 42

   92 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 92 (TYPE)


state 43

   94 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 94 (TYPE)


state 44

   97 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   99     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 90

    $default  reduce using rule 99 (TYPE)


state 45

   95 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 95 (TYPE)


state 46

  100 TERMINAL: TK_INT .

    $default  reduce using rule 100 (TERMINAL)


state 47

  101 TERMINAL: TK_FLOAT .

    $default  reduce using rule 101 (TERMINAL)


state 48

  102 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 102 (TERMINAL)


state 49

  103 TERMINAL: TK_CHAR .

    $default  reduce using rule 103 (TERMINAL)


state 50

  108 TERMINAL: TK_STRING .

    $default  reduce using rule 108 (TERMINAL)


state 51

  109 TERMINAL: TK_BOOL .

    $default  reduce using rule 109 (TERMINAL)


state 52

   35 LABEL: TK_ID . TK_GO_LABEL
   63 INCREASE: TK_ID . TK_OP_INCREASE
   65 ATTRIBUITION: TK_ID . TK_ASSIGN E
   67 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  110 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 91
    TK_OP_INCREASE  shift, and go to state 92
    TK_OP_ASSIGN    shift, and go to state 93
    TK_GO_LABEL     shift, and go to state 94

    $default  reduce using rule 110 (TERMINAL)


state 53

   77 TYPE: TK_TYPE_INT .

    $default  reduce using rule 77 (TYPE)


state 54

  112 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 112 (SIGNAL)


state 55

  113 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 113 (SIGNAL)


state 56

   59 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 96
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 57

   60 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 97
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 58

   23 RETURN: TK_RETURN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 98
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 59

   68 COUT: TK_COUT . '(' E ')'

    '('  shift, and go to state 99


state 60

   36 GOTO: TK_GOTO . TK_ID

    TK_ID  shift, and go to state 100


state 61

   64 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 101


state 62

   37 E: '(' . E ')'
   40  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 95
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62

    E              go to state 102
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TYPE           go to state 103
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 63

   22 STATEMENT: ';' .

    $default  reduce using rule 22 (STATEMENT)


state 64

   15 STATEMENT: SCOPE .

    $default  reduce using rule 15 (STATEMENT)


state 65

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 104

    END_SCOPE  go to state 105


state 66

    8 COMMANDS: COMMAND . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    '}'       reduce using rule 9 (COMMANDS)
    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 106
    COMMAND        go to state 66
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 67

   10 COMMAND: STATEMENT .

    $default  reduce using rule 10 (COMMAND)


state 68

   12 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 107


state 69

   25 IF: CNAD . TK_IF '(' E ')' COMMAND
   26   | CNAD . TK_IF '(' E ')' COMMAND TK_ELSE COMMAND
   27 WHILE: CNAD . TK_WHILE '(' E ')' COMMAND
   28 DO_WHILE: CNAD . TK_DO COMMAND TK_WHILE '(' E ')' ';'
   33 FOR: CNAD . TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   34    | CNAD . TK_FOR '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

    TK_IF     shift, and go to state 108
    TK_FOR    shift, and go to state 109
    TK_WHILE  shift, and go to state 110
    TK_DO     shift, and go to state 111


state 70

   16 STATEMENT: IF .

    $default  reduce using rule 16 (STATEMENT)


state 71

   17 STATEMENT: WHILE .

    $default  reduce using rule 17 (STATEMENT)


state 72

   18 STATEMENT: DO_WHILE .

    $default  reduce using rule 18 (STATEMENT)


state 73

   19 STATEMENT: FOR .

    $default  reduce using rule 19 (STATEMENT)


state 74

   20 STATEMENT: LABEL .

    $default  reduce using rule 20 (STATEMENT)


state 75

   21 STATEMENT: GOTO . ';'

    ';'  shift, and go to state 112


state 76

   11 STATEMENT: E . ';'
   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130
    ';'                  shift, and go to state 131


state 77

   61 E: INCREASE .

    $default  reduce using rule 61 (E)


state 78

   62 E: PREV_INCREASE .

    $default  reduce using rule 62 (E)


state 79

   39 E: ATTRIBUITION .

    $default  reduce using rule 39 (E)


state 80

   66 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 66 (ATTRIBUITION)


state 81

   13 STATEMENT: COUT . ';'

    ';'  shift, and go to state 132


state 82

   14 STATEMENT: DECLARATION . ';'
   71 DECLARATION: DECLARATION . ',' TK_ID
   72            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 133
    ','  shift, and go to state 36


state 83

   38 E: TERMINAL .

    $default  reduce using rule 38 (E)


state 84

  104 TERMINAL: SIGNAL . TK_INT
  105         | SIGNAL . TK_FLOAT
  106         | SIGNAL . TK_SCIENTIFIC
  107         | SIGNAL . TK_CHAR
  111         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 134
    TK_FLOAT       shift, and go to state 135
    TK_SCIENTIFIC  shift, and go to state 136
    TK_CHAR        shift, and go to state 137
    TK_ID          shift, and go to state 138


state 85

   71 DECLARATION: DECLARATION ',' TK_ID .
   72            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 139

    $default  reduce using rule 71 (DECLARATION)


state 86

   74 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 140
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 87

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 141


state 88

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 89

   96 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 96 (TYPE)


state 90

   97 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 97 (TYPE)


state 91

   65 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 142
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 92

   63 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 63 (INCREASE)


state 93

   67 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 143
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 94

   35 LABEL: TK_ID TK_GO_LABEL .

    $default  reduce using rule 35 (LABEL)


state 95

   63 INCREASE: TK_ID . TK_OP_INCREASE
   65 ATTRIBUITION: TK_ID . TK_ASSIGN E
   67 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  110 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 91
    TK_OP_INCREASE  shift, and go to state 92
    TK_OP_ASSIGN    shift, and go to state 93

    $default  reduce using rule 110 (TERMINAL)


state 96

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   59  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 59 (E)


state 97

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   60  | TK_OP_BIN_NOT E .

    $default  reduce using rule 60 (E)


state 98

   23 RETURN: TK_RETURN E .
   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 23 (RETURN)


state 99

   68 COUT: TK_COUT '(' . E ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 144
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 100

   36 GOTO: TK_GOTO TK_ID .

    $default  reduce using rule 36 (GOTO)


state 101

   64 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 64 (PREV_INCREASE)


state 102

   37 E: '(' E . ')'
   41  | E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130
    ')'                  shift, and go to state 145


state 103

   40 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 146


state 104

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 105

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 106

    8 COMMANDS: COMMAND COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 107

   12 STATEMENT: RETURN ';' .

    $default  reduce using rule 12 (STATEMENT)


state 108

   25 IF: CNAD TK_IF . '(' E ')' COMMAND
   26   | CNAD TK_IF . '(' E ')' COMMAND TK_ELSE COMMAND

    '('  shift, and go to state 147


state 109

   33 FOR: CNAD TK_FOR . '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   34    | CNAD TK_FOR . '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

    '('  shift, and go to state 148


state 110

   27 WHILE: CNAD TK_WHILE . '(' E ')' COMMAND

    '('  shift, and go to state 149


state 111

   28 DO_WHILE: CNAD TK_DO . COMMAND TK_WHILE '(' E ')' ';'

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 150
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 112

   21 STATEMENT: GOTO ';' .

    $default  reduce using rule 21 (STATEMENT)


state 113

   41 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 151
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 114

   42 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 152
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 115

   43 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 153
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 116

   44 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 154
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 117

   45 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 155
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 118

   50 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 156
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 119

   51 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 157
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 120

   52 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 158
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 121

   53 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 159
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 122

   48 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 160
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 123

   49 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 161
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 124

   47 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 162
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 125

   46 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 163
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 126

   54 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 164
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 127

   55 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 165
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 128

   56 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 166
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 129

   57 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 167
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 130

   58 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 168
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 131

   11 STATEMENT: E ';' .

    $default  reduce using rule 11 (STATEMENT)


state 132

   13 STATEMENT: COUT ';' .

    $default  reduce using rule 13 (STATEMENT)


state 133

   14 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 14 (STATEMENT)


state 134

  104 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 104 (TERMINAL)


state 135

  105 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 105 (TERMINAL)


state 136

  106 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 106 (TERMINAL)


state 137

  107 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 107 (TERMINAL)


state 138

  111 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 111 (TERMINAL)


state 139

   72 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 169
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 140

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   74 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 74 (DECLARATION)


state 141

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 142

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   65 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 65 (ATTRIBUITION)


state 143

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   67 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 67 (OP_ASSIGN)


state 144

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   68 COUT: TK_COUT '(' E . ')'

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130
    ')'                  shift, and go to state 170


state 145

   37 E: '(' E ')' .

    $default  reduce using rule 37 (E)


state 146

   40 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 171
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 172
    SIGNAL    go to state 84


state 147

   25 IF: CNAD TK_IF '(' . E ')' COMMAND
   26   | CNAD TK_IF '(' . E ')' COMMAND TK_ELSE COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 173
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 148

   33 FOR: CNAD TK_FOR '(' . OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND
   34    | CNAD TK_FOR '(' . ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    $default  reduce using rule 30 (OPTIONAL_E)

    OPTIONAL_E                go to state 174
    ATTRIBUITION_OR_TERMINAL  go to state 175
    E                         go to state 176
    INCREASE                  go to state 77
    PREV_INCREASE             go to state 78
    ATTRIBUITION              go to state 177
    OP_ASSIGN                 go to state 80
    TERMINAL                  go to state 178
    SIGNAL                    go to state 84


state 149

   27 WHILE: CNAD TK_WHILE '(' . E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 179
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 150

   28 DO_WHILE: CNAD TK_DO COMMAND . TK_WHILE '(' E ')' ';'

    TK_WHILE  shift, and go to state 180


state 151

   41 E: E . TK_OP_SUM E
   41  | E TK_OP_SUM E .
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 114
    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 41 (E)


state 152

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   42  | E TK_OP_SUB E .
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 42 (E)


state 153

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   43  | E TK_OP_MUL E .
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 43 (E)


state 154

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   44  | E TK_OP_DIV E .
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 44 (E)


state 155

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   45  | E TK_OP_MOD E .
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 45 (E)


state 156

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   50  | E TK_OP_REL_LESS E .
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 113
    TK_OP_SUB         shift, and go to state 114
    TK_OP_MUL         shift, and go to state 115
    TK_OP_DIV         shift, and go to state 116
    TK_OP_MOD         shift, and go to state 117
    TK_OP_BIN_AND     shift, and go to state 126
    TK_OP_BIN_OR      shift, and go to state 127
    TK_OP_BIN_XOR     shift, and go to state 128
    TK_OP_BIN_SHIFTR  shift, and go to state 129
    TK_OP_BIN_SHIFTL  shift, and go to state 130

    $default  reduce using rule 50 (E)


state 157

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   51  | E TK_OP_REL_GREATER E .
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 113
    TK_OP_SUB         shift, and go to state 114
    TK_OP_MUL         shift, and go to state 115
    TK_OP_DIV         shift, and go to state 116
    TK_OP_MOD         shift, and go to state 117
    TK_OP_BIN_AND     shift, and go to state 126
    TK_OP_BIN_OR      shift, and go to state 127
    TK_OP_BIN_XOR     shift, and go to state 128
    TK_OP_BIN_SHIFTR  shift, and go to state 129
    TK_OP_BIN_SHIFTL  shift, and go to state 130

    $default  reduce using rule 51 (E)


state 158

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   52  | E TK_OP_REL_EQLESS E .
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 113
    TK_OP_SUB         shift, and go to state 114
    TK_OP_MUL         shift, and go to state 115
    TK_OP_DIV         shift, and go to state 116
    TK_OP_MOD         shift, and go to state 117
    TK_OP_BIN_AND     shift, and go to state 126
    TK_OP_BIN_OR      shift, and go to state 127
    TK_OP_BIN_XOR     shift, and go to state 128
    TK_OP_BIN_SHIFTR  shift, and go to state 129
    TK_OP_BIN_SHIFTL  shift, and go to state 130

    $default  reduce using rule 52 (E)


state 159

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   53  | E TK_OP_REL_EQGREATER E .
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 113
    TK_OP_SUB         shift, and go to state 114
    TK_OP_MUL         shift, and go to state 115
    TK_OP_DIV         shift, and go to state 116
    TK_OP_MOD         shift, and go to state 117
    TK_OP_BIN_AND     shift, and go to state 126
    TK_OP_BIN_OR      shift, and go to state 127
    TK_OP_BIN_XOR     shift, and go to state 128
    TK_OP_BIN_SHIFTR  shift, and go to state 129
    TK_OP_BIN_SHIFTL  shift, and go to state 130

    $default  reduce using rule 53 (E)


state 160

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   48  | E TK_OP_REL_EQ E .
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 48 (E)


state 161

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   49  | E TK_OP_REL_DIFF E .
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 49 (E)


state 162

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   47  | E TK_OP_LOGIC_AND E .
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 47 (E)


state 163

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   46  | E TK_OP_LOGIC_OR E .
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 46 (E)


state 164

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   54  | E TK_OP_BIN_AND E .
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 113
    TK_OP_SUB  shift, and go to state 114
    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 54 (E)


state 165

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   55  | E TK_OP_BIN_OR E .
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 113
    TK_OP_SUB  shift, and go to state 114
    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 55 (E)


state 166

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   56  | E TK_OP_BIN_XOR E .
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 113
    TK_OP_SUB  shift, and go to state 114
    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 56 (E)


state 167

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   57  | E TK_OP_BIN_SHIFTR E .
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 113
    TK_OP_SUB  shift, and go to state 114
    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 57 (E)


state 168

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   58  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 113
    TK_OP_SUB  shift, and go to state 114
    TK_OP_MUL  shift, and go to state 115
    TK_OP_DIV  shift, and go to state 116
    TK_OP_MOD  shift, and go to state 117

    $default  reduce using rule 58 (E)


state 169

   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E
   72 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 72 (DECLARATION)


state 170

   68 COUT: TK_COUT '(' E ')' .

    $default  reduce using rule 68 (COUT)


state 171

  110 TERMINAL: TK_ID .

    $default  reduce using rule 110 (TERMINAL)


state 172

   40 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 40 (E)


state 173

   25 IF: CNAD TK_IF '(' E . ')' COMMAND
   26   | CNAD TK_IF '(' E . ')' COMMAND TK_ELSE COMMAND
   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130
    ')'                  shift, and go to state 181


state 174

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E . ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    ';'  shift, and go to state 182


state 175

   34 FOR: CNAD TK_FOR '(' ATTRIBUITION_OR_TERMINAL . TK_DOT_DOT TERMINAL ')' COMMAND

    TK_DOT_DOT  shift, and go to state 183


state 176

   29 OPTIONAL_E: E .
   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130

    $default  reduce using rule 29 (OPTIONAL_E)


state 177

   31 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION .
   39 E: ATTRIBUITION .

    TK_DOT_DOT  reduce using rule 31 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 39 (E)


state 178

   32 ATTRIBUITION_OR_TERMINAL: TERMINAL .
   38 E: TERMINAL .

    TK_DOT_DOT  reduce using rule 32 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 38 (E)


state 179

   27 WHILE: CNAD TK_WHILE '(' E . ')' COMMAND
   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130
    ')'                  shift, and go to state 184


state 180

   28 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE . '(' E ')' ';'

    '('  shift, and go to state 185


state 181

   25 IF: CNAD TK_IF '(' E ')' . COMMAND
   26   | CNAD TK_IF '(' E ')' . COMMAND TK_ELSE COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 186
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 182

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' . OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    $default  reduce using rule 30 (OPTIONAL_E)

    OPTIONAL_E     go to state 187
    E              go to state 176
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 183

   34 FOR: CNAD TK_FOR '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT . TERMINAL ')' COMMAND

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 171
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 188
    SIGNAL    go to state 84


state 184

   27 WHILE: CNAD TK_WHILE '(' E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 189
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 185

   28 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' . E ')' ';'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 190
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 186

   25 IF: CNAD TK_IF '(' E ')' COMMAND .
   26   | CNAD TK_IF '(' E ')' COMMAND . TK_ELSE COMMAND

    TK_ELSE  shift, and go to state 191

    TK_ELSE   [reduce using rule 25 (IF)]
    $default  reduce using rule 25 (IF)


state 187

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E . ';' OPTIONAL_E ')' COMMAND

    ';'  shift, and go to state 192


state 188

   34 FOR: CNAD TK_FOR '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL . ')' COMMAND

    ')'  shift, and go to state 193


state 189

   27 WHILE: CNAD TK_WHILE '(' E ')' COMMAND .

    $default  reduce using rule 27 (WHILE)


state 190

   28 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E . ')' ';'
   41 E: E . TK_OP_SUM E
   42  | E . TK_OP_SUB E
   43  | E . TK_OP_MUL E
   44  | E . TK_OP_DIV E
   45  | E . TK_OP_MOD E
   46  | E . TK_OP_LOGIC_OR E
   47  | E . TK_OP_LOGIC_AND E
   48  | E . TK_OP_REL_EQ E
   49  | E . TK_OP_REL_DIFF E
   50  | E . TK_OP_REL_LESS E
   51  | E . TK_OP_REL_GREATER E
   52  | E . TK_OP_REL_EQLESS E
   53  | E . TK_OP_REL_EQGREATER E
   54  | E . TK_OP_BIN_AND E
   55  | E . TK_OP_BIN_OR E
   56  | E . TK_OP_BIN_XOR E
   57  | E . TK_OP_BIN_SHIFTR E
   58  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 113
    TK_OP_SUB            shift, and go to state 114
    TK_OP_MUL            shift, and go to state 115
    TK_OP_DIV            shift, and go to state 116
    TK_OP_MOD            shift, and go to state 117
    TK_OP_REL_LESS       shift, and go to state 118
    TK_OP_REL_GREATER    shift, and go to state 119
    TK_OP_REL_EQLESS     shift, and go to state 120
    TK_OP_REL_EQGREATER  shift, and go to state 121
    TK_OP_REL_EQ         shift, and go to state 122
    TK_OP_REL_DIFF       shift, and go to state 123
    TK_OP_LOGIC_AND      shift, and go to state 124
    TK_OP_LOGIC_OR       shift, and go to state 125
    TK_OP_BIN_AND        shift, and go to state 126
    TK_OP_BIN_OR         shift, and go to state 127
    TK_OP_BIN_XOR        shift, and go to state 128
    TK_OP_BIN_SHIFTR     shift, and go to state 129
    TK_OP_BIN_SHIFTL     shift, and go to state 130
    ')'                  shift, and go to state 194


state 191

   26 IF: CNAD TK_IF '(' E ')' COMMAND TK_ELSE . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 195
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 192

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' . OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 95
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    $default  reduce using rule 30 (OPTIONAL_E)

    OPTIONAL_E     go to state 196
    E              go to state 176
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 193

   34 FOR: CNAD TK_FOR '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 197
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 194

   28 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' . ';'

    ';'  shift, and go to state 198


state 195

   26 IF: CNAD TK_IF '(' E ')' COMMAND TK_ELSE COMMAND .

    $default  reduce using rule 26 (IF)


state 196

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E . ')' COMMAND

    ')'  shift, and go to state 199


state 197

   34 FOR: CNAD TK_FOR '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' COMMAND .

    $default  reduce using rule 34 (FOR)


state 198

   28 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' ';' .

    $default  reduce using rule 28 (DO_WHILE)


state 199

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_GOTO               shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 24 (CNAD)

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 200
    STATEMENT      go to state 67
    RETURN         go to state 68
    CNAD           go to state 69
    IF             go to state 70
    WHILE          go to state 71
    DO_WHILE       go to state 72
    FOR            go to state 73
    LABEL          go to state 74
    GOTO           go to state 75
    E              go to state 76
    INCREASE       go to state 77
    PREV_INCREASE  go to state 78
    ATTRIBUITION   go to state 79
    OP_ASSIGN      go to state 80
    COUT           go to state 81
    DECLARATION    go to state 82
    TYPE           go to state 18
    TERMINAL       go to state 83
    SIGNAL         go to state 84


state 200

   33 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND .

    $default  reduce using rule 33 (FOR)
