Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_EACH
   TK_OP_LESS_LESS
   ELSE


State 209 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: STATEMENT COMMANDS
    9         | /* empty */

   10 STATEMENT: E_C ';'
   11          | RETURN ';'
   12          | COUT ';'
   13          | DECLARATION ';'
   14          | SCOPE
   15          | IF
   16          | WHILE
   17          | DO_WHILE
   18          | FOR
   19          | LABEL STATEMENT
   20          | GOTO ';'
   21          | CONTINUE ';'
   22          | BREAK ';'
   23          | SWITCH
   24          | ';'

   25 RETURN: TK_RETURN E_C

   26 IF_C: TK_IF

   27 IF: IF_C '(' E_C ')' STATEMENT
   28   | IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT

   29 WHILE_C: TK_WHILE

   30 WHILE: WHILE_C '(' E_C ')' STATEMENT

   31 DO_WHILE_C: TK_DO

   32 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';'

   33 OPTIONAL_E: E_C
   34           | /* empty */

   35 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E
   36                          | DECLARATION

   37 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION
   38                         | TERMINAL

   39 FOR_C: TK_FOR

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   41    | FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

   42 LABEL: TK_ID TK_GO_LABEL
   43      | TK_CASE E_C TK_GO_LABEL
   44      | TK_DEFAULT TK_GO_LABEL

   45 GOTO: TK_GOTO TK_ID

   46 CONTINUE: TK_CONTINUE

   47 BREAK: TK_BREAK

   48 SWITCH_C: TK_SWITCH

   49 SWITCH: SWITCH_C '(' E_C ')' STATEMENT

   50 E_C: E

   51 E: '(' E ')'
   52  | TERMINAL
   53  | ATTRIBUITION
   54  | '(' TYPE ')' TERMINAL
   55  | E TK_OP_SUM E
   56  | E TK_OP_SUB E
   57  | E TK_OP_MUL E
   58  | E TK_OP_DIV E
   59  | E TK_OP_MOD E
   60  | E TK_OP_LOGIC_OR E
   61  | E TK_OP_LOGIC_AND E
   62  | E TK_OP_REL_EQ E
   63  | E TK_OP_REL_DIFF E
   64  | E TK_OP_REL_LESS E
   65  | E TK_OP_REL_GREATER E
   66  | E TK_OP_REL_EQLESS E
   67  | E TK_OP_REL_EQGREATER E
   68  | E TK_OP_BIN_AND E
   69  | E TK_OP_BIN_OR E
   70  | E TK_OP_BIN_XOR E
   71  | E TK_OP_BIN_SHIFTR E
   72  | E TK_OP_BIN_SHIFTL E
   73  | TK_OP_LOGIC_NOT E
   74  | TK_OP_BIN_NOT E
   75  | INCREASE
   76  | PREV_INCREASE

   77 INCREASE: TK_ID TK_OP_INCREASE

   78 PREV_INCREASE: TK_OP_INCREASE TK_ID

   79 ATTRIBUITION: TK_ID TK_ASSIGN E
   80             | OP_ASSIGN

   81 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   82 COUT: TK_COUT '(' E_C ')'

   83 DECLARATIONS: DECLARATIONS DECLARATION ';'
   84             | /* empty */

   85 DECLARATION: DECLARATION ',' TK_ID
   86            | DECLARATION ',' TK_ID TK_ASSIGN E
   87            | TYPE TK_ID
   88            | TYPE TK_ID TK_ASSIGN E

   89 TYPE: TK_TYPE_CHAR
   90     | TK_TYPE_STRING
   91     | TK_TYPE_INT
   92     | TK_TYPE_VOID
   93     | TK_TYPE_FLOAT
   94     | TK_TYPE_DOUBLE
   95     | TK_TYPE_BOOL
   96     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   97     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   98     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   99     | TK_MODIFIER_SIGNED TK_TYPE_INT
  100     | TK_MODIFIER_SHORT TK_TYPE_INT
  101     | TK_MODIFIER_LONG TK_TYPE_INT
  102     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
  103     | TK_MODIFIER_SHORT
  104     | TK_MODIFIER_LONG
  105     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  106     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
  107     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
  108     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
  109     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  110     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  111     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  112     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
  113     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

  114 TERMINAL: TK_INT
  115         | TK_FLOAT
  116         | TK_SCIENTIFIC
  117         | TK_CHAR
  118         | SIGNAL TK_INT
  119         | SIGNAL TK_FLOAT
  120         | SIGNAL TK_SCIENTIFIC
  121         | SIGNAL TK_CHAR
  122         | TK_STRING
  123         | TK_BOOL
  124         | TK_ID
  125         | SIGNAL TK_ID

  126 SIGNAL: TK_OP_SUM
  127       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 27 28 30 32 40 41 49 51 54 82
')' (41) 3 4 27 28 30 32 40 41 49 51 54 82
',' (44) 85 86
';' (59) 10 11 12 13 20 21 22 24 32 40 83
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 114 118
TK_FLOAT (259) 115 119
TK_SCIENTIFIC (260) 116 120
TK_CHAR (261) 117 121
TK_STRING (262) 122
TK_BOOL (263) 123
TK_MAIN (264) 3 4
TK_ID (265) 42 45 77 78 79 81 85 86 87 88 124 125
TK_TYPE_CHAR (266) 89 96 97
TK_TYPE_STRING (267) 90
TK_TYPE_INT (268) 3 4 91 98 99 100 101 105 106 107 108 109 110 111
TK_TYPE_VOID (269) 3 92
TK_TYPE_FLOAT (270) 93
TK_TYPE_DOUBLE (271) 94 102
TK_TYPE_BOOL (272) 95
TK_MODIFIER_UNSIGNED (273) 96 98 105 107 110 112
TK_MODIFIER_SIGNED (274) 97 99 106 108 111 113
TK_MODIFIER_SHORT (275) 100 103 105 106
TK_MODIFIER_LONG (276) 101 102 104 107 108 109 110 111 112 113
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 55 126
TK_OP_SUB (280) 56 127
TK_OP_MUL (281) 57
TK_OP_DIV (282) 58
TK_OP_MOD (283) 59
TK_OP_REL_LESS (284) 64
TK_OP_REL_GREATER (285) 65
TK_OP_REL_EQLESS (286) 66
TK_OP_REL_EQGREATER (287) 67
TK_OP_REL_EQ (288) 62
TK_OP_REL_DIFF (289) 63
TK_OP_LOGIC_AND (290) 61
TK_OP_LOGIC_OR (291) 60
TK_OP_LOGIC_NOT (292) 73
TK_OP_BIN_AND (293) 68
TK_OP_BIN_OR (294) 69
TK_OP_BIN_XOR (295) 70
TK_OP_BIN_NOT (296) 74
TK_OP_BIN_SHIFTR (297) 71
TK_OP_BIN_SHIFTL (298) 72
TK_ASSIGN (299) 79 86 88
TK_RETURN (300) 25
TK_COUT (301) 82
TK_IF (302) 26
TK_ELSE (303) 28
TK_SWITCH (304) 48
TK_CASE (305) 43
TK_DEFAULT (306) 44
TK_FOR (307) 39
TK_EACH (308)
TK_WHILE (309) 29 32
TK_DO (310) 31
TK_BREAK (311) 47
TK_CONTINUE (312) 46
TK_GOTO (313) 45
TK_OP_INCREASE (314) 77 78
TK_OP_LESS_LESS (315)
TK_OP_ASSIGN (316) 81
TK_DOT_DOT (317) 41
TK_GO_LABEL (318) 42 43 44
IFX (319)
ELSE (320)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
BEGIN (73)
    on left: 1, on right: 0
START (74)
    on left: 2, on right: 1
MAIN (75)
    on left: 3 4, on right: 1
SCOPE (76)
    on left: 5, on right: 1 14
BEGIN_SCOPE (77)
    on left: 6, on right: 5
END_SCOPE (78)
    on left: 7, on right: 5
COMMANDS (79)
    on left: 8 9, on right: 5 8
STATEMENT (80)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    8 19 27 28 30 32 40 41 49
RETURN (81)
    on left: 25, on right: 11
IF_C (82)
    on left: 26, on right: 27 28
IF (83)
    on left: 27 28, on right: 15
WHILE_C (84)
    on left: 29, on right: 30
WHILE (85)
    on left: 30, on right: 16
DO_WHILE_C (86)
    on left: 31, on right: 32
DO_WHILE (87)
    on left: 32, on right: 17
OPTIONAL_E (88)
    on left: 33 34, on right: 35 40
OPTIONAL_E_OR_DECLARATION (89)
    on left: 35 36, on right: 40
ATTRIBUITION_OR_TERMINAL (90)
    on left: 37 38, on right: 41
FOR_C (91)
    on left: 39, on right: 40 41
FOR (92)
    on left: 40 41, on right: 18
LABEL (93)
    on left: 42 43 44, on right: 19
GOTO (94)
    on left: 45, on right: 20
CONTINUE (95)
    on left: 46, on right: 21
BREAK (96)
    on left: 47, on right: 22
SWITCH_C (97)
    on left: 48, on right: 49
SWITCH (98)
    on left: 49, on right: 23
E_C (99)
    on left: 50, on right: 10 25 27 28 30 32 33 43 49 82
E (100)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74 75 76, on right: 50 51 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71 72 73 74 79 81 86 88
INCREASE (101)
    on left: 77, on right: 75
PREV_INCREASE (102)
    on left: 78, on right: 76
ATTRIBUITION (103)
    on left: 79 80, on right: 37 53
OP_ASSIGN (104)
    on left: 81, on right: 80
COUT (105)
    on left: 82, on right: 12
DECLARATIONS (106)
    on left: 83 84, on right: 1 83
DECLARATION (107)
    on left: 85 86 87 88, on right: 13 36 83 85 86
TYPE (108)
    on left: 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 111 112 113, on right: 54 87 88
TERMINAL (109)
    on left: 114 115 116 117 118 119 120 121 122 123 124 125, on right:
    38 41 52 54
SIGNAL (110)
    on left: 126 127, on right: 118 119 120 121 125


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 84 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   83 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   89 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 89 (TYPE)


state 6

   90 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 90 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   91 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 91 (TYPE)


state 8

   92 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 92 (TYPE)


state 9

   93 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 93 (TYPE)


state 10

   94 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 94 (TYPE)


state 11

   95 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 95 (TYPE)


state 12

   96 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   98     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
  105     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  107     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  110     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  112     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   97 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   99     | TK_MODIFIER_SIGNED . TK_TYPE_INT
  106     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
  108     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
  111     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
  113     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

  100 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
  103     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 103 (TYPE)


state 15

  101 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
  102     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
  104     | TK_MODIFIER_LONG .
  109     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 104 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   83 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   85 DECLARATION: DECLARATION . ',' TK_ID
   86            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   87 DECLARATION: TYPE . TK_ID
   88            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   96 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 96 (TYPE)


state 21

   98 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 98 (TYPE)


state 22

  105 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

  107 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  110     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  112     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   97 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 97 (TYPE)


state 25

   99 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 99 (TYPE)


state 26

  106 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

  108 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
  111     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
  113     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

  100 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 100 (TYPE)


state 29

  101 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 101 (TYPE)


state 30

  102 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 102 (TYPE)


state 31

  109 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    $default  reduce using rule 9 (COMMANDS)

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 74
    STATEMENT      go to state 75
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 35

   83 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 83 (DECLARATIONS)


state 36

   85 DECLARATION: DECLARATION ',' . TK_ID
   86            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 101


state 37

   87 DECLARATION: TYPE TK_ID .
   88            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 102

    $default  reduce using rule 87 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 103
    ')'           shift, and go to state 104


state 39

  105 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 105 (TYPE)


state 40

  107 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 107 (TYPE)


state 41

  110 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  112     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 105

    $default  reduce using rule 112 (TYPE)


state 42

  106 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 106 (TYPE)


state 43

  108 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 108 (TYPE)


state 44

  111 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
  113     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 106

    $default  reduce using rule 113 (TYPE)


state 45

  109 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 109 (TYPE)


state 46

  114 TERMINAL: TK_INT .

    $default  reduce using rule 114 (TERMINAL)


state 47

  115 TERMINAL: TK_FLOAT .

    $default  reduce using rule 115 (TERMINAL)


state 48

  116 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 116 (TERMINAL)


state 49

  117 TERMINAL: TK_CHAR .

    $default  reduce using rule 117 (TERMINAL)


state 50

  122 TERMINAL: TK_STRING .

    $default  reduce using rule 122 (TERMINAL)


state 51

  123 TERMINAL: TK_BOOL .

    $default  reduce using rule 123 (TERMINAL)


state 52

   42 LABEL: TK_ID . TK_GO_LABEL
   77 INCREASE: TK_ID . TK_OP_INCREASE
   79 ATTRIBUITION: TK_ID . TK_ASSIGN E
   81 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  124 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 107
    TK_OP_INCREASE  shift, and go to state 108
    TK_OP_ASSIGN    shift, and go to state 109
    TK_GO_LABEL     shift, and go to state 110

    $default  reduce using rule 124 (TERMINAL)


state 53

   91 TYPE: TK_TYPE_INT .

    $default  reduce using rule 91 (TYPE)


state 54

  126 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 126 (SIGNAL)


state 55

  127 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 127 (SIGNAL)


state 56

   73 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 112
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 57

   74 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 113
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 58

   25 RETURN: TK_RETURN . E_C

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 114
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 59

   82 COUT: TK_COUT . '(' E_C ')'

    '('  shift, and go to state 115


state 60

   26 IF_C: TK_IF .

    $default  reduce using rule 26 (IF_C)


state 61

   48 SWITCH_C: TK_SWITCH .

    $default  reduce using rule 48 (SWITCH_C)


state 62

   43 LABEL: TK_CASE . E_C TK_GO_LABEL

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 116
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 63

   44 LABEL: TK_DEFAULT . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 117


state 64

   39 FOR_C: TK_FOR .

    $default  reduce using rule 39 (FOR_C)


state 65

   29 WHILE_C: TK_WHILE .

    $default  reduce using rule 29 (WHILE_C)


state 66

   31 DO_WHILE_C: TK_DO .

    $default  reduce using rule 31 (DO_WHILE_C)


state 67

   47 BREAK: TK_BREAK .

    $default  reduce using rule 47 (BREAK)


state 68

   46 CONTINUE: TK_CONTINUE .

    $default  reduce using rule 46 (CONTINUE)


state 69

   45 GOTO: TK_GOTO . TK_ID

    TK_ID  shift, and go to state 118


state 70

   78 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 119


state 71

   51 E: '(' . E ')'
   54  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 111
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71

    E              go to state 120
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TYPE           go to state 121
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 72

   24 STATEMENT: ';' .

    $default  reduce using rule 24 (STATEMENT)


state 73

   14 STATEMENT: SCOPE .

    $default  reduce using rule 14 (STATEMENT)


state 74

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 122

    END_SCOPE  go to state 123


state 75

    8 COMMANDS: STATEMENT . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    $default  reduce using rule 9 (COMMANDS)

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 124
    STATEMENT      go to state 75
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 76

   11 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 125


state 77

   27 IF: IF_C . '(' E_C ')' STATEMENT
   28   | IF_C . '(' E_C ')' STATEMENT TK_ELSE STATEMENT

    '('  shift, and go to state 126


state 78

   15 STATEMENT: IF .

    $default  reduce using rule 15 (STATEMENT)


state 79

   30 WHILE: WHILE_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 127


state 80

   16 STATEMENT: WHILE .

    $default  reduce using rule 16 (STATEMENT)


state 81

   32 DO_WHILE: DO_WHILE_C . STATEMENT TK_WHILE '(' E_C ')' ';'

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 128
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 82

   17 STATEMENT: DO_WHILE .

    $default  reduce using rule 17 (STATEMENT)


state 83

   40 FOR: FOR_C . '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   41    | FOR_C . '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    '('  shift, and go to state 129


state 84

   18 STATEMENT: FOR .

    $default  reduce using rule 18 (STATEMENT)


state 85

   19 STATEMENT: LABEL . STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 130
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 86

   20 STATEMENT: GOTO . ';'

    ';'  shift, and go to state 131


state 87

   21 STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 132


state 88

   22 STATEMENT: BREAK . ';'

    ';'  shift, and go to state 133


state 89

   49 SWITCH: SWITCH_C . '(' E_C ')' STATEMENT

    '('  shift, and go to state 134


state 90

   23 STATEMENT: SWITCH .

    $default  reduce using rule 23 (STATEMENT)


state 91

   10 STATEMENT: E_C . ';'

    ';'  shift, and go to state 135


state 92

   50 E_C: E .
   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_LOGIC_AND      shift, and go to state 147
    TK_OP_LOGIC_OR       shift, and go to state 148
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 50 (E_C)


state 93

   75 E: INCREASE .

    $default  reduce using rule 75 (E)


state 94

   76 E: PREV_INCREASE .

    $default  reduce using rule 76 (E)


state 95

   53 E: ATTRIBUITION .

    $default  reduce using rule 53 (E)


state 96

   80 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 80 (ATTRIBUITION)


state 97

   12 STATEMENT: COUT . ';'

    ';'  shift, and go to state 154


state 98

   13 STATEMENT: DECLARATION . ';'
   85 DECLARATION: DECLARATION . ',' TK_ID
   86            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 155
    ','  shift, and go to state 36


state 99

   52 E: TERMINAL .

    $default  reduce using rule 52 (E)


state 100

  118 TERMINAL: SIGNAL . TK_INT
  119         | SIGNAL . TK_FLOAT
  120         | SIGNAL . TK_SCIENTIFIC
  121         | SIGNAL . TK_CHAR
  125         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 156
    TK_FLOAT       shift, and go to state 157
    TK_SCIENTIFIC  shift, and go to state 158
    TK_CHAR        shift, and go to state 159
    TK_ID          shift, and go to state 160


state 101

   85 DECLARATION: DECLARATION ',' TK_ID .
   86            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 161

    $default  reduce using rule 85 (DECLARATION)


state 102

   88 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 162
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 103

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 163


state 104

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 105

  110 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 110 (TYPE)


state 106

  111 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 111 (TYPE)


state 107

   79 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 164
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 108

   77 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 77 (INCREASE)


state 109

   81 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 165
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 110

   42 LABEL: TK_ID TK_GO_LABEL .

    $default  reduce using rule 42 (LABEL)


state 111

   77 INCREASE: TK_ID . TK_OP_INCREASE
   79 ATTRIBUITION: TK_ID . TK_ASSIGN E
   81 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  124 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 107
    TK_OP_INCREASE  shift, and go to state 108
    TK_OP_ASSIGN    shift, and go to state 109

    $default  reduce using rule 124 (TERMINAL)


state 112

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   73  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 73 (E)


state 113

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   74  | TK_OP_BIN_NOT E .

    $default  reduce using rule 74 (E)


state 114

   25 RETURN: TK_RETURN E_C .

    $default  reduce using rule 25 (RETURN)


state 115

   82 COUT: TK_COUT '(' . E_C ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 166
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 116

   43 LABEL: TK_CASE E_C . TK_GO_LABEL

    TK_GO_LABEL  shift, and go to state 167


state 117

   44 LABEL: TK_DEFAULT TK_GO_LABEL .

    $default  reduce using rule 44 (LABEL)


state 118

   45 GOTO: TK_GOTO TK_ID .

    $default  reduce using rule 45 (GOTO)


state 119

   78 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 78 (PREV_INCREASE)


state 120

   51 E: '(' E . ')'
   55  | E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_LOGIC_AND      shift, and go to state 147
    TK_OP_LOGIC_OR       shift, and go to state 148
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153
    ')'                  shift, and go to state 168


state 121

   54 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 169


state 122

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 123

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 124

    8 COMMANDS: STATEMENT COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 125

   11 STATEMENT: RETURN ';' .

    $default  reduce using rule 11 (STATEMENT)


state 126

   27 IF: IF_C '(' . E_C ')' STATEMENT
   28   | IF_C '(' . E_C ')' STATEMENT TK_ELSE STATEMENT

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 170
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 127

   30 WHILE: WHILE_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 171
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 128

   32 DO_WHILE: DO_WHILE_C STATEMENT . TK_WHILE '(' E_C ')' ';'

    TK_WHILE  shift, and go to state 172


state 129

   40 FOR: FOR_C '(' . OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT
   41    | FOR_C '(' . ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 111
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71

    $default  reduce using rule 34 (OPTIONAL_E)

    OPTIONAL_E                 go to state 173
    OPTIONAL_E_OR_DECLARATION  go to state 174
    ATTRIBUITION_OR_TERMINAL   go to state 175
    E_C                        go to state 176
    E                          go to state 92
    INCREASE                   go to state 93
    PREV_INCREASE              go to state 94
    ATTRIBUITION               go to state 177
    OP_ASSIGN                  go to state 96
    DECLARATION                go to state 178
    TYPE                       go to state 18
    TERMINAL                   go to state 179
    SIGNAL                     go to state 100


state 130

   19 STATEMENT: LABEL STATEMENT .

    $default  reduce using rule 19 (STATEMENT)


state 131

   20 STATEMENT: GOTO ';' .

    $default  reduce using rule 20 (STATEMENT)


state 132

   21 STATEMENT: CONTINUE ';' .

    $default  reduce using rule 21 (STATEMENT)


state 133

   22 STATEMENT: BREAK ';' .

    $default  reduce using rule 22 (STATEMENT)


state 134

   49 SWITCH: SWITCH_C '(' . E_C ')' STATEMENT

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 180
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 135

   10 STATEMENT: E_C ';' .

    $default  reduce using rule 10 (STATEMENT)


state 136

   55 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 181
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 137

   56 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 182
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 138

   57 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 183
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 139

   58 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 184
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 140

   59 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 185
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 141

   64 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 186
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 142

   65 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 187
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 143

   66 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 188
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 144

   67 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 189
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 145

   62 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 190
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 146

   63 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 191
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 147

   61 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 192
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 148

   60 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 193
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 149

   68 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 194
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 150

   69 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 195
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 151

   70 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 196
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 152

   71 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 197
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 153

   72 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 198
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 154

   12 STATEMENT: COUT ';' .

    $default  reduce using rule 12 (STATEMENT)


state 155

   13 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 13 (STATEMENT)


state 156

  118 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 118 (TERMINAL)


state 157

  119 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 119 (TERMINAL)


state 158

  120 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 120 (TERMINAL)


state 159

  121 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 121 (TERMINAL)


state 160

  125 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 125 (TERMINAL)


state 161

   86 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E              go to state 199
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 162

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   88 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_LOGIC_AND      shift, and go to state 147
    TK_OP_LOGIC_OR       shift, and go to state 148
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 88 (DECLARATION)


state 163

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 164

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   79 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_LOGIC_AND      shift, and go to state 147
    TK_OP_LOGIC_OR       shift, and go to state 148
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 79 (ATTRIBUITION)


state 165

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   81 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_LOGIC_AND      shift, and go to state 147
    TK_OP_LOGIC_OR       shift, and go to state 148
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 81 (OP_ASSIGN)


state 166

   82 COUT: TK_COUT '(' E_C . ')'

    ')'  shift, and go to state 200


state 167

   43 LABEL: TK_CASE E_C TK_GO_LABEL .

    $default  reduce using rule 43 (LABEL)


state 168

   51 E: '(' E ')' .

    $default  reduce using rule 51 (E)


state 169

   54 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 201
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 202
    SIGNAL    go to state 100


state 170

   27 IF: IF_C '(' E_C . ')' STATEMENT
   28   | IF_C '(' E_C . ')' STATEMENT TK_ELSE STATEMENT

    ')'  shift, and go to state 203


state 171

   30 WHILE: WHILE_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 204


state 172

   32 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE . '(' E_C ')' ';'

    '('  shift, and go to state 205


state 173

   35 OPTIONAL_E_OR_DECLARATION: OPTIONAL_E .

    $default  reduce using rule 35 (OPTIONAL_E_OR_DECLARATION)


state 174

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION . ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 206


state 175

   41 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL . TK_DOT_DOT TERMINAL ')' STATEMENT

    TK_DOT_DOT  shift, and go to state 207


state 176

   33 OPTIONAL_E: E_C .

    $default  reduce using rule 33 (OPTIONAL_E)


state 177

   37 ATTRIBUITION_OR_TERMINAL: ATTRIBUITION .
   53 E: ATTRIBUITION .

    TK_DOT_DOT  reduce using rule 37 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 53 (E)


state 178

   36 OPTIONAL_E_OR_DECLARATION: DECLARATION .
   85 DECLARATION: DECLARATION . ',' TK_ID
   86            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ','  shift, and go to state 36

    $default  reduce using rule 36 (OPTIONAL_E_OR_DECLARATION)


state 179

   38 ATTRIBUITION_OR_TERMINAL: TERMINAL .
   52 E: TERMINAL .

    TK_DOT_DOT  reduce using rule 38 (ATTRIBUITION_OR_TERMINAL)
    $default    reduce using rule 52 (E)


state 180

   49 SWITCH: SWITCH_C '(' E_C . ')' STATEMENT

    ')'  shift, and go to state 208


state 181

   55 E: E . TK_OP_SUM E
   55  | E TK_OP_SUM E .
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 137
    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 55 (E)


state 182

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   56  | E TK_OP_SUB E .
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 56 (E)


state 183

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   57  | E TK_OP_MUL E .
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 57 (E)


state 184

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   58  | E TK_OP_DIV E .
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 58 (E)


state 185

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   59  | E TK_OP_MOD E .
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 59 (E)


state 186

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   64  | E TK_OP_REL_LESS E .
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 136
    TK_OP_SUB         shift, and go to state 137
    TK_OP_MUL         shift, and go to state 138
    TK_OP_DIV         shift, and go to state 139
    TK_OP_MOD         shift, and go to state 140
    TK_OP_BIN_AND     shift, and go to state 149
    TK_OP_BIN_OR      shift, and go to state 150
    TK_OP_BIN_XOR     shift, and go to state 151
    TK_OP_BIN_SHIFTR  shift, and go to state 152
    TK_OP_BIN_SHIFTL  shift, and go to state 153

    $default  reduce using rule 64 (E)


state 187

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   65  | E TK_OP_REL_GREATER E .
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 136
    TK_OP_SUB         shift, and go to state 137
    TK_OP_MUL         shift, and go to state 138
    TK_OP_DIV         shift, and go to state 139
    TK_OP_MOD         shift, and go to state 140
    TK_OP_BIN_AND     shift, and go to state 149
    TK_OP_BIN_OR      shift, and go to state 150
    TK_OP_BIN_XOR     shift, and go to state 151
    TK_OP_BIN_SHIFTR  shift, and go to state 152
    TK_OP_BIN_SHIFTL  shift, and go to state 153

    $default  reduce using rule 65 (E)


state 188

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   66  | E TK_OP_REL_EQLESS E .
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 136
    TK_OP_SUB         shift, and go to state 137
    TK_OP_MUL         shift, and go to state 138
    TK_OP_DIV         shift, and go to state 139
    TK_OP_MOD         shift, and go to state 140
    TK_OP_BIN_AND     shift, and go to state 149
    TK_OP_BIN_OR      shift, and go to state 150
    TK_OP_BIN_XOR     shift, and go to state 151
    TK_OP_BIN_SHIFTR  shift, and go to state 152
    TK_OP_BIN_SHIFTL  shift, and go to state 153

    $default  reduce using rule 66 (E)


state 189

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   67  | E TK_OP_REL_EQGREATER E .
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 136
    TK_OP_SUB         shift, and go to state 137
    TK_OP_MUL         shift, and go to state 138
    TK_OP_DIV         shift, and go to state 139
    TK_OP_MOD         shift, and go to state 140
    TK_OP_BIN_AND     shift, and go to state 149
    TK_OP_BIN_OR      shift, and go to state 150
    TK_OP_BIN_XOR     shift, and go to state 151
    TK_OP_BIN_SHIFTR  shift, and go to state 152
    TK_OP_BIN_SHIFTL  shift, and go to state 153

    $default  reduce using rule 67 (E)


state 190

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   62  | E TK_OP_REL_EQ E .
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 62 (E)


state 191

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   63  | E TK_OP_REL_DIFF E .
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 63 (E)


state 192

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   61  | E TK_OP_LOGIC_AND E .
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 61 (E)


state 193

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   60  | E TK_OP_LOGIC_OR E .
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 60 (E)


state 194

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   68  | E TK_OP_BIN_AND E .
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 136
    TK_OP_SUB  shift, and go to state 137
    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 68 (E)


state 195

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   69  | E TK_OP_BIN_OR E .
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 136
    TK_OP_SUB  shift, and go to state 137
    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 69 (E)


state 196

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   70  | E TK_OP_BIN_XOR E .
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 136
    TK_OP_SUB  shift, and go to state 137
    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 70 (E)


state 197

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   71  | E TK_OP_BIN_SHIFTR E .
   72  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 136
    TK_OP_SUB  shift, and go to state 137
    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 71 (E)


state 198

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   72  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 136
    TK_OP_SUB  shift, and go to state 137
    TK_OP_MUL  shift, and go to state 138
    TK_OP_DIV  shift, and go to state 139
    TK_OP_MOD  shift, and go to state 140

    $default  reduce using rule 72 (E)


state 199

   55 E: E . TK_OP_SUM E
   56  | E . TK_OP_SUB E
   57  | E . TK_OP_MUL E
   58  | E . TK_OP_DIV E
   59  | E . TK_OP_MOD E
   60  | E . TK_OP_LOGIC_OR E
   61  | E . TK_OP_LOGIC_AND E
   62  | E . TK_OP_REL_EQ E
   63  | E . TK_OP_REL_DIFF E
   64  | E . TK_OP_REL_LESS E
   65  | E . TK_OP_REL_GREATER E
   66  | E . TK_OP_REL_EQLESS E
   67  | E . TK_OP_REL_EQGREATER E
   68  | E . TK_OP_BIN_AND E
   69  | E . TK_OP_BIN_OR E
   70  | E . TK_OP_BIN_XOR E
   71  | E . TK_OP_BIN_SHIFTR E
   72  | E . TK_OP_BIN_SHIFTL E
   86 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 136
    TK_OP_SUB            shift, and go to state 137
    TK_OP_MUL            shift, and go to state 138
    TK_OP_DIV            shift, and go to state 139
    TK_OP_MOD            shift, and go to state 140
    TK_OP_REL_LESS       shift, and go to state 141
    TK_OP_REL_GREATER    shift, and go to state 142
    TK_OP_REL_EQLESS     shift, and go to state 143
    TK_OP_REL_EQGREATER  shift, and go to state 144
    TK_OP_REL_EQ         shift, and go to state 145
    TK_OP_REL_DIFF       shift, and go to state 146
    TK_OP_LOGIC_AND      shift, and go to state 147
    TK_OP_LOGIC_OR       shift, and go to state 148
    TK_OP_BIN_AND        shift, and go to state 149
    TK_OP_BIN_OR         shift, and go to state 150
    TK_OP_BIN_XOR        shift, and go to state 151
    TK_OP_BIN_SHIFTR     shift, and go to state 152
    TK_OP_BIN_SHIFTL     shift, and go to state 153

    $default  reduce using rule 86 (DECLARATION)


state 200

   82 COUT: TK_COUT '(' E_C ')' .

    $default  reduce using rule 82 (COUT)


state 201

  124 TERMINAL: TK_ID .

    $default  reduce using rule 124 (TERMINAL)


state 202

   54 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 54 (E)


state 203

   27 IF: IF_C '(' E_C ')' . STATEMENT
   28   | IF_C '(' E_C ')' . STATEMENT TK_ELSE STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 209
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 204

   30 WHILE: WHILE_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 210
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 205

   32 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' . E_C ')' ';'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    E_C            go to state 211
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 206

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' . OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    $default  reduce using rule 34 (OPTIONAL_E)

    OPTIONAL_E     go to state 212
    E_C            go to state 176
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 207

   41 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT . TERMINAL ')' STATEMENT

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 201
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 213
    SIGNAL    go to state 100


state 208

   49 SWITCH: SWITCH_C '(' E_C ')' . STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 214
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 209

   27 IF: IF_C '(' E_C ')' STATEMENT .
   28   | IF_C '(' E_C ')' STATEMENT . TK_ELSE STATEMENT

    TK_ELSE  shift, and go to state 215

    TK_ELSE   [reduce using rule 27 (IF)]
    $default  reduce using rule 27 (IF)


state 210

   30 WHILE: WHILE_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 30 (WHILE)


state 211

   32 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C . ')' ';'

    ')'  shift, and go to state 216


state 212

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E . ';' OPTIONAL_E ')' STATEMENT

    ';'  shift, and go to state 217


state 213

   41 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL . ')' STATEMENT

    ')'  shift, and go to state 218


state 214

   49 SWITCH: SWITCH_C '(' E_C ')' STATEMENT .

    $default  reduce using rule 49 (SWITCH)


state 215

   28 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE . STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 219
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 216

   32 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' . ';'

    ';'  shift, and go to state 220


state 217

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' . OPTIONAL_E ')' STATEMENT

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 111
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 70
    '('              shift, and go to state 71

    $default  reduce using rule 34 (OPTIONAL_E)

    OPTIONAL_E     go to state 221
    E_C            go to state 176
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 218

   41 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' . STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 222
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 219

   28 IF: IF_C '(' E_C ')' STATEMENT TK_ELSE STATEMENT .

    $default  reduce using rule 28 (IF)


state 220

   32 DO_WHILE: DO_WHILE_C STATEMENT TK_WHILE '(' E_C ')' ';' .

    $default  reduce using rule 32 (DO_WHILE)


state 221

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E . ')' STATEMENT

    ')'  shift, and go to state 223


state 222

   41 FOR: FOR_C '(' ATTRIBUITION_OR_TERMINAL TK_DOT_DOT TERMINAL ')' STATEMENT .

    $default  reduce using rule 41 (FOR)


state 223

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' . STATEMENT

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_SWITCH             shift, and go to state 61
    TK_CASE               shift, and go to state 62
    TK_DEFAULT            shift, and go to state 63
    TK_FOR                shift, and go to state 64
    TK_WHILE              shift, and go to state 65
    TK_DO                 shift, and go to state 66
    TK_BREAK              shift, and go to state 67
    TK_CONTINUE           shift, and go to state 68
    TK_GOTO               shift, and go to state 69
    TK_OP_INCREASE        shift, and go to state 70
    '('                   shift, and go to state 71
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 72

    SCOPE          go to state 73
    BEGIN_SCOPE    go to state 34
    STATEMENT      go to state 224
    RETURN         go to state 76
    IF_C           go to state 77
    IF             go to state 78
    WHILE_C        go to state 79
    WHILE          go to state 80
    DO_WHILE_C     go to state 81
    DO_WHILE       go to state 82
    FOR_C          go to state 83
    FOR            go to state 84
    LABEL          go to state 85
    GOTO           go to state 86
    CONTINUE       go to state 87
    BREAK          go to state 88
    SWITCH_C       go to state 89
    SWITCH         go to state 90
    E_C            go to state 91
    E              go to state 92
    INCREASE       go to state 93
    PREV_INCREASE  go to state 94
    ATTRIBUITION   go to state 95
    OP_ASSIGN      go to state 96
    COUT           go to state 97
    DECLARATION    go to state 98
    TYPE           go to state 18
    TERMINAL       go to state 99
    SIGNAL         go to state 100


state 224

   40 FOR: FOR_C '(' OPTIONAL_E_OR_DECLARATION ';' OPTIONAL_E ';' OPTIONAL_E ')' STATEMENT .

    $default  reduce using rule 40 (FOR)
