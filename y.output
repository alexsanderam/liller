Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_SWITCH
   TK_CASE
   TK_DEFAULT
   TK_EACH
   TK_BREAK
   TK_CONTINUE
   TK_GOTO
   TK_OP_LESS_LESS
   ELSE


State 175 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: COMMAND COMMANDS
    9         | /* empty */

   10 COMMAND: STATEMENT

   11 STATEMENT: E ';'
   12          | RETURN ';'
   13          | COUT ';'
   14          | DECLARATION ';'
   15          | SCOPE
   16          | IF
   17          | WHILE
   18          | DO_WHILE
   19          | FOR
   20          | ';'

   21 RETURN: TK_RETURN E

   22 CNAD: /* empty */

   23 IF: CNAD TK_IF '(' E ')' COMMAND
   24   | CNAD TK_IF '(' E ')' COMMAND TK_ELSE COMMAND

   25 WHILE: CNAD TK_WHILE '(' E ')' COMMAND

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' ';'

   27 OPTIONAL_E: E
   28           | /* empty */

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

   30 E: '(' E ')'
   31  | TERMINAL
   32  | ATTRIBUITION
   33  | '(' TYPE ')' TERMINAL
   34  | E TK_OP_SUM E
   35  | E TK_OP_SUB E
   36  | E TK_OP_MUL E
   37  | E TK_OP_DIV E
   38  | E TK_OP_MOD E
   39  | E TK_OP_LOGIC_OR E
   40  | E TK_OP_LOGIC_AND E
   41  | E TK_OP_REL_EQ E
   42  | E TK_OP_REL_DIFF E
   43  | E TK_OP_REL_LESS E
   44  | E TK_OP_REL_GREATER E
   45  | E TK_OP_REL_EQLESS E
   46  | E TK_OP_REL_EQGREATER E
   47  | E TK_OP_BIN_AND E
   48  | E TK_OP_BIN_OR E
   49  | E TK_OP_BIN_XOR E
   50  | E TK_OP_BIN_SHIFTR E
   51  | E TK_OP_BIN_SHIFTL E
   52  | TK_OP_LOGIC_NOT E
   53  | TK_OP_BIN_NOT E
   54  | INCREASE
   55  | PREV_INCREASE

   56 INCREASE: TK_ID TK_OP_INCREASE

   57 PREV_INCREASE: TK_OP_INCREASE TK_ID

   58 ATTRIBUITION: TK_ID TK_ASSIGN E
   59             | OP_ASSIGN

   60 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   61 COUT: TK_COUT '(' E ')'

   62 DECLARATIONS: DECLARATIONS DECLARATION ';'
   63             | /* empty */

   64 DECLARATION: DECLARATION ',' TK_ID
   65            | DECLARATION ',' TK_ID TK_ASSIGN E
   66            | TYPE TK_ID
   67            | TYPE TK_ID TK_ASSIGN E

   68 TYPE: TK_TYPE_CHAR
   69     | TK_TYPE_STRING
   70     | TK_TYPE_INT
   71     | TK_TYPE_VOID
   72     | TK_TYPE_FLOAT
   73     | TK_TYPE_DOUBLE
   74     | TK_TYPE_BOOL
   75     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   76     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   77     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   78     | TK_MODIFIER_SIGNED TK_TYPE_INT
   79     | TK_MODIFIER_SHORT TK_TYPE_INT
   80     | TK_MODIFIER_LONG TK_TYPE_INT
   81     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
   82     | TK_MODIFIER_SHORT
   83     | TK_MODIFIER_LONG
   84     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   85     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   86     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
   87     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
   88     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   89     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   90     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   91     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
   92     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

   93 TERMINAL: TK_INT
   94         | TK_FLOAT
   95         | TK_SCIENTIFIC
   96         | TK_CHAR
   97         | SIGNAL TK_INT
   98         | SIGNAL TK_FLOAT
   99         | SIGNAL TK_SCIENTIFIC
  100         | SIGNAL TK_CHAR
  101         | TK_STRING
  102         | TK_BOOL
  103         | TK_ID
  104         | SIGNAL TK_ID

  105 SIGNAL: TK_OP_SUM
  106       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 23 24 25 26 29 30 33 61
')' (41) 3 4 23 24 25 26 29 30 33 61
',' (44) 64 65
';' (59) 11 12 13 14 20 26 29 62
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 93 97
TK_FLOAT (259) 94 98
TK_SCIENTIFIC (260) 95 99
TK_CHAR (261) 96 100
TK_STRING (262) 101
TK_BOOL (263) 102
TK_MAIN (264) 3 4
TK_ID (265) 56 57 58 60 64 65 66 67 103 104
TK_TYPE_CHAR (266) 68 75 76
TK_TYPE_STRING (267) 69
TK_TYPE_INT (268) 3 4 70 77 78 79 80 84 85 86 87 88 89 90
TK_TYPE_VOID (269) 3 71
TK_TYPE_FLOAT (270) 72
TK_TYPE_DOUBLE (271) 73 81
TK_TYPE_BOOL (272) 74
TK_MODIFIER_UNSIGNED (273) 75 77 84 86 89 91
TK_MODIFIER_SIGNED (274) 76 78 85 87 90 92
TK_MODIFIER_SHORT (275) 79 82 84 85
TK_MODIFIER_LONG (276) 80 81 83 86 87 88 89 90 91 92
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 34 105
TK_OP_SUB (280) 35 106
TK_OP_MUL (281) 36
TK_OP_DIV (282) 37
TK_OP_MOD (283) 38
TK_OP_REL_LESS (284) 43
TK_OP_REL_GREATER (285) 44
TK_OP_REL_EQLESS (286) 45
TK_OP_REL_EQGREATER (287) 46
TK_OP_REL_EQ (288) 41
TK_OP_REL_DIFF (289) 42
TK_OP_LOGIC_AND (290) 40
TK_OP_LOGIC_OR (291) 39
TK_OP_LOGIC_NOT (292) 52
TK_OP_BIN_AND (293) 47
TK_OP_BIN_OR (294) 48
TK_OP_BIN_XOR (295) 49
TK_OP_BIN_NOT (296) 53
TK_OP_BIN_SHIFTR (297) 50
TK_OP_BIN_SHIFTL (298) 51
TK_ASSIGN (299) 58 65 67
TK_RETURN (300) 21
TK_COUT (301) 61
TK_IF (302) 23 24
TK_ELSE (303) 24
TK_SWITCH (304)
TK_CASE (305)
TK_DEFAULT (306)
TK_FOR (307) 29
TK_EACH (308)
TK_WHILE (309) 25 26
TK_DO (310) 26
TK_BREAK (311)
TK_CONTINUE (312)
TK_GOTO (313)
TK_OP_INCREASE (314) 56 57
TK_OP_LESS_LESS (315)
TK_OP_ASSIGN (316) 60
IFX (317)
ELSE (318)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
BEGIN (71)
    on left: 1, on right: 0
START (72)
    on left: 2, on right: 1
MAIN (73)
    on left: 3 4, on right: 1
SCOPE (74)
    on left: 5, on right: 1 15
BEGIN_SCOPE (75)
    on left: 6, on right: 5
END_SCOPE (76)
    on left: 7, on right: 5
COMMANDS (77)
    on left: 8 9, on right: 5 8
COMMAND (78)
    on left: 10, on right: 8 23 24 25 26 29
STATEMENT (79)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 10
RETURN (80)
    on left: 21, on right: 12
CNAD (81)
    on left: 22, on right: 23 24 25 26 29
IF (82)
    on left: 23 24, on right: 16
WHILE (83)
    on left: 25, on right: 17
DO_WHILE (84)
    on left: 26, on right: 18
OPTIONAL_E (85)
    on left: 27 28, on right: 29
FOR (86)
    on left: 29, on right: 19
E (87)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55, on right: 11 21 23 24 25 26 27 30 34 35
    36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 58 60 61
    65 67
INCREASE (88)
    on left: 56, on right: 54
PREV_INCREASE (89)
    on left: 57, on right: 55
ATTRIBUITION (90)
    on left: 58 59, on right: 32
OP_ASSIGN (91)
    on left: 60, on right: 59
COUT (92)
    on left: 61, on right: 13
DECLARATIONS (93)
    on left: 62 63, on right: 1 62
DECLARATION (94)
    on left: 64 65 66 67, on right: 14 62 64 65
TYPE (95)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 90 91 92, on right: 33 66 67
TERMINAL (96)
    on left: 93 94 95 96 97 98 99 100 101 102 103 104, on right: 31
    33
SIGNAL (97)
    on left: 105 106, on right: 97 98 99 100 104


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 63 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   62 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   68 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 68 (TYPE)


state 6

   69 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 69 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   70 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 70 (TYPE)


state 8

   71 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 71 (TYPE)


state 9

   72 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 72 (TYPE)


state 10

   73 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 73 (TYPE)


state 11

   74 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 74 (TYPE)


state 12

   75 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   77     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
   84     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   86     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   89     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   91     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   76 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   78     | TK_MODIFIER_SIGNED . TK_TYPE_INT
   85     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   87     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   90     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   92     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

   79 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
   82     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 82 (TYPE)


state 15

   80 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
   81     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
   83     | TK_MODIFIER_LONG .
   88     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 83 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   62 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   64 DECLARATION: DECLARATION . ',' TK_ID
   65            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   66 DECLARATION: TYPE . TK_ID
   67            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   75 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 75 (TYPE)


state 21

   77 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 77 (TYPE)


state 22

   84 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

   86 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   89     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   91     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   76 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 76 (TYPE)


state 25

   78 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 78 (TYPE)


state 26

   85 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

   87 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   90     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   92     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

   79 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 79 (TYPE)


state 29

   80 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 80 (TYPE)


state 30

   81 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 81 (TYPE)


state 31

   88 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    '}'       reduce using rule 9 (COMMANDS)
    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 64
    COMMAND        go to state 65
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 35

   62 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 62 (DECLARATIONS)


state 36

   64 DECLARATION: DECLARATION ',' . TK_ID
   65            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 82


state 37

   66 DECLARATION: TYPE TK_ID .
   67            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 83

    $default  reduce using rule 66 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 84
    ')'           shift, and go to state 85


state 39

   84 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 84 (TYPE)


state 40

   86 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 86 (TYPE)


state 41

   89 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   91     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 86

    $default  reduce using rule 91 (TYPE)


state 42

   85 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 85 (TYPE)


state 43

   87 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 87 (TYPE)


state 44

   90 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   92     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 87

    $default  reduce using rule 92 (TYPE)


state 45

   88 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 88 (TYPE)


state 46

   93 TERMINAL: TK_INT .

    $default  reduce using rule 93 (TERMINAL)


state 47

   94 TERMINAL: TK_FLOAT .

    $default  reduce using rule 94 (TERMINAL)


state 48

   95 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 95 (TERMINAL)


state 49

   96 TERMINAL: TK_CHAR .

    $default  reduce using rule 96 (TERMINAL)


state 50

  101 TERMINAL: TK_STRING .

    $default  reduce using rule 101 (TERMINAL)


state 51

  102 TERMINAL: TK_BOOL .

    $default  reduce using rule 102 (TERMINAL)


state 52

   56 INCREASE: TK_ID . TK_OP_INCREASE
   58 ATTRIBUITION: TK_ID . TK_ASSIGN E
   60 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
  103 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 88
    TK_OP_INCREASE  shift, and go to state 89
    TK_OP_ASSIGN    shift, and go to state 90

    $default  reduce using rule 103 (TERMINAL)


state 53

   70 TYPE: TK_TYPE_INT .

    $default  reduce using rule 70 (TYPE)


state 54

  105 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 105 (SIGNAL)


state 55

  106 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 106 (SIGNAL)


state 56

   52 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 91
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 57

   53 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 92
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 58

   21 RETURN: TK_RETURN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 93
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 59

   61 COUT: TK_COUT . '(' E ')'

    '('  shift, and go to state 94


state 60

   57 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 95


state 61

   30 E: '(' . E ')'
   33  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61

    E              go to state 96
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TYPE           go to state 97
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 62

   20 STATEMENT: ';' .

    $default  reduce using rule 20 (STATEMENT)


state 63

   15 STATEMENT: SCOPE .

    $default  reduce using rule 15 (STATEMENT)


state 64

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 98

    END_SCOPE  go to state 99


state 65

    8 COMMANDS: COMMAND . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    '}'       reduce using rule 9 (COMMANDS)
    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMANDS       go to state 100
    COMMAND        go to state 65
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 66

   10 COMMAND: STATEMENT .

    $default  reduce using rule 10 (COMMAND)


state 67

   12 STATEMENT: RETURN . ';'

    ';'  shift, and go to state 101


state 68

   23 IF: CNAD . TK_IF '(' E ')' COMMAND
   24   | CNAD . TK_IF '(' E ')' COMMAND TK_ELSE COMMAND
   25 WHILE: CNAD . TK_WHILE '(' E ')' COMMAND
   26 DO_WHILE: CNAD . TK_DO COMMAND TK_WHILE '(' E ')' ';'
   29 FOR: CNAD . TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    TK_IF     shift, and go to state 102
    TK_FOR    shift, and go to state 103
    TK_WHILE  shift, and go to state 104
    TK_DO     shift, and go to state 105


state 69

   16 STATEMENT: IF .

    $default  reduce using rule 16 (STATEMENT)


state 70

   17 STATEMENT: WHILE .

    $default  reduce using rule 17 (STATEMENT)


state 71

   18 STATEMENT: DO_WHILE .

    $default  reduce using rule 18 (STATEMENT)


state 72

   19 STATEMENT: FOR .

    $default  reduce using rule 19 (STATEMENT)


state 73

   11 STATEMENT: E . ';'
   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ';'                  shift, and go to state 124


state 74

   54 E: INCREASE .

    $default  reduce using rule 54 (E)


state 75

   55 E: PREV_INCREASE .

    $default  reduce using rule 55 (E)


state 76

   32 E: ATTRIBUITION .

    $default  reduce using rule 32 (E)


state 77

   59 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 59 (ATTRIBUITION)


state 78

   13 STATEMENT: COUT . ';'

    ';'  shift, and go to state 125


state 79

   14 STATEMENT: DECLARATION . ';'
   64 DECLARATION: DECLARATION . ',' TK_ID
   65            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 126
    ','  shift, and go to state 36


state 80

   31 E: TERMINAL .

    $default  reduce using rule 31 (E)


state 81

   97 TERMINAL: SIGNAL . TK_INT
   98         | SIGNAL . TK_FLOAT
   99         | SIGNAL . TK_SCIENTIFIC
  100         | SIGNAL . TK_CHAR
  104         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 127
    TK_FLOAT       shift, and go to state 128
    TK_SCIENTIFIC  shift, and go to state 129
    TK_CHAR        shift, and go to state 130
    TK_ID          shift, and go to state 131


state 82

   64 DECLARATION: DECLARATION ',' TK_ID .
   65            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 132

    $default  reduce using rule 64 (DECLARATION)


state 83

   67 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 133
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 84

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 134


state 85

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 86

   89 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 89 (TYPE)


state 87

   90 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 90 (TYPE)


state 88

   58 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 135
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 89

   56 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 56 (INCREASE)


state 90

   60 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 136
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 91

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   52  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 52 (E)


state 92

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   53  | TK_OP_BIN_NOT E .

    $default  reduce using rule 53 (E)


state 93

   21 RETURN: TK_RETURN E .
   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 21 (RETURN)


state 94

   61 COUT: TK_COUT '(' . E ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 137
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 95

   57 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 57 (PREV_INCREASE)


state 96

   30 E: '(' E . ')'
   34  | E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 138


state 97

   33 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 139


state 98

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 99

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 100

    8 COMMANDS: COMMAND COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 101

   12 STATEMENT: RETURN ';' .

    $default  reduce using rule 12 (STATEMENT)


state 102

   23 IF: CNAD TK_IF . '(' E ')' COMMAND
   24   | CNAD TK_IF . '(' E ')' COMMAND TK_ELSE COMMAND

    '('  shift, and go to state 140


state 103

   29 FOR: CNAD TK_FOR . '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    '('  shift, and go to state 141


state 104

   25 WHILE: CNAD TK_WHILE . '(' E ')' COMMAND

    '('  shift, and go to state 142


state 105

   26 DO_WHILE: CNAD TK_DO . COMMAND TK_WHILE '(' E ')' ';'

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 143
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 106

   34 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 144
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 107

   35 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 145
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 108

   36 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 146
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 109

   37 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 147
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 110

   38 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 148
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 111

   43 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 149
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 112

   44 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 150
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 113

   45 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 151
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 114

   46 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 152
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 115

   41 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 153
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 116

   42 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 154
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 117

   40 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 155
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 118

   39 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 156
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 119

   47 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 157
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 120

   48 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 158
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 121

   49 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 159
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 122

   50 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 160
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 123

   51 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 161
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 124

   11 STATEMENT: E ';' .

    $default  reduce using rule 11 (STATEMENT)


state 125

   13 STATEMENT: COUT ';' .

    $default  reduce using rule 13 (STATEMENT)


state 126

   14 STATEMENT: DECLARATION ';' .

    $default  reduce using rule 14 (STATEMENT)


state 127

   97 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 97 (TERMINAL)


state 128

   98 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 98 (TERMINAL)


state 129

   99 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 99 (TERMINAL)


state 130

  100 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 100 (TERMINAL)


state 131

  104 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 104 (TERMINAL)


state 132

   65 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 162
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 133

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   67 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 67 (DECLARATION)


state 134

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 135

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   58 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 58 (ATTRIBUITION)


state 136

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   60 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 60 (OP_ASSIGN)


state 137

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   61 COUT: TK_COUT '(' E . ')'

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 163


state 138

   30 E: '(' E ')' .

    $default  reduce using rule 30 (E)


state 139

   33 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 164
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 165
    SIGNAL    go to state 81


state 140

   23 IF: CNAD TK_IF '(' . E ')' COMMAND
   24   | CNAD TK_IF '(' . E ')' COMMAND TK_ELSE COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 166
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 141

   29 FOR: CNAD TK_FOR '(' . OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    $default  reduce using rule 28 (OPTIONAL_E)

    OPTIONAL_E     go to state 167
    E              go to state 168
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 142

   25 WHILE: CNAD TK_WHILE '(' . E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 169
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 143

   26 DO_WHILE: CNAD TK_DO COMMAND . TK_WHILE '(' E ')' ';'

    TK_WHILE  shift, and go to state 170


state 144

   34 E: E . TK_OP_SUM E
   34  | E TK_OP_SUM E .
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 34 (E)


state 145

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   35  | E TK_OP_SUB E .
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 35 (E)


state 146

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   36  | E TK_OP_MUL E .
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 36 (E)


state 147

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   37  | E TK_OP_DIV E .
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 37 (E)


state 148

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   38  | E TK_OP_MOD E .
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 38 (E)


state 149

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   43  | E TK_OP_REL_LESS E .
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 43 (E)


state 150

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   44  | E TK_OP_REL_GREATER E .
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 44 (E)


state 151

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   45  | E TK_OP_REL_EQLESS E .
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 45 (E)


state 152

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   46  | E TK_OP_REL_EQGREATER E .
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 106
    TK_OP_SUB         shift, and go to state 107
    TK_OP_MUL         shift, and go to state 108
    TK_OP_DIV         shift, and go to state 109
    TK_OP_MOD         shift, and go to state 110
    TK_OP_BIN_AND     shift, and go to state 119
    TK_OP_BIN_OR      shift, and go to state 120
    TK_OP_BIN_XOR     shift, and go to state 121
    TK_OP_BIN_SHIFTR  shift, and go to state 122
    TK_OP_BIN_SHIFTL  shift, and go to state 123

    $default  reduce using rule 46 (E)


state 153

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   41  | E TK_OP_REL_EQ E .
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 41 (E)


state 154

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   42  | E TK_OP_REL_DIFF E .
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 42 (E)


state 155

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   40  | E TK_OP_LOGIC_AND E .
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 40 (E)


state 156

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   39  | E TK_OP_LOGIC_OR E .
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 39 (E)


state 157

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   47  | E TK_OP_BIN_AND E .
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 47 (E)


state 158

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   48  | E TK_OP_BIN_OR E .
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 48 (E)


state 159

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   49  | E TK_OP_BIN_XOR E .
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 49 (E)


state 160

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   50  | E TK_OP_BIN_SHIFTR E .
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 50 (E)


state 161

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   51  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 106
    TK_OP_SUB  shift, and go to state 107
    TK_OP_MUL  shift, and go to state 108
    TK_OP_DIV  shift, and go to state 109
    TK_OP_MOD  shift, and go to state 110

    $default  reduce using rule 51 (E)


state 162

   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E
   65 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 65 (DECLARATION)


state 163

   61 COUT: TK_COUT '(' E ')' .

    $default  reduce using rule 61 (COUT)


state 164

  103 TERMINAL: TK_ID .

    $default  reduce using rule 103 (TERMINAL)


state 165

   33 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 33 (E)


state 166

   23 IF: CNAD TK_IF '(' E . ')' COMMAND
   24   | CNAD TK_IF '(' E . ')' COMMAND TK_ELSE COMMAND
   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 171


state 167

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E . ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    ';'  shift, and go to state 172


state 168

   27 OPTIONAL_E: E .
   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123

    $default  reduce using rule 27 (OPTIONAL_E)


state 169

   25 WHILE: CNAD TK_WHILE '(' E . ')' COMMAND
   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 173


state 170

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE . '(' E ')' ';'

    '('  shift, and go to state 174


state 171

   23 IF: CNAD TK_IF '(' E ')' . COMMAND
   24   | CNAD TK_IF '(' E ')' . COMMAND TK_ELSE COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 175
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 172

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' . OPTIONAL_E ';' OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    $default  reduce using rule 28 (OPTIONAL_E)

    OPTIONAL_E     go to state 176
    E              go to state 168
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 173

   25 WHILE: CNAD TK_WHILE '(' E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 177
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 174

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' . E ')' ';'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    E              go to state 178
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 175

   23 IF: CNAD TK_IF '(' E ')' COMMAND .
   24   | CNAD TK_IF '(' E ')' COMMAND . TK_ELSE COMMAND

    TK_ELSE  shift, and go to state 179

    TK_ELSE   [reduce using rule 23 (IF)]
    $default  reduce using rule 23 (IF)


state 176

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E . ';' OPTIONAL_E ')' COMMAND

    ';'  shift, and go to state 180


state 177

   25 WHILE: CNAD TK_WHILE '(' E ')' COMMAND .

    $default  reduce using rule 25 (WHILE)


state 178

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E . ')' ';'
   34 E: E . TK_OP_SUM E
   35  | E . TK_OP_SUB E
   36  | E . TK_OP_MUL E
   37  | E . TK_OP_DIV E
   38  | E . TK_OP_MOD E
   39  | E . TK_OP_LOGIC_OR E
   40  | E . TK_OP_LOGIC_AND E
   41  | E . TK_OP_REL_EQ E
   42  | E . TK_OP_REL_DIFF E
   43  | E . TK_OP_REL_LESS E
   44  | E . TK_OP_REL_GREATER E
   45  | E . TK_OP_REL_EQLESS E
   46  | E . TK_OP_REL_EQGREATER E
   47  | E . TK_OP_BIN_AND E
   48  | E . TK_OP_BIN_OR E
   49  | E . TK_OP_BIN_XOR E
   50  | E . TK_OP_BIN_SHIFTR E
   51  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 106
    TK_OP_SUB            shift, and go to state 107
    TK_OP_MUL            shift, and go to state 108
    TK_OP_DIV            shift, and go to state 109
    TK_OP_MOD            shift, and go to state 110
    TK_OP_REL_LESS       shift, and go to state 111
    TK_OP_REL_GREATER    shift, and go to state 112
    TK_OP_REL_EQLESS     shift, and go to state 113
    TK_OP_REL_EQGREATER  shift, and go to state 114
    TK_OP_REL_EQ         shift, and go to state 115
    TK_OP_REL_DIFF       shift, and go to state 116
    TK_OP_LOGIC_AND      shift, and go to state 117
    TK_OP_LOGIC_OR       shift, and go to state 118
    TK_OP_BIN_AND        shift, and go to state 119
    TK_OP_BIN_OR         shift, and go to state 120
    TK_OP_BIN_XOR        shift, and go to state 121
    TK_OP_BIN_SHIFTR     shift, and go to state 122
    TK_OP_BIN_SHIFTL     shift, and go to state 123
    ')'                  shift, and go to state 181


state 179

   24 IF: CNAD TK_IF '(' E ')' COMMAND TK_ELSE . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 182
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 180

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' . OPTIONAL_E ')' COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 60
    '('              shift, and go to state 61

    $default  reduce using rule 28 (OPTIONAL_E)

    OPTIONAL_E     go to state 183
    E              go to state 168
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 181

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' . ';'

    ';'  shift, and go to state 184


state 182

   24 IF: CNAD TK_IF '(' E ')' COMMAND TK_ELSE COMMAND .

    $default  reduce using rule 24 (IF)


state 183

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E . ')' COMMAND

    ')'  shift, and go to state 185


state 184

   26 DO_WHILE: CNAD TK_DO COMMAND TK_WHILE '(' E ')' ';' .

    $default  reduce using rule 26 (DO_WHILE)


state 185

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_OP_INCREASE        shift, and go to state 60
    '('                   shift, and go to state 61
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 62

    $default  reduce using rule 22 (CNAD)

    SCOPE          go to state 63
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 186
    STATEMENT      go to state 66
    RETURN         go to state 67
    CNAD           go to state 68
    IF             go to state 69
    WHILE          go to state 70
    DO_WHILE       go to state 71
    FOR            go to state 72
    E              go to state 73
    INCREASE       go to state 74
    PREV_INCREASE  go to state 75
    ATTRIBUITION   go to state 76
    OP_ASSIGN      go to state 77
    COUT           go to state 78
    DECLARATION    go to state 79
    TYPE           go to state 18
    TERMINAL       go to state 80
    SIGNAL         go to state 81


state 186

   29 FOR: CNAD TK_FOR '(' OPTIONAL_E ';' OPTIONAL_E ';' OPTIONAL_E ')' COMMAND .

    $default  reduce using rule 29 (FOR)
