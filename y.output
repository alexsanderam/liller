Terminals unused in grammar

   TK_END
   TK_ERROR
   TK_SWITCH
   TK_CASE
   TK_DEFAULT
   TK_FOR
   TK_EACH
   TK_WHILE
   TK_BREAK
   TK_CONTINUE
   TK_GOTO
   TK_OP_LESS_LESS
   ELSE


State 158 conflicts: 1 shift/reduce


Grammar

    0 $accept: BEGIN $end

    1 BEGIN: START DECLARATIONS MAIN SCOPE

    2 START: /* empty */

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' ')'

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE

    6 BEGIN_SCOPE: '{'

    7 END_SCOPE: '}'

    8 COMMANDS: CONTROL_COMMAND COMMANDS
    9         | /* empty */

   10 CONTROL_COMMAND: COMMAND

   11 COMMAND: E ';'
   12        | RETURN ';'
   13        | COUT ';'
   14        | DECLARATION ';'
   15        | SCOPE
   16        | IF
   17        | ';'

   18 RETURN: TK_RETURN E

   19 IF: TK_IF '(' E ')' COMMAND
   20   | TK_IF '(' E ')' COMMAND TK_ELSE COMMAND

   21 E: '(' E ')'
   22  | TERMINAL
   23  | ATTRIBUITION
   24  | '(' TYPE ')' TERMINAL
   25  | E TK_OP_SUM E
   26  | E TK_OP_SUB E
   27  | E TK_OP_MUL E
   28  | E TK_OP_DIV E
   29  | E TK_OP_MOD E
   30  | E TK_OP_LOGIC_OR E
   31  | E TK_OP_LOGIC_AND E
   32  | E TK_OP_REL_EQ E
   33  | E TK_OP_REL_DIFF E
   34  | E TK_OP_REL_LESS E
   35  | E TK_OP_REL_GREATER E
   36  | E TK_OP_REL_EQLESS E
   37  | E TK_OP_REL_EQGREATER E
   38  | E TK_OP_BIN_AND E
   39  | E TK_OP_BIN_OR E
   40  | E TK_OP_BIN_XOR E
   41  | E TK_OP_BIN_SHIFTR E
   42  | E TK_OP_BIN_SHIFTL E
   43  | TK_OP_LOGIC_NOT E
   44  | TK_OP_BIN_NOT E
   45  | INCREASE
   46  | PREV_INCREASE

   47 INCREASE: TK_ID TK_OP_INCREASE

   48 PREV_INCREASE: TK_OP_INCREASE TK_ID

   49 ATTRIBUITION: TK_ID TK_ASSIGN E
   50             | OP_ASSIGN

   51 OP_ASSIGN: TK_ID TK_OP_ASSIGN E

   52 COUT: TK_COUT '(' E ')'

   53 DECLARATIONS: DECLARATIONS DECLARATION ';'
   54             | /* empty */

   55 DECLARATION: DECLARATION ',' TK_ID
   56            | DECLARATION ',' TK_ID TK_ASSIGN E
   57            | TYPE TK_ID
   58            | TYPE TK_ID TK_ASSIGN E

   59 TYPE: TK_TYPE_CHAR
   60     | TK_TYPE_STRING
   61     | TK_TYPE_INT
   62     | TK_TYPE_VOID
   63     | TK_TYPE_FLOAT
   64     | TK_TYPE_DOUBLE
   65     | TK_TYPE_BOOL
   66     | TK_MODIFIER_UNSIGNED TK_TYPE_CHAR
   67     | TK_MODIFIER_SIGNED TK_TYPE_CHAR
   68     | TK_MODIFIER_UNSIGNED TK_TYPE_INT
   69     | TK_MODIFIER_SIGNED TK_TYPE_INT
   70     | TK_MODIFIER_SHORT TK_TYPE_INT
   71     | TK_MODIFIER_LONG TK_TYPE_INT
   72     | TK_MODIFIER_LONG TK_TYPE_DOUBLE
   73     | TK_MODIFIER_SHORT
   74     | TK_MODIFIER_LONG
   75     | TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   76     | TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT
   77     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT
   78     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT
   79     | TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   80     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   81     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG
   83     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG

   84 TERMINAL: TK_INT
   85         | TK_FLOAT
   86         | TK_SCIENTIFIC
   87         | TK_CHAR
   88         | SIGNAL TK_INT
   89         | SIGNAL TK_FLOAT
   90         | SIGNAL TK_SCIENTIFIC
   91         | SIGNAL TK_CHAR
   92         | TK_STRING
   93         | TK_BOOL
   94         | TK_ID
   95         | SIGNAL TK_ID

   96 SIGNAL: TK_OP_SUM
   97       | TK_OP_SUB


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 19 20 21 24 52
')' (41) 3 4 19 20 21 24 52
',' (44) 55 56
';' (59) 11 12 13 14 17 53
'{' (123) 6
'}' (125) 7
error (256)
TK_INT (258) 84 88
TK_FLOAT (259) 85 89
TK_SCIENTIFIC (260) 86 90
TK_CHAR (261) 87 91
TK_STRING (262) 92
TK_BOOL (263) 93
TK_MAIN (264) 3 4
TK_ID (265) 47 48 49 51 55 56 57 58 94 95
TK_TYPE_CHAR (266) 59 66 67
TK_TYPE_STRING (267) 60
TK_TYPE_INT (268) 3 4 61 68 69 70 71 75 76 77 78 79 80 81
TK_TYPE_VOID (269) 3 62
TK_TYPE_FLOAT (270) 63
TK_TYPE_DOUBLE (271) 64 72
TK_TYPE_BOOL (272) 65
TK_MODIFIER_UNSIGNED (273) 66 68 75 77 80 82
TK_MODIFIER_SIGNED (274) 67 69 76 78 81 83
TK_MODIFIER_SHORT (275) 70 73 75 76
TK_MODIFIER_LONG (276) 71 72 74 77 78 79 80 81 82 83
TK_END (277)
TK_ERROR (278)
TK_OP_SUM (279) 25 96
TK_OP_SUB (280) 26 97
TK_OP_MUL (281) 27
TK_OP_DIV (282) 28
TK_OP_MOD (283) 29
TK_OP_REL_LESS (284) 34
TK_OP_REL_GREATER (285) 35
TK_OP_REL_EQLESS (286) 36
TK_OP_REL_EQGREATER (287) 37
TK_OP_REL_EQ (288) 32
TK_OP_REL_DIFF (289) 33
TK_OP_LOGIC_AND (290) 31
TK_OP_LOGIC_OR (291) 30
TK_OP_LOGIC_NOT (292) 43
TK_OP_BIN_AND (293) 38
TK_OP_BIN_OR (294) 39
TK_OP_BIN_XOR (295) 40
TK_OP_BIN_NOT (296) 44
TK_OP_BIN_SHIFTR (297) 41
TK_OP_BIN_SHIFTL (298) 42
TK_ASSIGN (299) 49 56 58
TK_RETURN (300) 18
TK_COUT (301) 52
TK_IF (302) 19 20
TK_ELSE (303) 20
TK_SWITCH (304)
TK_CASE (305)
TK_DEFAULT (306)
TK_FOR (307)
TK_EACH (308)
TK_WHILE (309)
TK_BREAK (310)
TK_CONTINUE (311)
TK_GOTO (312)
TK_OP_INCREASE (313) 47 48
TK_OP_LESS_LESS (314)
TK_OP_ASSIGN (315) 51
IFX (316)
ELSE (317)


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
BEGIN (70)
    on left: 1, on right: 0
START (71)
    on left: 2, on right: 1
MAIN (72)
    on left: 3 4, on right: 1
SCOPE (73)
    on left: 5, on right: 1 15
BEGIN_SCOPE (74)
    on left: 6, on right: 5
END_SCOPE (75)
    on left: 7, on right: 5
COMMANDS (76)
    on left: 8 9, on right: 5 8
CONTROL_COMMAND (77)
    on left: 10, on right: 8
COMMAND (78)
    on left: 11 12 13 14 15 16 17, on right: 10 19 20
RETURN (79)
    on left: 18, on right: 12
IF (80)
    on left: 19 20, on right: 16
E (81)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
    39 40 41 42 43 44 45 46, on right: 11 18 19 20 21 25 26 27 28 29
    30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 49 51 52 56 58
INCREASE (82)
    on left: 47, on right: 45
PREV_INCREASE (83)
    on left: 48, on right: 46
ATTRIBUITION (84)
    on left: 49 50, on right: 23
OP_ASSIGN (85)
    on left: 51, on right: 50
COUT (86)
    on left: 52, on right: 13
DECLARATIONS (87)
    on left: 53 54, on right: 1 53
DECLARATION (88)
    on left: 55 56 57 58, on right: 14 53 55 56
TYPE (89)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83, on right: 24 57 58
TERMINAL (90)
    on left: 84 85 86 87 88 89 90 91 92 93 94 95, on right: 22 24
SIGNAL (91)
    on left: 96 97, on right: 88 89 90 91 95


state 0

    0 $accept: . BEGIN $end

    $default  reduce using rule 2 (START)

    BEGIN  go to state 1
    START  go to state 2


state 1

    0 $accept: BEGIN . $end

    $end  shift, and go to state 3


state 2

    1 BEGIN: START . DECLARATIONS MAIN SCOPE

    $default  reduce using rule 54 (DECLARATIONS)

    DECLARATIONS  go to state 4


state 3

    0 $accept: BEGIN $end .

    $default  accept


state 4

    1 BEGIN: START DECLARATIONS . MAIN SCOPE
   53 DECLARATIONS: DECLARATIONS . DECLARATION ';'

    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 7
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15

    MAIN         go to state 16
    DECLARATION  go to state 17
    TYPE         go to state 18


state 5

   59 TYPE: TK_TYPE_CHAR .

    $default  reduce using rule 59 (TYPE)


state 6

   60 TYPE: TK_TYPE_STRING .

    $default  reduce using rule 60 (TYPE)


state 7

    3 MAIN: TK_TYPE_INT . TK_MAIN '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT . TK_MAIN '(' ')'
   61 TYPE: TK_TYPE_INT .

    TK_MAIN  shift, and go to state 19

    $default  reduce using rule 61 (TYPE)


state 8

   62 TYPE: TK_TYPE_VOID .

    $default  reduce using rule 62 (TYPE)


state 9

   63 TYPE: TK_TYPE_FLOAT .

    $default  reduce using rule 63 (TYPE)


state 10

   64 TYPE: TK_TYPE_DOUBLE .

    $default  reduce using rule 64 (TYPE)


state 11

   65 TYPE: TK_TYPE_BOOL .

    $default  reduce using rule 65 (TYPE)


state 12

   66 TYPE: TK_MODIFIER_UNSIGNED . TK_TYPE_CHAR
   68     | TK_MODIFIER_UNSIGNED . TK_TYPE_INT
   75     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   77     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   80     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 20
    TK_TYPE_INT        shift, and go to state 21
    TK_MODIFIER_SHORT  shift, and go to state 22
    TK_MODIFIER_LONG   shift, and go to state 23


state 13

   67 TYPE: TK_MODIFIER_SIGNED . TK_TYPE_CHAR
   69     | TK_MODIFIER_SIGNED . TK_TYPE_INT
   76     | TK_MODIFIER_SIGNED . TK_MODIFIER_SHORT TK_TYPE_INT
   78     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_TYPE_INT
   81     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT
   83     | TK_MODIFIER_SIGNED . TK_MODIFIER_LONG TK_MODIFIER_LONG

    TK_TYPE_CHAR       shift, and go to state 24
    TK_TYPE_INT        shift, and go to state 25
    TK_MODIFIER_SHORT  shift, and go to state 26
    TK_MODIFIER_LONG   shift, and go to state 27


state 14

   70 TYPE: TK_MODIFIER_SHORT . TK_TYPE_INT
   73     | TK_MODIFIER_SHORT .

    TK_TYPE_INT  shift, and go to state 28

    $default  reduce using rule 73 (TYPE)


state 15

   71 TYPE: TK_MODIFIER_LONG . TK_TYPE_INT
   72     | TK_MODIFIER_LONG . TK_TYPE_DOUBLE
   74     | TK_MODIFIER_LONG .
   79     | TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT

    TK_TYPE_INT       shift, and go to state 29
    TK_TYPE_DOUBLE    shift, and go to state 30
    TK_MODIFIER_LONG  shift, and go to state 31

    $default  reduce using rule 74 (TYPE)


state 16

    1 BEGIN: START DECLARATIONS MAIN . SCOPE

    '{'  shift, and go to state 32

    SCOPE        go to state 33
    BEGIN_SCOPE  go to state 34


state 17

   53 DECLARATIONS: DECLARATIONS DECLARATION . ';'
   55 DECLARATION: DECLARATION . ',' TK_ID
   56            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 35
    ','  shift, and go to state 36


state 18

   57 DECLARATION: TYPE . TK_ID
   58            | TYPE . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 37


state 19

    3 MAIN: TK_TYPE_INT TK_MAIN . '(' TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN . '(' ')'

    '('  shift, and go to state 38


state 20

   66 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_CHAR .

    $default  reduce using rule 66 (TYPE)


state 21

   68 TYPE: TK_MODIFIER_UNSIGNED TK_TYPE_INT .

    $default  reduce using rule 68 (TYPE)


state 22

   75 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 39


state 23

   77 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   80     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 40
    TK_MODIFIER_LONG  shift, and go to state 41


state 24

   67 TYPE: TK_MODIFIER_SIGNED TK_TYPE_CHAR .

    $default  reduce using rule 67 (TYPE)


state 25

   69 TYPE: TK_MODIFIER_SIGNED TK_TYPE_INT .

    $default  reduce using rule 69 (TYPE)


state 26

   76 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 42


state 27

   78 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_TYPE_INT
   81     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG TK_TYPE_INT
   83     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG . TK_MODIFIER_LONG

    TK_TYPE_INT       shift, and go to state 43
    TK_MODIFIER_LONG  shift, and go to state 44


state 28

   70 TYPE: TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 70 (TYPE)


state 29

   71 TYPE: TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 71 (TYPE)


state 30

   72 TYPE: TK_MODIFIER_LONG TK_TYPE_DOUBLE .

    $default  reduce using rule 72 (TYPE)


state 31

   79 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT

    TK_TYPE_INT  shift, and go to state 45


state 32

    6 BEGIN_SCOPE: '{' .

    $default  reduce using rule 6 (BEGIN_SCOPE)


state 33

    1 BEGIN: START DECLARATIONS MAIN SCOPE .

    $default  reduce using rule 1 (BEGIN)


state 34

    5 SCOPE: BEGIN_SCOPE . COMMANDS END_SCOPE

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 9 (COMMANDS)

    SCOPE            go to state 64
    BEGIN_SCOPE      go to state 34
    COMMANDS         go to state 65
    CONTROL_COMMAND  go to state 66
    COMMAND          go to state 67
    RETURN           go to state 68
    IF               go to state 69
    E                go to state 70
    INCREASE         go to state 71
    PREV_INCREASE    go to state 72
    ATTRIBUITION     go to state 73
    OP_ASSIGN        go to state 74
    COUT             go to state 75
    DECLARATION      go to state 76
    TYPE             go to state 18
    TERMINAL         go to state 77
    SIGNAL           go to state 78


state 35

   53 DECLARATIONS: DECLARATIONS DECLARATION ';' .

    $default  reduce using rule 53 (DECLARATIONS)


state 36

   55 DECLARATION: DECLARATION ',' . TK_ID
   56            | DECLARATION ',' . TK_ID TK_ASSIGN E

    TK_ID  shift, and go to state 79


state 37

   57 DECLARATION: TYPE TK_ID .
   58            | TYPE TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 80

    $default  reduce using rule 57 (DECLARATION)


state 38

    3 MAIN: TK_TYPE_INT TK_MAIN '(' . TK_TYPE_VOID ')'
    4     | TK_TYPE_INT TK_MAIN '(' . ')'

    TK_TYPE_VOID  shift, and go to state 81
    ')'           shift, and go to state 82


state 39

   75 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 75 (TYPE)


state 40

   77 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 77 (TYPE)


state 41

   80 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   82     | TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 83

    $default  reduce using rule 82 (TYPE)


state 42

   76 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_SHORT TK_TYPE_INT .

    $default  reduce using rule 76 (TYPE)


state 43

   78 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 78 (TYPE)


state 44

   81 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG . TK_TYPE_INT
   83     | TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG .

    TK_TYPE_INT  shift, and go to state 84

    $default  reduce using rule 83 (TYPE)


state 45

   79 TYPE: TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 79 (TYPE)


state 46

   84 TERMINAL: TK_INT .

    $default  reduce using rule 84 (TERMINAL)


state 47

   85 TERMINAL: TK_FLOAT .

    $default  reduce using rule 85 (TERMINAL)


state 48

   86 TERMINAL: TK_SCIENTIFIC .

    $default  reduce using rule 86 (TERMINAL)


state 49

   87 TERMINAL: TK_CHAR .

    $default  reduce using rule 87 (TERMINAL)


state 50

   92 TERMINAL: TK_STRING .

    $default  reduce using rule 92 (TERMINAL)


state 51

   93 TERMINAL: TK_BOOL .

    $default  reduce using rule 93 (TERMINAL)


state 52

   47 INCREASE: TK_ID . TK_OP_INCREASE
   49 ATTRIBUITION: TK_ID . TK_ASSIGN E
   51 OP_ASSIGN: TK_ID . TK_OP_ASSIGN E
   94 TERMINAL: TK_ID .

    TK_ASSIGN       shift, and go to state 85
    TK_OP_INCREASE  shift, and go to state 86
    TK_OP_ASSIGN    shift, and go to state 87

    $default  reduce using rule 94 (TERMINAL)


state 53

   61 TYPE: TK_TYPE_INT .

    $default  reduce using rule 61 (TYPE)


state 54

   96 SIGNAL: TK_OP_SUM .

    $default  reduce using rule 96 (SIGNAL)


state 55

   97 SIGNAL: TK_OP_SUB .

    $default  reduce using rule 97 (SIGNAL)


state 56

   43 E: TK_OP_LOGIC_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 88
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 57

   44 E: TK_OP_BIN_NOT . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 89
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 58

   18 RETURN: TK_RETURN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 90
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 59

   52 COUT: TK_COUT . '(' E ')'

    '('  shift, and go to state 91


state 60

   19 IF: TK_IF . '(' E ')' COMMAND
   20   | TK_IF . '(' E ')' COMMAND TK_ELSE COMMAND

    '('  shift, and go to state 92


state 61

   48 PREV_INCREASE: TK_OP_INCREASE . TK_ID

    TK_ID  shift, and go to state 93


state 62

   21 E: '(' . E ')'
   24  | '(' . TYPE ')' TERMINAL

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62

    E              go to state 94
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TYPE           go to state 95
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 63

   17 COMMAND: ';' .

    $default  reduce using rule 17 (COMMAND)


state 64

   15 COMMAND: SCOPE .

    $default  reduce using rule 15 (COMMAND)


state 65

    5 SCOPE: BEGIN_SCOPE COMMANDS . END_SCOPE

    '}'  shift, and go to state 96

    END_SCOPE  go to state 97


state 66

    8 COMMANDS: CONTROL_COMMAND . COMMANDS

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    $default  reduce using rule 9 (COMMANDS)

    SCOPE            go to state 64
    BEGIN_SCOPE      go to state 34
    COMMANDS         go to state 98
    CONTROL_COMMAND  go to state 66
    COMMAND          go to state 67
    RETURN           go to state 68
    IF               go to state 69
    E                go to state 70
    INCREASE         go to state 71
    PREV_INCREASE    go to state 72
    ATTRIBUITION     go to state 73
    OP_ASSIGN        go to state 74
    COUT             go to state 75
    DECLARATION      go to state 76
    TYPE             go to state 18
    TERMINAL         go to state 77
    SIGNAL           go to state 78


state 67

   10 CONTROL_COMMAND: COMMAND .

    $default  reduce using rule 10 (CONTROL_COMMAND)


state 68

   12 COMMAND: RETURN . ';'

    ';'  shift, and go to state 99


state 69

   16 COMMAND: IF .

    $default  reduce using rule 16 (COMMAND)


state 70

   11 COMMAND: E . ';'
   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117
    ';'                  shift, and go to state 118


state 71

   45 E: INCREASE .

    $default  reduce using rule 45 (E)


state 72

   46 E: PREV_INCREASE .

    $default  reduce using rule 46 (E)


state 73

   23 E: ATTRIBUITION .

    $default  reduce using rule 23 (E)


state 74

   50 ATTRIBUITION: OP_ASSIGN .

    $default  reduce using rule 50 (ATTRIBUITION)


state 75

   13 COMMAND: COUT . ';'

    ';'  shift, and go to state 119


state 76

   14 COMMAND: DECLARATION . ';'
   55 DECLARATION: DECLARATION . ',' TK_ID
   56            | DECLARATION . ',' TK_ID TK_ASSIGN E

    ';'  shift, and go to state 120
    ','  shift, and go to state 36


state 77

   22 E: TERMINAL .

    $default  reduce using rule 22 (E)


state 78

   88 TERMINAL: SIGNAL . TK_INT
   89         | SIGNAL . TK_FLOAT
   90         | SIGNAL . TK_SCIENTIFIC
   91         | SIGNAL . TK_CHAR
   95         | SIGNAL . TK_ID

    TK_INT         shift, and go to state 121
    TK_FLOAT       shift, and go to state 122
    TK_SCIENTIFIC  shift, and go to state 123
    TK_CHAR        shift, and go to state 124
    TK_ID          shift, and go to state 125


state 79

   55 DECLARATION: DECLARATION ',' TK_ID .
   56            | DECLARATION ',' TK_ID . TK_ASSIGN E

    TK_ASSIGN  shift, and go to state 126

    $default  reduce using rule 55 (DECLARATION)


state 80

   58 DECLARATION: TYPE TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 127
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 81

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID . ')'

    ')'  shift, and go to state 128


state 82

    4 MAIN: TK_TYPE_INT TK_MAIN '(' ')' .

    $default  reduce using rule 4 (MAIN)


state 83

   80 TYPE: TK_MODIFIER_UNSIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 80 (TYPE)


state 84

   81 TYPE: TK_MODIFIER_SIGNED TK_MODIFIER_LONG TK_MODIFIER_LONG TK_TYPE_INT .

    $default  reduce using rule 81 (TYPE)


state 85

   49 ATTRIBUITION: TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 129
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 86

   47 INCREASE: TK_ID TK_OP_INCREASE .

    $default  reduce using rule 47 (INCREASE)


state 87

   51 OP_ASSIGN: TK_ID TK_OP_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 130
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 88

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   43  | TK_OP_LOGIC_NOT E .

    $default  reduce using rule 43 (E)


state 89

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   44  | TK_OP_BIN_NOT E .

    $default  reduce using rule 44 (E)


state 90

   18 RETURN: TK_RETURN E .
   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 18 (RETURN)


state 91

   52 COUT: TK_COUT '(' . E ')'

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 131
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 92

   19 IF: TK_IF '(' . E ')' COMMAND
   20   | TK_IF '(' . E ')' COMMAND TK_ELSE COMMAND

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 132
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 93

   48 PREV_INCREASE: TK_OP_INCREASE TK_ID .

    $default  reduce using rule 48 (PREV_INCREASE)


state 94

   21 E: '(' E . ')'
   25  | E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117
    ')'                  shift, and go to state 133


state 95

   24 E: '(' TYPE . ')' TERMINAL

    ')'  shift, and go to state 134


state 96

    7 END_SCOPE: '}' .

    $default  reduce using rule 7 (END_SCOPE)


state 97

    5 SCOPE: BEGIN_SCOPE COMMANDS END_SCOPE .

    $default  reduce using rule 5 (SCOPE)


state 98

    8 COMMANDS: CONTROL_COMMAND COMMANDS .

    $default  reduce using rule 8 (COMMANDS)


state 99

   12 COMMAND: RETURN ';' .

    $default  reduce using rule 12 (COMMAND)


state 100

   25 E: E TK_OP_SUM . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 135
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 101

   26 E: E TK_OP_SUB . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 136
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 102

   27 E: E TK_OP_MUL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 137
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 103

   28 E: E TK_OP_DIV . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 138
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 104

   29 E: E TK_OP_MOD . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 139
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 105

   34 E: E TK_OP_REL_LESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 140
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 106

   35 E: E TK_OP_REL_GREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 141
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 107

   36 E: E TK_OP_REL_EQLESS . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 142
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 108

   37 E: E TK_OP_REL_EQGREATER . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 143
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 109

   32 E: E TK_OP_REL_EQ . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 144
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 110

   33 E: E TK_OP_REL_DIFF . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 145
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 111

   31 E: E TK_OP_LOGIC_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 146
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 112

   30 E: E TK_OP_LOGIC_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 147
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 113

   38 E: E TK_OP_BIN_AND . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 148
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 114

   39 E: E TK_OP_BIN_OR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 149
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 115

   40 E: E TK_OP_BIN_XOR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 150
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 116

   41 E: E TK_OP_BIN_SHIFTR . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 151
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 117

   42 E: E TK_OP_BIN_SHIFTL . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 152
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 118

   11 COMMAND: E ';' .

    $default  reduce using rule 11 (COMMAND)


state 119

   13 COMMAND: COUT ';' .

    $default  reduce using rule 13 (COMMAND)


state 120

   14 COMMAND: DECLARATION ';' .

    $default  reduce using rule 14 (COMMAND)


state 121

   88 TERMINAL: SIGNAL TK_INT .

    $default  reduce using rule 88 (TERMINAL)


state 122

   89 TERMINAL: SIGNAL TK_FLOAT .

    $default  reduce using rule 89 (TERMINAL)


state 123

   90 TERMINAL: SIGNAL TK_SCIENTIFIC .

    $default  reduce using rule 90 (TERMINAL)


state 124

   91 TERMINAL: SIGNAL TK_CHAR .

    $default  reduce using rule 91 (TERMINAL)


state 125

   95 TERMINAL: SIGNAL TK_ID .

    $default  reduce using rule 95 (TERMINAL)


state 126

   56 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN . E

    TK_INT           shift, and go to state 46
    TK_FLOAT         shift, and go to state 47
    TK_SCIENTIFIC    shift, and go to state 48
    TK_CHAR          shift, and go to state 49
    TK_STRING        shift, and go to state 50
    TK_BOOL          shift, and go to state 51
    TK_ID            shift, and go to state 52
    TK_OP_SUM        shift, and go to state 54
    TK_OP_SUB        shift, and go to state 55
    TK_OP_LOGIC_NOT  shift, and go to state 56
    TK_OP_BIN_NOT    shift, and go to state 57
    TK_OP_INCREASE   shift, and go to state 61
    '('              shift, and go to state 62

    E              go to state 153
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 127

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   58 DECLARATION: TYPE TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 58 (DECLARATION)


state 128

    3 MAIN: TK_TYPE_INT TK_MAIN '(' TK_TYPE_VOID ')' .

    $default  reduce using rule 3 (MAIN)


state 129

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   49 ATTRIBUITION: TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 49 (ATTRIBUITION)


state 130

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   51 OP_ASSIGN: TK_ID TK_OP_ASSIGN E .

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 51 (OP_ASSIGN)


state 131

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   52 COUT: TK_COUT '(' E . ')'

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117
    ')'                  shift, and go to state 154


state 132

   19 IF: TK_IF '(' E . ')' COMMAND
   20   | TK_IF '(' E . ')' COMMAND TK_ELSE COMMAND
   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117
    ')'                  shift, and go to state 155


state 133

   21 E: '(' E ')' .

    $default  reduce using rule 21 (E)


state 134

   24 E: '(' TYPE ')' . TERMINAL

    TK_INT         shift, and go to state 46
    TK_FLOAT       shift, and go to state 47
    TK_SCIENTIFIC  shift, and go to state 48
    TK_CHAR        shift, and go to state 49
    TK_STRING      shift, and go to state 50
    TK_BOOL        shift, and go to state 51
    TK_ID          shift, and go to state 156
    TK_OP_SUM      shift, and go to state 54
    TK_OP_SUB      shift, and go to state 55

    TERMINAL  go to state 157
    SIGNAL    go to state 78


state 135

   25 E: E . TK_OP_SUM E
   25  | E TK_OP_SUM E .
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUB  shift, and go to state 101
    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 25 (E)


state 136

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   26  | E TK_OP_SUB E .
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 26 (E)


state 137

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   27  | E TK_OP_MUL E .
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 27 (E)


state 138

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   28  | E TK_OP_DIV E .
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 28 (E)


state 139

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   29  | E TK_OP_MOD E .
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    $default  reduce using rule 29 (E)


state 140

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   34  | E TK_OP_REL_LESS E .
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 100
    TK_OP_SUB         shift, and go to state 101
    TK_OP_MUL         shift, and go to state 102
    TK_OP_DIV         shift, and go to state 103
    TK_OP_MOD         shift, and go to state 104
    TK_OP_BIN_AND     shift, and go to state 113
    TK_OP_BIN_OR      shift, and go to state 114
    TK_OP_BIN_XOR     shift, and go to state 115
    TK_OP_BIN_SHIFTR  shift, and go to state 116
    TK_OP_BIN_SHIFTL  shift, and go to state 117

    $default  reduce using rule 34 (E)


state 141

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   35  | E TK_OP_REL_GREATER E .
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 100
    TK_OP_SUB         shift, and go to state 101
    TK_OP_MUL         shift, and go to state 102
    TK_OP_DIV         shift, and go to state 103
    TK_OP_MOD         shift, and go to state 104
    TK_OP_BIN_AND     shift, and go to state 113
    TK_OP_BIN_OR      shift, and go to state 114
    TK_OP_BIN_XOR     shift, and go to state 115
    TK_OP_BIN_SHIFTR  shift, and go to state 116
    TK_OP_BIN_SHIFTL  shift, and go to state 117

    $default  reduce using rule 35 (E)


state 142

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   36  | E TK_OP_REL_EQLESS E .
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 100
    TK_OP_SUB         shift, and go to state 101
    TK_OP_MUL         shift, and go to state 102
    TK_OP_DIV         shift, and go to state 103
    TK_OP_MOD         shift, and go to state 104
    TK_OP_BIN_AND     shift, and go to state 113
    TK_OP_BIN_OR      shift, and go to state 114
    TK_OP_BIN_XOR     shift, and go to state 115
    TK_OP_BIN_SHIFTR  shift, and go to state 116
    TK_OP_BIN_SHIFTL  shift, and go to state 117

    $default  reduce using rule 36 (E)


state 143

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   37  | E TK_OP_REL_EQGREATER E .
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM         shift, and go to state 100
    TK_OP_SUB         shift, and go to state 101
    TK_OP_MUL         shift, and go to state 102
    TK_OP_DIV         shift, and go to state 103
    TK_OP_MOD         shift, and go to state 104
    TK_OP_BIN_AND     shift, and go to state 113
    TK_OP_BIN_OR      shift, and go to state 114
    TK_OP_BIN_XOR     shift, and go to state 115
    TK_OP_BIN_SHIFTR  shift, and go to state 116
    TK_OP_BIN_SHIFTL  shift, and go to state 117

    $default  reduce using rule 37 (E)


state 144

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   32  | E TK_OP_REL_EQ E .
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 32 (E)


state 145

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   33  | E TK_OP_REL_DIFF E .
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 33 (E)


state 146

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   31  | E TK_OP_LOGIC_AND E .
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 31 (E)


state 147

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   30  | E TK_OP_LOGIC_OR E .
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 30 (E)


state 148

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   38  | E TK_OP_BIN_AND E .
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 100
    TK_OP_SUB  shift, and go to state 101
    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 38 (E)


state 149

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   39  | E TK_OP_BIN_OR E .
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 100
    TK_OP_SUB  shift, and go to state 101
    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 39 (E)


state 150

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   40  | E TK_OP_BIN_XOR E .
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 100
    TK_OP_SUB  shift, and go to state 101
    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 40 (E)


state 151

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   41  | E TK_OP_BIN_SHIFTR E .
   42  | E . TK_OP_BIN_SHIFTL E

    TK_OP_SUM  shift, and go to state 100
    TK_OP_SUB  shift, and go to state 101
    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 41 (E)


state 152

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   42  | E TK_OP_BIN_SHIFTL E .

    TK_OP_SUM  shift, and go to state 100
    TK_OP_SUB  shift, and go to state 101
    TK_OP_MUL  shift, and go to state 102
    TK_OP_DIV  shift, and go to state 103
    TK_OP_MOD  shift, and go to state 104

    $default  reduce using rule 42 (E)


state 153

   25 E: E . TK_OP_SUM E
   26  | E . TK_OP_SUB E
   27  | E . TK_OP_MUL E
   28  | E . TK_OP_DIV E
   29  | E . TK_OP_MOD E
   30  | E . TK_OP_LOGIC_OR E
   31  | E . TK_OP_LOGIC_AND E
   32  | E . TK_OP_REL_EQ E
   33  | E . TK_OP_REL_DIFF E
   34  | E . TK_OP_REL_LESS E
   35  | E . TK_OP_REL_GREATER E
   36  | E . TK_OP_REL_EQLESS E
   37  | E . TK_OP_REL_EQGREATER E
   38  | E . TK_OP_BIN_AND E
   39  | E . TK_OP_BIN_OR E
   40  | E . TK_OP_BIN_XOR E
   41  | E . TK_OP_BIN_SHIFTR E
   42  | E . TK_OP_BIN_SHIFTL E
   56 DECLARATION: DECLARATION ',' TK_ID TK_ASSIGN E .

    TK_OP_SUM            shift, and go to state 100
    TK_OP_SUB            shift, and go to state 101
    TK_OP_MUL            shift, and go to state 102
    TK_OP_DIV            shift, and go to state 103
    TK_OP_MOD            shift, and go to state 104
    TK_OP_REL_LESS       shift, and go to state 105
    TK_OP_REL_GREATER    shift, and go to state 106
    TK_OP_REL_EQLESS     shift, and go to state 107
    TK_OP_REL_EQGREATER  shift, and go to state 108
    TK_OP_REL_EQ         shift, and go to state 109
    TK_OP_REL_DIFF       shift, and go to state 110
    TK_OP_LOGIC_AND      shift, and go to state 111
    TK_OP_LOGIC_OR       shift, and go to state 112
    TK_OP_BIN_AND        shift, and go to state 113
    TK_OP_BIN_OR         shift, and go to state 114
    TK_OP_BIN_XOR        shift, and go to state 115
    TK_OP_BIN_SHIFTR     shift, and go to state 116
    TK_OP_BIN_SHIFTL     shift, and go to state 117

    $default  reduce using rule 56 (DECLARATION)


state 154

   52 COUT: TK_COUT '(' E ')' .

    $default  reduce using rule 52 (COUT)


state 155

   19 IF: TK_IF '(' E ')' . COMMAND
   20   | TK_IF '(' E ')' . COMMAND TK_ELSE COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 158
    RETURN         go to state 68
    IF             go to state 69
    E              go to state 70
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    COUT           go to state 75
    DECLARATION    go to state 76
    TYPE           go to state 18
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 156

   94 TERMINAL: TK_ID .

    $default  reduce using rule 94 (TERMINAL)


state 157

   24 E: '(' TYPE ')' TERMINAL .

    $default  reduce using rule 24 (E)


state 158

   19 IF: TK_IF '(' E ')' COMMAND .
   20   | TK_IF '(' E ')' COMMAND . TK_ELSE COMMAND

    TK_ELSE  shift, and go to state 159

    TK_ELSE   [reduce using rule 19 (IF)]
    $default  reduce using rule 19 (IF)


state 159

   20 IF: TK_IF '(' E ')' COMMAND TK_ELSE . COMMAND

    TK_INT                shift, and go to state 46
    TK_FLOAT              shift, and go to state 47
    TK_SCIENTIFIC         shift, and go to state 48
    TK_CHAR               shift, and go to state 49
    TK_STRING             shift, and go to state 50
    TK_BOOL               shift, and go to state 51
    TK_ID                 shift, and go to state 52
    TK_TYPE_CHAR          shift, and go to state 5
    TK_TYPE_STRING        shift, and go to state 6
    TK_TYPE_INT           shift, and go to state 53
    TK_TYPE_VOID          shift, and go to state 8
    TK_TYPE_FLOAT         shift, and go to state 9
    TK_TYPE_DOUBLE        shift, and go to state 10
    TK_TYPE_BOOL          shift, and go to state 11
    TK_MODIFIER_UNSIGNED  shift, and go to state 12
    TK_MODIFIER_SIGNED    shift, and go to state 13
    TK_MODIFIER_SHORT     shift, and go to state 14
    TK_MODIFIER_LONG      shift, and go to state 15
    TK_OP_SUM             shift, and go to state 54
    TK_OP_SUB             shift, and go to state 55
    TK_OP_LOGIC_NOT       shift, and go to state 56
    TK_OP_BIN_NOT         shift, and go to state 57
    TK_RETURN             shift, and go to state 58
    TK_COUT               shift, and go to state 59
    TK_IF                 shift, and go to state 60
    TK_OP_INCREASE        shift, and go to state 61
    '('                   shift, and go to state 62
    '{'                   shift, and go to state 32
    ';'                   shift, and go to state 63

    SCOPE          go to state 64
    BEGIN_SCOPE    go to state 34
    COMMAND        go to state 160
    RETURN         go to state 68
    IF             go to state 69
    E              go to state 70
    INCREASE       go to state 71
    PREV_INCREASE  go to state 72
    ATTRIBUITION   go to state 73
    OP_ASSIGN      go to state 74
    COUT           go to state 75
    DECLARATION    go to state 76
    TYPE           go to state 18
    TERMINAL       go to state 77
    SIGNAL         go to state 78


state 160

   20 IF: TK_IF '(' E ')' COMMAND TK_ELSE COMMAND .

    $default  reduce using rule 20 (IF)
